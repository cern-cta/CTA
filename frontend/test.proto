syntax = "proto3";
option cc_generic_services = false;  //< Generic services are deprecated
package xrdssi.test;

// XRootD SSI Request

message Request {
  string message_text = 1;          //< Text of the request
}

// XRootD SSI Response

message Response {
  string message_text = 1;          //< Response text on success
}

message Error {
  enum Source   { SOURCE_NONE = 0; USER_ERROR = 1; CTA_ERROR = 2; CTA_TIMEOUT = 3; }
  enum Audience { AUDIENCE_NONE = 0; EOS_LOG = 1; END_USER = 2; }

  Source   source     = 1;          //< The source of the error
  bool     retry      = 2;          //< Whether to retry in case of failure
  Audience audience   = 3;          //< The intended audience of the error message
  string   text       = 4;          //< Empty on success, otherwise an error message
}

message Result {
  uint32 result_code = 1;           //< Zero on success, non-zero on error

  oneof response_or_error {
    Response response = 2;          //< Response in case of success
    Error    error    = 3;          //< Error in case of failure
  }
}

// XRootD SSI Service

service XrdSsiService {
  rpc SendRequest(Request) returns(Result);
}

