/*
 * Copyright (C) 1993-2001 by CERN/IT/PDP/DM
 * All rights reserved
 */

/*
 * @(#)$RCSfile: Imake.rules,v $ $Revision: 1.13 $ $Date: 2005/05/24 14:25:01 $ CERN IT-PDP/DM   Jean-Philippe Baud
 */

#define NullParameter

#ifndef ManPageTargetName
#if defined(__STDC__)
#define ManPageTargetName(name,dir,suffix)dir/name.suffix##castor
#else
#define ManPageTargetName(name,dir,suffix)dir/name.suffix/**/castor
#endif
#endif

#ifndef _WIN32
#if HasNroff
#define IMANPAGE(name,dir,suffix) \
dir/name.suffix:	name.man	@@\
	cat name.man | perl -pe 's/^\.TH +([^ ]+) *\"?(\d+)\"?/\.TH $$1 \"$${2}castor\"/g' | nroff -man > ManPageTargetName(name,dir,suffix)
#else
#define IMANPAGE(name,dir,suffix) \
dir/name.suffix:	name.man	@@\
	cat name.cat | perl -pe 's/^\.TH +([^ ]+) *\"?(\d+)\"?/\.TH $$1 \"$${2}castor\"/g' > ManPageTargetName(name,dir,suffix)
#endif
#else
#if HasNroff
#define IMANPAGE(name,dir,suffix) \
dir/name.suffix:	name.man	@@\
	nroff -man name.man > ManPageTargetName(name,dir,suffix)
#else
#define IMANPAGE(name,dir,suffix) \
dir/name.suffix:	name.man	@@\
	cp name.cat ManPageTargetName(name,dir,suffix)
#endif
#endif

#ifndef _WIN32
#define EMANPAGE(name,dir,suffix) \
dir/name.suffix:	name.man	@@\
	cat name.man | perl -pe 's/^.TH +([^ ]+) *\"?(\d+)\"?/\.TH $$1 \"$${2}castor\"/g' > ManPageTargetName(name,dir,suffix)
#else
#define EMANPAGE(name,dir,suffix) \
dir/name.suffix:	name.man	@@\
	cp name.man ManPageTargetName(name,dir,suffix)
#endif

#define IEXPORT(name,dir,mode) \
dir/name: name  @@\
	@(if [ ! -d $(DESTDIR)dir ]; then mkdir -p $(DESTDIR)dir ; fi ; ) @@\
	@cp name $(DESTDIR)dir/name @@\
	@chmod mode $(DESTDIR)dir/name @@\
	@echo $(DESTDIR)dir/name installed

#define LinkFile(tofile,fromfile) \
tofile: fromfile				@@\
	RemoveFile($@)				@@\
	$(LN) $? $@ 

#ifndef DepSourceName
#define DepSourceName(dirname,source)../dirname/source
#endif

#ifndef FileName
#define FileName(dirname,basename)dirname/basename
#endif

#ifndef LibraryTargetName
#if defined(__STDC__)
#define LibraryTargetName(libname)lib##libname.a
#else
#define LibraryTargetName(libname)lib/**/libname.a
#endif
#endif

#ifndef NormalLibraryTarget
#define NormalLibraryTarget(libname,objects) \
LibraryTargetName(libname): objects			@@\
	$(AR) $(ARFLAGS) $@ $?				@@\
	$(RANLIB) $@
#endif

#ifndef ExtendedLibraryTarget
#define ExtendedLibraryTarget(libname,objects,libs,deplibs) \
LibraryTargetName(libname): objects deplibs			@@\
	$(AR) $(ARFLAGS) $@ objects libs	@@\
	$(RANLIB) $@
#endif

#ifndef DepLibraryTargetName
#define DepLibraryTargetName(dir,libname)../dir/LibraryTargetName(libname)
#endif

#ifndef SharedLibraryTargetName
#if defined(__STDC__)
#define SharedLibraryTargetName(libname)lib##libname.so
#else
#define SharedLibraryTargetName(libname)lib/**/libname.so
#endif
#endif

#ifndef DepSharedLibraryTargetName
#define DepSharedLibraryTargetName(dir,libname)../dir/SharedLibraryTargetName(libname)
#endif

#ifndef SharedLibraryTarget
#define SharedLibraryTarget(libname,objects,deplibs,libs) \
SharedLibraryTargetName(libname): objects deplibs     @@\
	$(LD) -shared -o $@ $(LDFLAGS) objects libs
#endif

#ifndef DepSharedLibraryTargetName
#define DepSharedLibraryTargetName(dir,libname)../dir/SharedLibraryTargetName(libname)
#endif

#ifndef MakeDepLibrary
#define MakeDepLibrary(dir,libname) \
DepLibraryTargetName(dir,libname):	FORCE		@@\
	cd ../dir ; $(MAKE) LibraryTargetName(libname)
#endif

#ifndef MakeDepSharedLibrary
#define MakeDepSharedLibrary(dir,libname) \
DepSharedLibraryTargetName(dir,libname):	FORCE		@@\
	cd ../dir ; $(MAKE) SharedLibraryTargetName(libname)
#endif

#ifndef ProgramTargetName
#define ProgramTargetName(target)target
#endif

#ifndef NormalProgramTarget
#define NormalProgramTarget(program,objects,deplibs,libs) \
ProgramTargetName(program): objects deplibs		@@\
	$(LD) -o $@ $(LDFLAGS) objects libs
#endif

#ifndef MakeSubdirs
#define MakeSubdirs(name,dirs) \
name:						@@\
	@for i in dirs ;\			@@\
	do (echo " $$i:" ; cd $$i ;\		@@\
		$(MAKE) $(MFLAGS) $@ \		@@\
	) ; done
#endif

#ifndef MakeCondSubdirs
#define MakeCondSubdirs(name,dirs,cond) \
name:: cond						@@\
	@for i in dirs ;\			@@\
	do (echo " $$i:" ; cd $$i ;\		@@\
		$(MAKE) $(MFLAGS) $@ \		@@\
	) ; done
#endif

#ifndef RemoveFile
#define RemoveFile(file) $(RM) -f file
#endif

#ifndef RemoveFiles
#define RemoveFiles(files) $(RM) -f files
#endif

#if linux
#ifndef InstallTarget
#define InstallTarget(file,owner,group,mode,dest)	@@\
dest/file: file				@@\
	install -o owner -g group -m mode $? $(DESTDIR)dest
#endif
#else
#ifndef InstallTarget
#define InstallTarget(file,owner,group,mode,dest)	@@\
dest/file: file				@@\
	-mv $(DESTDIR)$@ $(DESTDIR)dest/OLD$?		@@\
	cp $? $(DESTDIR)$@				@@\
	chown owner $(DESTDIR)$@			@@\
	chgrp group $(DESTDIR)$@			@@\
	chmod mode $(DESTDIR)$@
#endif
#endif

#if linux
#ifndef InstallLibrary
#define InstallLibrary(libname,dest,owner,group,mode)	@@\
dest/LibraryTargetName(libname): LibraryTargetName(libname)	@@\
	install -o owner -g group -m mode $? $(DESTDIR)dest
#endif
#else
#ifndef InstallLibrary
#define InstallLibrary(libname,dest,owner,group,mode)	@@\
dest/LibraryTargetName(libname): LibraryTargetName(libname)	@@\
	-mv $(DESTDIR)$@ $(DESTDIR)dest/OLD$?		@@\
	cp $? $(DESTDIR)$@				@@\
	@$(RANLIB) $(DESTDIR)$(LIB)/$?			@@\
	chown owner $(DESTDIR)$@			@@\
	chgrp group $(DESTDIR)$@			@@\
	chmod mode $(DESTDIR)$@
#endif
#endif

#define InstallNonExecFile(file,dest,owner,group,mode)	@@\
InstallTarget(file,owner,group,mode,dest)

#define InstallProgram(program,dest,owner,group,mode)	@@\
InstallTarget(ProgramTargetName(program),owner,group,mode,dest)

#if linux
#ifndef InstallSharedLibrary
#define InstallSharedLibrary(libname,maj,min,dest)		@@\
dest/SharedLibraryTargetName(libname): SharedLibraryTargetName(libname)	@@\
	install $?.maj.min $(DESTDIR)$@.maj.min		@@\
	RemoveFile($(DESTDIR)$@.maj)			@@\
	ln -s $?.maj.min $(DESTDIR)$@.maj		@@\
	RemoveFile($(DESTDIR)$@)			@@\
	ln -s $?.maj $(DESTDIR)$@
#endif
#else
#ifndef InstallSharedLibrary
#define InstallSharedLibrary(libname,maj,min,dest)		@@\
dest/SharedLibraryTargetName(libname): SharedLibraryTargetName(libname)	@@\
	cp $?.maj.min $(DESTDIR)$@.maj.min		@@\
	RemoveFile($(DESTDIR)$@.maj)			@@\
	ln -s $?.maj.min $(DESTDIR)$@.maj		@@\
	RemoveFile($(DESTDIR)$@)			@@\
	ln -s $?.maj $(DESTDIR)$@
#endif
#endif

#if linux
#ifndef MakeDir
#define MakeDir(dirname,owner,group,mode)		@@\
dirname:						@@\
	-install -d $(DESTDIR)dirname -o owner -g group -m mode
#endif
#else
#ifndef MakeDir
#define MakeDir(dirname,owner,group,mode)		@@\
dirname:						@@\
	-mkdir -p $(DESTDIR)$@				@@\
	chown owner $(DESTDIR)$@			@@\
	chgrp group $(DESTDIR)$@			@@\
	chmod mode $(DESTDIR)/$@
#endif
#endif
