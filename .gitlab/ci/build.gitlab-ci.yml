.build-cta:
  retry: 1
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $SYSTEMTESTS_ONLY == "TRUE"
      when: never
    - if: $PIPELINE_TYPE == "EOS_REGR_AGAINST_CTA_TAG"
      when: never
    - if: $PIPELINE_TYPE == "CTAGENERIC_IMAGE"
      when: never
  image: $IMAGE_BUILD
  artifacts:
    expire_in: 30 days
    paths:
      - ${BUILD_PATH}

# Generic build jobs for rpms and srpms

build-cta-srpm:
  stage: build
  extends:
    - .build-cta
  needs:
    - job: modify-versionlock
      optional: true
  rules:
    - !reference [.build-cta, rules]
    - when: on_success
  variables:
    BUILD_PATH: "build_srpm/RPM/SRPMS/"
  script:
    - ./continuousintegration/build/build_srpm.sh --build-dir build_srpm
                                                  --build-generator "${BUILD_GENERATOR}"
                                                  --create-build-dir
                                                  --cta-version ${CTA_VERSION}
                                                  --vcs-version ${CTA_BUILD_ID}
                                                  --scheduler-type ${SCHED_TYPE}
                                                  --oracle-support ${ORACLE_SUPPORT}
                                                  --cmake-build-type "${CMAKE_BUILD_TYPE}"
                                                  --jobs $(nproc)

build-cta-rpm:
  stage: build
  extends:
    - .build-cta
  needs:
    - job: build-cta-srpm
    - job: modify-versionlock
      optional: true
      artifacts: true
  rules:
    - !reference [.build-cta, rules]
    - when: on_success
  variables:
    BUILD_PATH: "build_rpm/RPM/RPMS"
    XRD_SSI_PATH: "xrootd-ssi-protobuf-interface"
  script:
    - |
      if [ -z "${CI_COMMIT_TAG}" ]; then
        export VCS_VERSION=$CTA_BUILD_ID
      else
        export CTA_VERSION=$(echo ${CI_COMMIT_TAG} | awk -F '[v-]' '{print $2}')
        export VCS_VERSION=$(echo ${CI_COMMIT_TAG} | awk -F '-' '{if(NF>1) print $2; else print 0}')
        echo "Building package for tag ${CI_COMMIT_TAG}. CTA_VERSION=${CTA_VERSION} - CTA_RELEASE=${VCS_VERSION}"
      fi
    - export XRD_SSI_VERSION=$(git --git-dir=$XRD_SSI_PATH/.git --work-tree=$XRD_SSI_PATH describe --tags --abbrev=0)
    - |
      if [ -z "$XRD_SSI_VERSION" ]; then
        echo "Error: failed to find tag for submodule $XRD_SSI_PATH"
        exit 1
      fi
    - ./continuousintegration/build/build_rpm.sh --build-dir build_rpm
                                                 --build-generator "${BUILD_GENERATOR}"
                                                 --create-build-dir
                                                 --srpm-dir build_srpm/RPM/SRPMS
                                                 --cta-version ${CTA_VERSION}
                                                 --vcs-version ${VCS_VERSION}
                                                 --xrootd-ssi-version ${XRD_SSI_VERSION}
                                                 --scheduler-type ${SCHED_TYPE}
                                                 --oracle-support ${ORACLE_SUPPORT}
                                                 --cmake-build-type "${CMAKE_BUILD_TYPE}"
                                                 --jobs $(nproc)
                                                 --install-srpms

# Documentation export

export-docs:
  needs: []
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - echo "Exporting man pages (Markdown)"
    - mkdir docs
    - /usr/bin/find . -path ./docs -prune -o -name '*cta.md' -exec cp {} docs/ \;
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - docs/
