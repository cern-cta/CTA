# Job to modify the version lock list file for external triggers
modify-versionlock:
  stage: setup
  rules:
    - if: $PIPELINE_TYPE == "EOREG_CTAMAIN"
    - if: $PIPELINE_TYPE == "EOSREG_CTATAG"
  script:
    - versionlock_path_main="continuousintegration/docker/ctafrontend/alma9/etc/yum/pluginconf.d/"
    - versionlock_file="${versionlock_path_main}versionlock.list"
    - |
      if [ -n "${P_TYPE_EOSREG_CTA_TAG}" ]; then
        versionlock_file=$(./continuousintegration/ci_helpers/find_versionlock_list.sh --tag "${P_TYPE_EOSREG_CTA_TAG}")
      fi
    - git checkout ${P_TYPE_EOSREG_CTA_TAG} -- "${versionlock_file}"
    - |
      echo "Extracting the currently version locked EOS version from the file..."
      current_eos_version=$(grep -o 'eos-server-[0-9]\+\.[0-9]\+\.[0-9]\+' "${versionlock_file}" | awk -F '-' '{print $3}' | head -1)
      echo "Current version found: $current_eos_version"
      if [ -z "$current_eos_version" ]; then
        echo "Version not found! Exiting.";
        exit 1;
      fi
      echo "Replacing $current_eos_version with $P_TYPE_EOSREG_EOS_TAG in the file..."
      sed -i "s/$current_eos_version/$P_TYPE_EOSREG_EOS_TAG/g" ${versionlock_file}
      # Check if XROOTD_VERSION is provided and not just whitespace
      trimmed_xrootd_version=$(echo "$P_TYPE_EOSREG_XRD_TAG" | xargs)
      # Check if P_TYPE_EOSREG_XRD_TAG is provided
      if [ -n "$trimmed_xrootd_version" ]; then
        echo "Extracting the currently version locked XRootD version from the file..."
        current_xrootd_version=$(grep -o 'xrootd-server-\([0-9]:\)*[0-9]\+\.[0-9]\+\.[0-9]\+' "${versionlock_file}" | awk -F '-' '{print $3}' | head -1)
        echo "Current XRootD version found: $current_xrootd_version"

        if [ -n "$current_xrootd_version" ]; then
          echo "Replacing $current_xrootd_version with $P_TYPE_EOSREG_XRD_TAG in the file..."
          sed -i "s/$current_xrootd_version/$P_TYPE_EOSREG_XRD_TAG/g" "${versionlock_file}"
        else
          echo "XRootD version not found in the file."
        fi
        # Replace xrootd version in spec file
        sed -i "s/^%define xrootdVersion $current_xrootd_version/%define xrootdVersion $P_TYPE_EOSREG_XRD_TAG/" cta.spec.in
      else
        echo "P_TYPE_EOSREG_XRD_TAG is not provided. Skipping XRootD version replacement."
      fi

    - echo "File content after replacement:"
    - cat "${versionlock_file}"
    - |
      if [ "${versionlock_path_main}versionlock.list" != "${versionlock_file}" ]; then
        echo "Overwritting versionlock file as tagged version lock file resides in a different path."
        cp "${versionlock_file}" "${versionlock_path_main}"
      fi
  artifacts:
    paths:
      - continuousintegration/docker/ctafrontend/alma9/etc/yum/pluginconf.d/versionlock.list
      - cta.spec.in
  when: on_success
