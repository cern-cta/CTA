cppcheck:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $SYSTEMTESTS_ONLY == "TRUE"
      when: never
    - when: always
  stage: analysis
  image:
    name: neszt/cppcheck-docker
    entrypoint: ["/usr/bin/env"]
  before_script:
    - ''
  script:
    - cppcheck --xml --force --enable=warning,performance --inline-suppr --suppressions-list=.cppcheck-suppressions.txt . 2> cppcheck_out.xml
  artifacts:
    expire_in: 2 days
    paths:
    - cppcheck_out.xml


# based on https://gitlab.com/ahogen/cppcheck-codequality
cppcheck_report:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $SYSTEMTESTS_ONLY == "TRUE"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: always
  stage: analysis
  needs: [ cppcheck ]
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base
  before_script:
    - yum -y install python-pip
    - python3 -m pip install -U cppcheck_codequality
  script:
    - cppcheck-codequality --input-file=cppcheck_out.xml --output-file=cppcheck.json
    - if cat cppcheck_out.xml | grep -q "<error\s"; then echo "ERRORS have been detected"; exit 1; fi;
  artifacts:
    reports:
      codequality: cppcheck.json

clang_format:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $SYSTEMTESTS_ONLY == "TRUE"
      when: never
    - when: always
  stage: analysis
  image:
    name: gitlab-registry.cern.ch/linuxsupport/alma9-base
    entrypoint: [""]
  script:
    - yum install -y git-clang-format
    - TARGET_BRANCH=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:-main}
    - echo "Running clang-format for changes compared to branch $TARGET_BRANCH"
    - git-clang-format $TARGET_BRANCH HEAD --diff > clang-format.output
  artifacts:
    paths:
    - clang-format.output

catalogue_schema_version_check:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $SYSTEMTESTS_ONLY == "TRUE"
      when: never
    # For pivot CTA releases: vX.Y.0
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^.*\.0\.[0-9]+-[^-]*$/
      when: on_success
      allow_failure: false
      variables:
        CATALOGUE_SCHEMA_CHECK_PARAMS: "-p -t"
    # For non-pivot CTA releases
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^.*\.0\.[0-9]+-[^-]*$/
      when: on_success
      allow_failure: false
      variables:
        CATALOGUE_SCHEMA_CHECK_PARAMS: "-n -t"
    # Any run on main
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
      allow_failure: false
      variables:
        CATALOGUE_SCHEMA_CHECK_PARAMS: "-t"
    # Any merge requests into main
    #- if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    #  when: on_success
    #  allow_failure: false
    #  variables:
    #    CATALOGUE_SCHEMA_CHECK_PARAMS: "-t"
    # For all other scenarios, manual run only
    - when: on_success
    - allow_failure: false
    - variables:
        CATALOGUE_SCHEMA_CHECK_PARAMS: ""
  stage: analysis
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  before_script:
    - yum install -y git
    - git submodule update --init --recursive
  script:
    - ./continuousintegration/ci_helpers/catalogue_schema_version_check.sh ${CATALOGUE_SCHEMA_CHECK_PARAMS} .
