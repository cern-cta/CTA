# If the CTA tagged branch contains a locked EOS version that is different than
# the one in the main brach, it is possible that some of the system tests fail
# due to a change in an interface. This failure is expected, but does not have
# to be always the case, as an upgrade of the locked EOS version might happen
# for performance issues and not a interface change.
#
# The pupose of this job is to alert the person reviewing why a triggered pipeline
# that the version locked EOS versions differ.
pipeline-variable-check:
  stage: validation
  rules:
    - if: $PIPELINE_TYPE != "DEFAULT"
  script:
    # Transform input to sciprt as JSON to simplify life
    - input_json="{"
    - |
      for var_name in $(cat .gitlab-ci.yml | egrep '^  ([A-Z0-9]|_)+: .*$' | awk -F ':' '{print $1}'); do
        input_json=${input_json}"\"${var_name}\":\"${!var_name}\","
      done
    - input_json="${input_json::-1}}" # Remove trailing ',' and add }
    - echo ${input_json} | jq
    # Put it as an env variable to be fetched by the pythons script as
    # input argument might be too long.
    - export input_json
    - python3 ./continuousintegration/ci_helpers/ci_input_validate.py input_json

check-versionlock-diff:
  stage: validation
  allow_failure: true
  rules:
    - if: $PIPELINE_TYPE == "EOSREG_CTATAG"
  needs:
    - pipeline-variable-check
  script:
    - echo "Checking if EOS locked versions match for tag and main."
    - eos_main_v=$(grep -o 'eos-server-[0-9]\+\.[0-9]\+\.[0-9]\+' "continuousintegration/docker/ctafrontend/alma9/etc/yum/pluginconf.d/versionlock.list" | awk -F '-' '{print $3}' | head -1)
    - echo "Locked version for main branch $eos_main_v"
    - tag_versionlock_file=$(./continuousintegration/ci_helpers/find_versionlock_list.sh --tag "${CTA_TAG}")
    - git checkout ${CTA_TAG} -- "${tag_versionlock_file}"
    - eos_tag_v=$(grep -o 'eos-server-[0-9]\+\.[0-9]\+\.[0-9]\+' "${tag_versionlock_file}" | awk -F '-' '{print $3}' | head -1)
    - echo "Locked version for tagged branch $eos_tag_v"
    - |
      if [ "${eos_main_v}" == "${eos_tag_v}" ]; then
        echo "Version match. No test should fail."
        exit 0
      else
        echo "Version mismatch, some tests might fail."
        exit 1
      fi
