# All of the below tests use only the docker image generated in the build:image stage
# These are also the only tests executed on our personal cirunners instead of the GitLab runners

.kubernetes-test:
  needs:
    - job: docker-build-ctageneric
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $SYSTEMTESTS_ONLY == "TRUE"
      when: never
    - when: on_success
  variables:
    TEST_SCRIPT:
    EXTENDED_OPTIONS:
  before_script:
    - bash ./continuousintegration/ci_helpers/install_helm.sh
  script:
    # Keep the namespace name under 64 characters;
    - export NAMESPACE="${CI_JOB_NAME_SLUG:0:10}-${CTA_BUILD_ID}-${CI_JOB_ID}"
    - git submodule update --init --recursive
    - cd continuousintegration/orchestration/
    - if [[ ${SYSTEMTESTS_ONLY} == "TRUE" ]]; then ONLY_SYSTEST_OPT='-Q' ; fi
    - ./run_systemtest.sh -n ${NAMESPACE}
                          -p ${CI_PIPELINE_ID}
                          -s ${TEST_SCRIPT}
                          ${EXTENDED_OPTIONS}
                          ${ONLY_SYSTEST_OPT}
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - pod_logs
  tags:
    - kubernetes
    - mhvtl

# Tests

k8s-test-client:
  stage: test
  extends:
    - .kubernetes-test
  variables:
    TEST_SCRIPT: "tests/test_client.sh"
    EXTENDED_OPTIONS: "-O -D -t 2400 -C"

k8s-test-client-gfal2:
  stage: test
  extends:
    - .kubernetes-test
  variables:
    TEST_SCRIPT: "tests/test_client-gfal2.sh"
    EXTENDED_OPTIONS: "-O -D -t 2400 -C"

k8s-test-repack:
  stage: test
  extends:
    - .kubernetes-test
  variables:
    TEST_SCRIPT: "tests/repack_systemtest_wrapper.sh"
    EXTENDED_OPTIONS: "-O -D -t 2400 -C"

k8s-test-cta-admin:
  stage: test
  extends:
    - .kubernetes-test
  variables:
    TEST_SCRIPT: "tests/test_cta-admin.sh"
    EXTENDED_OPTIONS: "-O -D -t 2400 -C"

k8s-unit-test-oracle:
  stage: test
  extends:
    - .kubernetes-test
  variables:
    # The extended option execute a special code path in `create_instance.sh` that just spawns a pod
    # that runs the oracle unit tests. The script this pod runs is `pod-oracleunittests.sh`, and the
    # pod's yaml file is `pod-oracleunittests.yaml`
    TEST_SCRIPT: "/usr/bin/true"
    EXTENDED_OPTIONS: "-O -D -U -t 600 -C"

# Manually triggered

.manual-rules:
  rules:
    # For pivot CTA releases: vX.Y.0
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^.*\.0\.[0-9]+-[^-]*$/
      when: on_success
    # For non-pivot CTA releases
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^.*\.0\.[0-9]+-[^-]*$/
      when: manual
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: on_success

k8s-test-liquibase-update:
  stage: test
  extends:
    - .kubernetes-test
  rules:
    - !reference [.manual-rules, rules]
  variables:
    TEST_SCRIPT: "tests/update_db_test.sh"
    EXTENDED_OPTIONS: "-O -D -t 2400 -C -u"

k8s-test-external-tape-formats:
  stage: test
  extends:
    - .kubernetes-test
  rules:
    - !reference [.manual-rules, rules]
  variables:
    TEST_SCRIPT: "tests/external_tapes_test.sh"
    EXTENDED_OPTIONS: "-O -D -t 2400 -C"

k8s-test-regression-dCache:
  stage: test
  extends:
    - .kubernetes-test
  rules:
    - !reference [.manual-rules, rules]
  variables:
    TEST_SCRIPT: "tests/test_regression_dCache.sh"
    EXTENDED_OPTIONS: "-O -D -S -C"
  tags:
    - kubernetes
    #- mhvtl
    - xlarge
