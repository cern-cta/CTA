# All of the below tests use only the docker image generated in the build:image stage
# These are also the only tests executed on our personal runners instead of the GitLab runners

.setup-k8s-test-variables: &setup-k8s-test-variables
    - | # Which scheduler config to use
      if [ $SCHEDULER_TYPE == "objectstore" ]; then
        SCHEDULER_CONFIG=/opt/kubernetes/CTA/scheduler/ci-ceph-values.yaml
      else
        SCHEDULER_CONFIG=presets/dev-scheduler-postgres-values.yaml
      fi
    - | # Which catalogue config to use
      if [ $ORACLE_SUPPORT == "TRUE" ]; then
        CATALOGUE_CONFIG=/opt/kubernetes/CTA/catalogue/ci-oracle-values.yaml
      else
        CATALOGUE_CONFIG=presets/dev-catalogue-postgres-values.yaml
      fi
    - | # Which image tag to use
      if [ $PIPELINE_TYPE == "SYSTEM_TEST_ONLY" ]; then
        if [ -z "$CUSTOM_SYSTEM_TEST_IMAGE_TAG" ]; then
          IMAGE_TAG=$(./continuousintegration/utils/get_latest_image_tag_on_branch.sh --branch $CI_DEFAULT_BRANCH)
        else
          IMAGE_TAG=$CUSTOM_SYSTEM_TEST_IMAGE_TAG
        fi
      else
        IMAGE_TAG=$CTA_BUILD_ID
      fi
    # If we are testing from a CTA tag, get the Catalogue version for that tag
    - |
      if [ -n "${CUSTOM_CTA_VERSION}" ]; then
        git fetch --tags --force
        if git checkout "tags/$CUSTOM_CTA_VERSION" -- project.json; then
          catalogue_version=$(jq -r '.catalogueVersion' project.json)
          git restore project.json
        else
          # If the project.json does not exist, just assume catalogue version 15.0
          catalogue_version=15.0
        fi
        EXTRA_SPAWN_ARGS+=" --catalogue-version ${catalogue_version}"
      fi
    # Additional config
    - |
      if [ -n "${CUSTOM_CTA_VALUES_FILE}" ]; then
        EXTRA_SPAWN_ARGS+=" --cta-config ${CUSTOM_CTA_VALUES_FILE}"
      fi
    - |
      if [ -n "${CUSTOM_EOS_VALUES_FILE}" ]; then
        EXTRA_SPAWN_ARGS+=" --eos-config ${CUSTOM_EOS_VALUES_FILE}"
      fi
    # Export all variables here so that it is clear which ones are available
    - export SCHEDULER_CONFIG CATALOGUE_CONFIG IMAGE_TAG EXTRA_SPAWN_ARGS


.kubernetes-test:
  needs:
    - job: build-ctageneric-from-local-rpms
      optional: true # Otherwise the SYSTEM_TEST_ONLY PIPELINE_TYPE won't work
    - job: build-ctageneric-from-remote-rpms
      optional: true
    - job: prepare
      optional: true
    - job: modify-catalogue-version
      optional: true
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $PIPELINE_TYPE == "IMAGE_FROM_CTA_VERSION"
      when: never
    - if: $SCHEDULER_TYPE == "pgsched"
      when: manual
    - when: on_success
  variables:
    TEST_SCRIPT:
    # Passed to the run_systemtest.sh script verbatim
    EXTRA_RUN_ARGS: ""
    # Passed to the create_instance.sh script verbatim
    EXTRA_SPAWN_ARGS: ""
    # Passed to the test script verbatim
    EXTRA_TEST_ARGS: ""
  before_script:
    - bash ./continuousintegration/checks/check_runner_healthy.sh
    - *setup-k8s-test-variables
  script:
    # Keep the namespace name under 64 characters;
    # Otherwise the eos mgm fqdn becomes too long and things start failing
    - NAMESPACE="${CI_JOB_NAME_SLUG:0:18}-${CI_PIPELINE_ID}"
    # Set up the additional arguments array to pass to the run_systemtest.sh script
    - extra_args=($EXTRA_ARGS)
    - if [[ -n "${EXTRA_SPAWN_ARGS}" ]]; then extra_args+=(--spawn-options "${EXTRA_SPAWN_ARGS}"); fi
    - if [[ -n "${EXTRA_TEST_ARGS}" ]];  then extra_args+=(--test-options "${EXTRA_TEST_ARGS}"); fi
    # Run test
    - cd continuousintegration/orchestration/
    - ./run_systemtest.sh --namespace ${NAMESPACE}
                          --cta-image-tag ${IMAGE_TAG}
                          --cleanup-namespaces
                          --keep-namespace
                          --catalogue-config ${CATALOGUE_CONFIG}
                          --scheduler-config ${SCHEDULER_CONFIG}
                          --test-script ${TEST_SCRIPT}
                          "${extra_args[@]}"
                          ${EXTRA_RUN_ARGS}
  after_script:
    # Repeat the namespace declaration here as the after_script does not have access to previously exported variables
    - NAMESPACE="${CI_JOB_NAME_SLUG:0:18}-${CI_PIPELINE_ID}"
    # This also gets called if the job is cancelled to ensure we properly clean up after ourselves
    - cd continuousintegration/orchestration/
    - ./delete_instance.sh --namespace ${NAMESPACE}
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - pod_logs
  tags: # Used to indicate that these jobs should run on our own runners
    - kubernetes
    - mhvtl

# Tests
test-nooba:
  stage: system-test
  extends:
    - .kubernetes-test
  tags:
    - noobaa
  variables:
    TEST_SCRIPT: "tests/test_noobaa.sh"
    EXTRA_RUN_ARGS: "--test-timeout 2400"
