prepare-rootfs:
  stage: sbom
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base:latest
  needs:
    - job: build-cta-rpm
  variables:
    ROOTFS: '/tmp/installroot'
    CTA_RPMS_PATH: "build_rpm/RPM/RPMS"
    CTA_REPO_DIR: /opt/repo
  script:
    - dnf -y install dnf-plugins-core createrepo
    - rm -rf "$ROOTFS" && mkdir -p "$ROOTFS"
    - mkdir -p "${CTA_REPO_DIR}/RPMS/x86_64"
    - cp -r ${CTA_RPMS_PATH} ${CTA_REPO_DIR}/RPMS/x86_64
    - createrepo "${CTA_REPO_DIR}"
    - |
      cat >/etc/yum.repos.d/cta.repo <<EOF
      [cta]
      name=CTA RPM repo
      baseurl=file://${CTA_REPO_DIR}
      enabled=1
      gpgcheck=0
      EOF
    - dnf install -y
          --releasever=9
          --setopt=install_weak_deps=False
          --setopt=tsflags=nodocs
          cta-release epel-release
    - cta-versionlock apply
    - dnf install -y --installroot="${ROOTFS}"
          --releasever=9
          --setopt=install_weak_deps=False
          --setopt=tsflags=nodocs
          "cta-*"
    - rm -rf "${ROOTFS}"/var/cache/dnf/* || true
    - tar -C "${ROOTFS}" -czf installroot.tar.gz .
  artifacts:
    # Don't keep this artifact too long as it is quite large
    expire_in: 1 days
    paths:
      - installroot.tar.gz


generate-sbom-trivy:
  stage: sbom
  image: registry.cern.ch/docker.io/aquasec/trivy:canary
  needs:
    - job: prepare-rootfs
  rules:
    - when: on_success
  variables:
    SBOM_OUT_PATH: sboms/sbom-trivy.json
    ROOTFS: '/tmp/installroot'
  before_script:
    - mkdir -p sboms
    - mkdir -p "$ROOTFS"
    - tar -C "$ROOTFS" -xzf installroot.tar.gz
  script:
    - trivy rootfs --pkg-types os
                   --format cyclonedx
                   --disable-telemetry
                   --output "${SBOM_OUT_PATH}"
                   "${ROOTFS}"
  artifacts:
    expire_in: 30 days
    paths:
      - ${SBOM_OUT_PATH}

generate-sbom-syft:
  stage: sbom
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base:latest
  needs:
    - job: prepare-rootfs
  rules:
    - when: on_success
  variables:
    SBOM_OUT_PATH: sboms/sbom-syft.json
    ROOTFS: '/tmp/installroot'
  before_script:
    - mkdir -p sboms
    - mkdir -p "$ROOTFS"
    - tar -C "$ROOTFS" -xzf installroot.tar.gz
  script:
    - curl -sSfL https://get.anchore.io/syft | sh -s -- -b /usr/local/bin
    - syft "dir:${ROOTFS}" -o cyclonedx-json --select-catalogers rpm > "${SBOM_OUT_PATH}"
  artifacts:
    expire_in: 30 days
    paths:
      - ${SBOM_OUT_PATH}

enrich-sbom-parlay:
  stage: sbom
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base:latest
  needs:
    - job: generate-sbom-trivy
  rules:
    - when: on_success
  variables:
    SBOM_IN_FILE: sboms/sbom-trivy.json
    SBOM_OUT_FILE: sboms/enriched-parlay.cdx.json
    SNYK_PARLAY_VERSION: 0.9.0
  before_script:
    - dnf install -y wget diffutils
    - wget https://github.com/snyk/parlay/releases/download/v${SNYK_PARLAY_VERSION}/parlay_${SNYK_PARLAY_VERSION}_linux_amd64.rpm
    - dnf install -y parlay_${SNYK_PARLAY_VERSION}_linux_amd64.rpm
  script:
    - cat $SBOM_IN_FILE | parlay ecosystems enrich - | parlay scorecard enrich - > $SBOM_OUT_FILE
    - test -s $SBOM_OUT_FILE
    - diff $SBOM_IN_FILE $SBOM_OUT_FILE
  artifacts:
    expire_in: 30 days
    paths:
      - $SBOM_OUT_FILE

enrich-sbom-cern-info:
  stage: sbom
  image: registry.cern.ch/code-scanners/sbom-helper:latest
  needs:
    - job: enrich-sbom-parlay
  rules:
    - when: on_success
  variables:
    SBOM_IN_FILE: sboms/enriched-parlay.cdx.json
    SBOM_OUT_FILE: sboms/enriched-cern.cdx.json
  script:
    # TODO: figure out correct values for the annotator and contact
    - |
      export APP_NAME="$CI_PROJECT_NAME"
      export SERVICE_ELEMENT="CTA for Physics"
      export UNIT="IT-SD-TAB"
      export CONTACT="$GITLAB_USER_EMAIL"
      export ANNOTATOR="$GITLAB_USER_NAME"
      export URL="$CI_PROJECT_URL"
    - python /app/src/sbom-helper/main.py --env -i $SBOM_IN_FILE
    - cp sboms-output/$SBOM_IN_FILE $SBOM_OUT_FILE
  artifacts:
    expire_in: 30 days
    paths:
      - $SBOM_OUT_FILE

update-app-deps:
  stage: sbom
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base:latest
  needs:
    - job: enrich-sbom-cern-info
  rules:
    - when: on_success
  variables:
    SBOM_IN_FILE: sboms/enriched-cern.cdx.json
    SBOM_OUT_FILE: sboms/cta.cdx.json
    APP_RPM_PREFIX: "cta-"
  script:
    - python3 continuousintegration/sbom/update_app_deps.py --in $SBOM_IN_FILE
                                                            --out $SBOM_OUT_FILE
                                                            --prefix "$APP_RPM_PREFIX"
  artifacts:
    expire_in: 30 days
    paths:
      - $SBOM_OUT_FILE

score-sbom:
  stage: sbom
  image: registry.cern.ch/ghcr.io/interlynk-io/sbomqs
  needs:
    - job: update-app-deps
  rules:
    - when: on_success
  variables:
    # Can be used for e.g. --detailed
    EXTRA_FLAGS: ""
  script:
    - /app/sbomqs score sboms/cta.cdx.json $EXTRA_FLAGS
  artifacts:
    reports:
      cyclonedx:
        - sboms/cta.cdx.json
