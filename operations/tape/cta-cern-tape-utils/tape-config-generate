#!/usr/bin/perl -w
#######################################################################
#
# This script will generate /etc/cta/TPCONFIG file with the data from
# TOMS (Tape Operations Management System) URL:
#
# https://apex.cern.ch/pls/htmldb_castorns/f?p=toms_prod:250:163672298908022::NO::P250_TAPESERVER:HOSTNAME
#
# Vladimir Bahyl - 05/2019
#
#######################################################################

use strict;
use XML::DOM;
use Sys::Hostname;
use LWP::UserAgent;
use LC::Check qw(file);

#use Data::Dumper;

my $today = localtime;

my %TPCONFIG = ();
my $hostname = '';

my $tpconfigfile = '/etc/castor/TPCONFIG';
my $tpconfig = "#######################################################################
#
# CTA Tape Server Configuration file
#
# This tape server is not configured.
#
#######################################################################
#
# Generated on $today by $0
";

my $changes = 0;

($hostname = hostname()) =~ s/\.cern\.ch$//io;

my $configUrl = 'https://apex.cern.ch/pls/htmldb_castorns/f?p=toms_prod:250:163672298908022::NO::P250_TAPESERVER:HOSTNAME';
die ("$0: missing configuration URL") unless ($configUrl);
$configUrl =~ s/HOSTNAME/$hostname/o;

#
# Fetch the data
#
print("$0: Fetching the data over HTTP from the Oracle APEX database ... please be patient ...\n");
%TPCONFIG = &GetData($configUrl);

#
# Prepare the TPCONFIG file
#
my $i = 0;
while (%TPCONFIG and defined($TPCONFIG{$i}{'tapeserver'}) and (lc($TPCONFIG{$i}{'tapeserver'}) eq lc($hostname))) {
  $tpconfig = "#######################################################################
#
# CTA Tape Server Configuration file
#
# unit      device    system                control
# name      group     device                method

" if ($i == 0);

  $tpconfig .= "$TPCONFIG{$i}{'tapedrive'}    $TPCONFIG{$i}{'devicegroup'}    $TPCONFIG{$i}{'unixdevice'}    $TPCONFIG{$i}{'controlmethod'}

# Tape Drive Comment: $TPCONFIG{$i}{'tapedrivecomment'}
# Tape Service Comment: $TPCONFIG{$i}{'tapeservicecomment'}
# Modified by: $TPCONFIG{$i}{'modifuser'}
# Modify date: $TPCONFIG{$i}{'modifdate'}

";
  $i++;
}

$tpconfig .= "#
#######################################################################
#
# Generated on $today by $0
" if (%TPCONFIG and (lc($TPCONFIG{0}{'tapeserver'}) eq lc($hostname)));

# Change the TPCONFIG location if comment mentions CTA
$tpconfigfile = '/etc/cta/TPCONFIG' if (%TPCONFIG and (defined $TPCONFIG{0}{'tapeservicecomment'}) and ($TPCONFIG{0}{'tapeservicecomment'} =~ /CTA/oi));

#
# Configure TPCONFIG and SSI files
#
$changes += &UpdateFile($tpconfigfile, $tpconfig);

LC::Check::link('/etc/TPCONFIG', $tpconfigfile,
  backup  => '.old',
  nocheck => 1,
  force   => 1
);

##########################################################################
sub GetData {
##########################################################################
  my ($url) = @_;

  my %TPCONFIG = ();

  my $xmlParser = new XML::DOM::Parser;

  # Download the XML formated configuration data
  # Use cookies because of APEX (otherwise, nothing will be downloaded; redirection will not work)
  my $UserAgent = LWP::UserAgent->new;
  $UserAgent->cookie_jar({ file => undef });
  my $xml = $UserAgent->get($url);

  if (defined ($xml->content)) {
    if ($xml->content =~/TAPESERVER/oi) {
      my $xmlDoc = $xmlParser->parse($xml->content);

      # pcitpdp39 ~ > lynx -source "http://oraweb.cern.ch/pls/cdbsqldev/web.show_tpconfig?p_tapeserver=tpsrv027&p_output=xml"
      # <?xml version = '1.0'?>
      # <TPCONFIGSEARCHLIST> <TAPESERVER NAME="tpsrv027" TAPEDRIVE="994B53A6" DEVICEGROUP="994BR5" UNIXDEVICE="/dev/nst0" DENSITY="200G" COMPRESSION="Y" INITSTATUS="DOWN" CONTROLMETHOD="acs0,3,10,6" MODEL="9940" ROBOTHOST="sunstk62" /> </TPCONFIGSEARCHLIST>

      for my $i (0 .. ($xmlDoc->getElementsByTagName("TAPESERVER")->getLength())-1) {
        $TPCONFIG{$i}{'tapeserver'}         = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("NAME");
        $TPCONFIG{$i}{'tapedrive'}          = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("TAPEDRIVE");
        $TPCONFIG{$i}{'devicegroup'}        = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("DEVICEGROUP");
        $TPCONFIG{$i}{'unixdevice'}         = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("UNIXDEVICE");
        $TPCONFIG{$i}{'initstatus'}         = lc($xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("INITSTATUS"));
        $TPCONFIG{$i}{'controlmethod'}      = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("CONTROLMETHOD");
        $TPCONFIG{$i}{'modifdate'}          = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("MODIFDATE");
        $TPCONFIG{$i}{'modifuser'}          = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("MODIFUSER");
        $TPCONFIG{$i}{'tapedrivecomment'}   = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("TAPEDRIVECOMMENT");
        $TPCONFIG{$i}{'tapeservicecomment'} = $xmlDoc->getElementsByTagName("TAPESERVER")->item($i)->getAttribute("TAPESERVICECOMMENT");

        warn("$0: database entry nr. ".($i+1)." missing tape server hostname\n")    unless ($TPCONFIG{$i}{'tapeserver'});
        warn("$0: database entry nr. ".($i+1)." missing tape drive name\n")         unless ($TPCONFIG{$i}{'tapedrive'});
        warn("$0: database entry nr. ".($i+1)." missing device group name\n")       unless ($TPCONFIG{$i}{'devicegroup'});
        warn("$0: database entry nr. ".($i+1)." missing unix device\n")             unless ($TPCONFIG{$i}{'unixdevice'});
        warn("$0: database entry nr. ".($i+1)." missing init status\n")             unless ($TPCONFIG{$i}{'initstatus'});
        warn("$0: database entry nr. ".($i+1)." missing control method\n")          unless ($TPCONFIG{$i}{'controlmethod'});
        warn("$0: database entry nr. ".($i+1)." missing the modification date\n")   unless ($TPCONFIG{$i}{'modifdate'});
        warn("$0: database entry nr. ".($i+1)." missing user name\n")               unless ($TPCONFIG{$i}{'modifuser'});
        print("$0: database entry nr. ".($i+1)." no tape service comment\n")        unless ($TPCONFIG{$i}{'tapeservicecomment'});
        print("$0: database entry nr. ".($i+1)." no tape drive comment\n")          unless ($TPCONFIG{$i}{'tapedrivecomment'});
      }

      $xmlDoc->dispose;
    } else {
      warn("$0: URL $url is not returning any usable data for $hostname. This tape server will not be configured. Please check whether there is a tape drive assigned to this tape server.\n");
    }
  } else {
    warn("$0: URL $url doesn't seem to work. There could be a problem with the Web server or the Oracle APEX database server.\n");
  }

  return %TPCONFIG;
}

##########################################################################
sub UpdateFile {
##########################################################################
  my ($filename, $newcontent) = @_;

  my $changes = 0;

  if ((-f $filename) and (-r $filename) and (-s $filename)) {
      # Check the content of the file and correct it if there are some differences
      $changes += LC::Check::file($filename,
      source => $filename,
      owner  => 0,
      group  => 0,
      mode   => 0644,
      backup => '.old',
      code   => sub {
        my($oldcontent) = @_;
        return() unless $oldcontent;

        (my $oldfile = $oldcontent) =~ s/^#.*$//gim; # remove lines with comments
        $oldfile =~ s/^\s*$//gim;                    # remove empty lines

        (my $newfile = $newcontent) =~ s/^#.*$//gim; # remove lines with comments
        $newfile =~ s/^\s*$//gim;                    # remove empty lines

        $oldcontent = $newcontent unless ($oldfile eq $newfile);

        return($oldcontent);
      }
    );
  } else {
    # The file is missing, create a new one
    $changes += LC::File::file_contents($filename, $newcontent);
    print "$0: created new $filename\n";
  }
  die ("$0: error modifying $filename\n") unless (defined($changes));

  return $changes;
}
