#
## $Id: PACKAGING.howto,v 1.8 2005/07/01 15:30:18 sponcec3 Exp $
#
## Example of packaging of version
#


cd somewhere
rm -rf WORKDIR/PROTO2 CVS
mkdir -p WORKDIR/PROTO2
mkdir CVS
cd CVS
cvs -d/afs/cern.ch/project/castor/CASTOR_MASTER/cvsroot co CASTOR
cvs -d:kserver:isscvs.cern.ch:2000/local/reps/castor co PROTO2
cd PROTO2
dch -i
cvs commit debian/changelog
#
## The CVS TAG will be: vx_y_z_r (example: v2_0_0_44)
#
cd ../../CVS/CASTOR
cvs tag vx_y_z_r .
cd ../../CVS/PROTO2
cvs tag vx_y_z_r .
#
## Do the Workdir
#
cd ../../WORKDIR/PROTO2
lndir ../../CVS/PROTO2 .
lndir ../../CVS/CASTOR .
#
## Make the tarball
#
make -f Makefile.ini Makefiles
make tar

#
## BUILD DEPENDENCIES
#  ------------------
# Anywhere you will be you will need:
# stk-ssi
# stk-ssi-devel
# LSF
# Oracle

#
## To do an RPM:
#  -------------
## Export the tarball to a machine where you can build the rpms
#
scp ../castor-x.y.z-r.tar.gz machine:/tmp
#
## Go to machine (example: castorscheduler):
#
ssh root@machine
cd /tmp
#
## WARNING: FOR RPM BUILD you might need /etc/sysconfig/castor CORRECT
## IN ADVANCE.
## Please REMOVE eventually instantclient from /etc/ld.so.conf and then
## RESTORE IT AFTER THE BUILD:
#
cat /etc/ld.so.conf

/usr/kerberos/lib
/usr/X11R6/lib
/usr/lib/qt-3.1/lib
/usr/local/lsf/lib
/usr/lib/CDK
/usr/lib/oracle/10.1.0.4/client/lib

---> Remove /usr/lib/oracle/10.1.0.4/client/lib

ldconfig

rpmbuild -ta castor-x.y.z-r.tar.gz

---> Restore /usr/lib/oracle/10.1.0.4/client/lib

ldconfig

#
## To do a DEB:
#  -----------
cd ../castor-x.y.z-r
fakeroot make deb


#
## To export on the download web page
#  ----------------------------------
cd /afs/cern.ch/project/cndoc/wwwds/HSM/CASTOR/DIST/CERN/savannah/CASTOR.pkg
mkdir -p x.y.z-r/Linux
cp /usr/src/redhat/RPMS/i386/*x.y.z-r*.rpm .
cp /usr/src/redhat/SRPMS/castor-x.y.z-r.src.rpm .
