#!/bin/sh
#
# stgdaemon         Start/Stop stgdaemon.
#
# chkconfig: 345 70 35
# description: STGDAEMON server daemon
#
# $Id: stgdaemon.scripts,v 1.3 2004/02/16 15:01:15 jdurand Exp $
#
# @(#)$RCSfile: stgdaemon.scripts,v $ $Revision: 1.3 $ $Date: 2004/02/16 15:01:15 $ CERN/IT/ADC/CA Jean-Damien Durand
#

sysname=`uname -s`

# source function library
if [ -r /etc/rc.d/init.d/functions ]; then
	. /etc/rc.d/init.d/functions
	DAEMON=daemon
	FAILURE=failure
	ECHO_FAILURE=failure
	SUCCESS=success
	ECHO_SUCCESS=echo_success
	ECHO_END=echo
	if [ $sysname = "Linux" ]; then
		ECHOOPT=-n
	fi
else
	DAEMON=
	FAILURE=
	ECHO_FAILURE=
	SUCCESS=
	ECHO_SUCCESS=
	ECHOOPT=
	ECHO_END=
fi

RETVAL=0
prog="stgdaemon"
NOMORESTAGE=/home/operator/nomorestage
PIDFILE=/var/run/stgdaemon.pid
PIDDIR=/var/run
SUBSYS=/var/lock/subsys/stgdaemon
SUBSYSDIR=/var/lock/subsys
[ -z "$SILENTSTOP" ] && SILENTSTOP=0
STGDAEMON=/usr/local/bin/stgdaemon
STAGESHUTDOWN=/usr/local/bin/stageshutdown
# Not yet supported
STGDAEMONLOGFILE=/var/log/stgdaemon
OPTIONS=""
SYSCONFIGSTGDAEMON=/etc/sysconfig/stgdaemon

#
## Blindly attempt to create useful directories
#
[ ! -d $PIDDIR ] && mkdir -p $PIDDIR >& /dev/null
[ ! -d $SUBSYSDIR ] && mkdir -p $SUBSYSDIR >& /dev/null

if [ $sysname = "HP-UX" ]; then
	export UNIX95=1
fi
if [ $sysname = "SunOS" ]; then
	format4comm="fname"
else
	format4comm="comm"
fi

case "$1" in
  start)
	echo $ECHOOPT "Starting $prog: "
	if [ -f ${NOMORESTAGE} ]; then
        echo $ECHOOPT "${NOMORESTAGE} exists: "
		[ -n "$FAILURE" ] && $FAILURE "${NOMORESTAGE} exists: "
		RETVAL=1
	else
        if [ $sysname = "Linux" -a `whoami` = "root" ]; then
            netstat -ap | egrep '\*:5007|\*:stage' | grep LISTEN | grep stgdaemon > /dev/null
        else
            netstat -a  | egrep '\*:5007|\*:stage' | egrep 'LISTEN *$' > /dev/null
        fi
		# ps -eo ppid,$format4comm | egrep '^[ \t]+1 stgdaemon' > /dev/null
		if [ $? -eq 0 ]; then
			echo $ECHOOPT "stgdaemon already started: "
			[ -n "$FAILURE" ] && $FAILURE "stgdaemon already started: "
			RETVAL=1
		else
            if [ -r $SYSCONFIGSTGDAEMON ]; then
                #
                ## Source the configuration
                #
                . $SYSCONFIGSTGDAEMON
                if [ "${RUN_STGDAEMON}" != "yes" ]; then
                    echo $ECHOOPT "$SYSCONFIGSTGDAEMON says NO: "
                    [ -n "$FAILURE" ] && $FAILURE "$SYSCONFIGSTGDAEMON says NO: "
                    RETVAL=1
                fi
                if [ -n "${ULIMIT_N}" ]; then
                    ulimit -n ${ULIMIT_N}
                fi
            fi
            if [ $RETVAL -eq 0 ]; then
                cd /
                mkdir -p /usr/spool/sacct
                mkdir -p /usr/spool/stage
                $DAEMON $STGDAEMON $OPTIONS
                if [ $? -eq 0 ]; then
                    [ -d $SUBSYSDIR ] && touch $SUBSYS
                    if [ -d $PIDDIR ]; then
                        pid=`ps -eo pid,ppid,$format4comm | grep " 1 stgdaemon" | awk '{print $1}'`
                        # The point of $PIDFILE is that it kills only
                        # the master daemon.
                        rm -f $PIDFILE
                        echo $pid > $PIDFILE
                    fi
                    RETVAL=0
                else
                    echo $ECHOOPT "stgdaemon not started: "
                    [ -n "$FAILURE" ] && $FAILURE "stgdaemon not started: "
                    RETVAL=1
                fi
            fi
        fi
	fi
	$ECHO_END
	;;
  stop)
    STAGE_NORETRY=1
    export STAGE_NORETRY
    STAGE_CONNTIMEOUT=20
    export STAGE_CONNTIMEOUT
    STAGE_TIMEOUT=20
    export STAGE_TIMEOUT
	if [ -f $PIDFILE ]; then
		[ $SILENTSTOP -eq 0 ] && echo $ECHOOPT "Stopping $prog: "
        if [ -x $STAGESHUTDOWN ]; then
            if [ $SILENTSTOP -eq 0 ]; then
                $STAGESHUTDOWN -h `hostname` -F
            else
                $STAGESHUTDOWN -h `hostname` -F >& /dev/null
            fi
            RETVAL=$?
            if [ $RETVAL -ne 0 ]; then
                if [ $SILENTSTOP -eq 0 ]; then
                    kill -2 -`cat $PIDFILE`
                else
                    kill -2 -`cat $PIDFILE` >& /dev/null
                fi
                RETVAL=$?
            fi
        else
            if [ $SILENTSTOP -eq 0 ]; then
		        kill -2 -`cat $PIDFILE`
            else
		        kill -2 -`cat $PIDFILE` >& /dev/null
            fi
            RETVAL=$?
        fi
        if [ $RETVAL -eq 0 ]; then
            rm -f $PIDFILE
        fi
	else
		# stgdaemon might have been started by hand
		pid=`ps -eo pid,ppid,$format4comm | grep " 1 stgdaemon" | awk '{print $1}'`
		if [ -n "$pid" ]; then
			[ $SILENTSTOP -eq 0 ] && echo $ECHOOPT "Stopping $prog: "
            if [ -x $STAGESHUTDOWN ]; then
                if [ $SILENTSTOP -eq 0 ]; then
                    $STAGESHUTDOWN -h `hostname` -F
                else
                    $STAGESHUTDOWN -h `hostname` -F >& /dev/null
                fi
                RETVAL=$?
                if [ $RETVAL -ne 0 ]; then
                    if [ $SILENTSTOP -eq 0 ]; then
                        kill -2 -$pid
                    else
                        kill -2 -$pid >& /dev/null
                    fi
                    RETVAL=$?
                fi
            else
                if [ $SILENTSTOP -eq 0 ]; then
                    kill -2 -$pid
                else
                    kill -2 -$pid >& /dev/null
                fi
                RETVAL=$?
            fi
		else
			[ $SILENTSTOP -eq 0 ] && echo $ECHOOPT "stgdaemon already stopped: "
			[ $SILENTSTOP -eq 0 -a -n "$FAILURE" ] && $FAILURE "stgdaemon already stopped: "
 			RETVAL=1
		fi
	fi
	if [ $SILENTSTOP -eq 0 -a $sysname = "Linux" ]; then
		if [ $RETVAL -eq 0 ]; then
 			$ECHO_SUCCESS
		else
 			$ECHO_FAILURE
		fi
	fi
	[ -d $SUBSYSDIR ] && rm -f $SUBSYS
	[ $SILENTSTOP -eq 0 -a -n "$ECHO_END" ] && $ECHO_END
	;;
  restart)
	$0 stop
	if [ $? -eq 0 -o $SILENTSTOP -eq 0 ]; then
		$0 start
		RETVAL=$?
	else
        #
        ## It is legal to return zero it if was
        ## a conditional restart
        #
        if [ $SILENTSTOP -eq 0 ]; then
            RETVAL=1
        else
            RETVAL=0
        fi
	fi
	;;
  condrestart)
	SILENTSTOP=1
    export SILENTSTOP
	$0 restart
    RETVAL=$?
	;;
  status)
	pid=`ps -eo pid,ppid,$format4comm | grep " 1 stgdaemon" | awk '{print $1}'`
	if [ -n "$pid" ]; then
		echo $ECHOOPT "stgdaemon (pid $pid) is running..."
		$ECHO_SUCCESS
		$ECHO_END
	else
		if [ -f $PIDFILE ]; then
			pid=`head -1 $PIDFILE`
			if [ "$pid" != "" ] ; then
				echo $ECHOOPT "stgdaemon dead but pid file exists"
				$ECHO_FAILURE
				$ECHO_END
			fi
		else
			if [ -f $SUBSYS ]; then
				echo $ECHOOPT "stgdaemon dead but subsys ($SUBSYS) locked"
			else
				echo $ECHOOPT "stgdaemon is stopped"
			fi
			$ECHO_FAILURE
			$ECHO_END
		fi
	fi
	;;
  *)
	echo "Usage: $0 {start|stop|status|restart|condrestart}"
	RETVAL=1
	;;
esac

exit $RETVAL
