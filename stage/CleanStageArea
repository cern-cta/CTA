#!/bin/sh
#
# $Id: CleanStageArea,v 1.3 2004/02/02 11:03:19 jdurand Exp $
#
# @(#)$RCSfile: CleanStageArea,v $ $Revision: 1.3 $ $Date: 2004/02/02 11:03:19 $ CERN/IT/ADC/CA Jean-Damien Durand
#
# Purge dataX stage directories
#
PATH=/bin:/usr/bin:/usr/bsd:/usr/etc:/usr/sbin:/usr/local/bin
SYSCONFIGCLEANSTAGEAREA=/etc/sysconfig/CleanStageArea
USAGE=">>> `basename $0` <valid-pool-name> [valid-host-name]."
COUNT=1             # Number of files candidate for mandatory deletion
NDAYS="+9 9 8 7 6 5 4 3 2"	# Number of days for retention
NFSR=/shift         # Generic mount point
TMPF=/tmp/purge     # Temporary prefix name
REMOVE_FROM_HSM=    # empty by default

cd /tmp             # Make sure there is valid working directory

if [ -r $SYSCONFIGCLEANSTAGEAREA ]; then
    #
    ## Source the configuration
    #
    . $SYSCONFIGCLEANSTAGEAREA
    if [ "${RUN_CLEANSTAGEAREA}" != "yes" ]; then
        echo "$SYSCONFIGCLEANSTAGEAREA says NO"
        exit 1
    fi
    if [ "${REMOVE_FROM_HSM}" = "yes" ]; then
        REMOVE_FROM_HSM=-remove_from_hsm
    fi
fi



if [ -x /bin/gawk ]; then
  AWK=/bin/gawk
elif [ -x /usr/bin/gawk ]; then
  AWK=/usr/bin/gawk
elif [ -x /usr/local/bin/gnu/awk ]; then
  AWK=/usr/local/bin/gnu/awk
  USRLOCALLIB=1
elif [ -x /usr/local/bin/gnu/gawk ]; then
  AWK=/usr/local/bin/gnu/gawk
  USRLOCALLIB=1
elif [ -x /usr/local/bin/gawk ]; then
  AWK=/usr/local/bin/gawk
  USRLOCALLIB=1
elif [ -x /bin/gawk ]; then
  AWK=/bin/gawk
else
  AWK=awk
fi
if [ -x /usr/local/bin/gnu/fgrep ]; then
  FGREP=/usr/local/bin/gnu/fgrep
  USRLOCALLIB=1
else
  FGREP=fgrep
fi
if [ -x /usr/local/bin/gnu/grep ]; then
  GREP=/usr/local/bin/gnu/grep
  USRLOCALLIB=1
else
  GREP=grep
fi
if [ -x /usr/local/bin/gnu/egrep ]; then
  EGREP=/usr/local/bin/gnu/egrep
  USRLOCALLIB=1
else
  EGREP=egrep
fi
if [ -x /usr/local/bin/gnu/sort ]; then
  SORT=/usr/local/bin/gnu/sort
  USRLOCALLIB=1
else
  SORT=sort
fi
# Force LD_LIBRARY_PATH if needed (regardless of OS - it has a meaning or not)
if [ "$USRLOCALLIB" = "1" ]; then
  if [ -z "$LD_LIBRARY_PATH" ]; then
    LD_LIBRARY_PATH=/usr/local/lib
    export LD_LIBRARY_PATH
  else
    LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"
    export LD_LIBRARY_PATH
  fi
fi

#
#	Usage
if [ $# -ne 1 -a $# -ne 2 ]; then
	echo "${USAGE}"
	exit 1
else
#
#		Local variables
	kopt1="-k1,2"
	kopt2="-k6"
	nopt="-n${COUNT}"
#
#		Obsolete [+pos1 [+pos2]] notation for sort and head
	if [ "`uname -s`" = "IRIX" -o "`uname -s`" = "SunOS" ]; then
		kopt1="+0 -2"
		kopt2="+5"
		nopt="-${COUNT}"
	fi
fi
#
#	Hostname given
if [ -n "$2" ]; then
	STAGE_HOST=$2; export STAGE_HOST
fi
#
#	Build initial exclusion list
touch ${TMPF}keep_$$
#
#	Files currently written onto tapes go into the exclusion list...
#   We add the MIGR explicitly because files remotely copied onto CASTOR
#   also have a record that is STAGEIN|STAGED
#
lhost=`hostname | cut -d. -f1`
stageqry -a -pNOPOOL -x | ${GREP} STAGEWRT | ${AWK} '{if ($NF ~ /[^0-9]/) {print $NF}}' >> ${TMPF}keep_$$
stageqry -a -p$1 -x | ${EGREP} "STAGEWRT|WAITING_SPC|MIGR" | ${GREP} ${NFSR}/ | ${AWK} '{if ($NF ~ /[^0-9]/) {print $NF}}' >> ${TMPF}keep_$$
#
#	With retries in case of errors...
for n in 0 1 2 3 4 5
do
#
#		Build sorted list (full pathnames) of staged files
	stageqry -a -p$1 -S | ${AWK} '{if (NF == 6) {print $0}}' | ${SORT} -t' ' ${kopt1} | ${AWK} '{print $5}' > ${TMPF}all_$$
	if [ -s ${TMPF}all_$$ ]; then
#
#			Clear appropriate entries
		${FGREP} -v -f ${TMPF}keep_$$ ${TMPF}all_$$ 2>/dev/null | stageclr -c -i ${REMOVE_FROM_HSM}
		test $? -eq 0 && break
	else
		break
	fi
done

#
#   Clean our stuff
rm -f ${TMPF}keep_$$ ${TMPF}all_$$

#
#   Stop now - we trust stageqry -S only
exit 0
#EOF
