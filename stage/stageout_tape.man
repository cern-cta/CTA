.\" $Id: stageout_tape.man,v 1.1 2002/10/08 07:37:41 jdurand Exp $
.\"
.\" @(#)$RCSfile: stageout_tape.man,v $ $Revision: 1.1 $ $Date: 2002/10/08 07:37:41 $ CERN IT-DS/HSM Jean-Damien Durand
.\" Copyright (C) 2002 by CERN/IT/DS/HSM
.\" All rights reserved
.\"
.TH STAGEOUT_TAPE "3" "$Date: 2002/10/08 07:37:41 $" "CASTOR" "Stage Library Functions"
.SH NAME
stageout_tape \- Asks for one or more tape files to be created on disk, later to be written with stageput
.SH SYNOPSIS
.BI "#include <" stage_api.h ">"
.sp
.BI "int stageout_tape(u_signed64 " flags ,
.BI "int " openflags ,
.BI "mode_t " openmode ,
.BI "char *" hostname ,
.BI "char *" pooluser ,
.BI "int " nstcp_input ,
.BI "struct stgcat_entry *" stcp_input ,
.BI "int *" nstcp_output ,
.BI "struct stgcat_entry **" stcp_output ,
.BI "int " nstpp_input ,
.BI "struct stgpath_entry *" stpp_input ");"

.SH DESCRIPTION
The \fBstageout_tape\fP API method asks the stager to reserve space for one or more tape files to be created on disk.
There are two ouputs: the default ttys (unless you use \fBstage_setlog\fP, see in the example below) and the output parameters, that are allocated on the fly (e.g. the user will have to free them if necessary/wanted).

.SH PARAMETERS
.TP 1.5i
.I flags
Can be zero or a bit-wise of the following values:
.RS
.TP
.I STAGE_SILENT
Print nothing (the log callback will never be notified either).
.TP
.I STAGE_NORETRY
Prevents client to keep retrying in any case. Can be set with environment variable $STAGE_NORETRY to a non\-zero value.
.RE
.TP
.I openflags
Not meaningful here. Should be zero.
.TP
.I hostname
Gives explicitely the hostname where is the stager daemon. If it NULL, default value apply: either the environment variable $STAGE_HOST, an entry 'STG HOST' in /etc/shift.conf file, or the default "stagepublic".
.TP
.I pooluser
A file allocated in a pool will be stored in a subdirectory
.I pooluser.
This may also be specified thru the environment variable $STAGE_USER. The default subdirectory name is "stage". 
.I pooluser
must be a valid user name and belong to the same group as the requestor.
.TP
.I nstcp_input
Number of stcp_input entries.
.TP
.I stcp_input
Entries describing the files you want to be created. The members of the 
.I u1.t
union of the
.I stcp_input
structures are important: they describe the data from tape you want to read. In particular:
.RS
.TP
.I u1.t.vid[0]
Volume Id. Other indexes are used only if you do Volume Spanning.
.TP
.I u1.t.fseq
File sequence range.
.TP
.I u1.t.E_Tflags
Action in case of error. This can be a logical or of the following constants:
.RS
.TP
.I SKIPBAD
asking to skip bad blocks
.TP
.I KEEPFILE
to keep file in case of errors
.TP
.I IGNOREEOI
to not take 2 consecutive TMs as EOI.
.RE
.TP
Other fields you can use are:
.TP
.I recfm
Record format. Usually it is 'F'.
.TP
.I size
Limit disk file size to
.I size
bytes.
.TP
.I charconv
Character conversion. A logical or of 
.IR EBCCONV ,
.IR FIXVAR ,
and
.I ASCCONV.
.TP
.I lrecl
Record length, in bytes.
.TP
.I nread
Number of blocks/records to be copied
.TP
.I poolname
Explicit disk poolname
.RE
.TP
.I nstcp_output
Filled with the number of created entries at return.
.TP
.I stcp_output
Filled with the address of an array containg the created entries at return. Up to the user to free it if necessary.
.TP
.I nstpp_input
Filled with the number of stpp_input entries. If this number is positive it must match the number of stcp_input entries. Otherwise it should be zero.
.TP
.I stpp_input
Array giving the list of link files that will be created each time one of the files described in stcp_input entries is created on disk. Must be NULL or pointing to 
.I nstpp_input
entries.

.SH RETURN VALUE
0 on success, -1 on failure.

.SH ERRORS
If failure, the serrno variable might contain one of the following error codes:
.TP 1.9i
.B SENOMAPFND
Can't open mapping database (Windows only)
.TP
.B EFAULT
Bad address
.TP
.B EINVAL
Invalid argument
.TP
.B ESTGROUP
Invalid group
.TP
.B SECONNDROP
Connection closed by remote end
.TP
.B SECOMERR
Communication error
.TP
.B SEINTERNAL
Internal error
.TP
.B SEUSERUNKN
User unknown
.TP
.B ESTLINKNAME
User link name processing error
.TP
.B SEOPNOTSUP
Operation not supported (should not happen)
.TP
.B ESTMEM
Request too big
.TP
.B ENOENT
No such file or directory
.TP
.B EISDIR
Is a directory
.TP
.B SESYSERR
System error
.TP
.B ESTCLEARED
Request cleared
.TP
.B ESTKILLED
Request killed
.TP
.B ENOSPC
No space left on device
.TP
.B EBUSY
Device or resource busy
.TP
.B ESTLNKNSUP
Symbolic link not supported
.TP
.B ESTNACT
Stager not active (if you specify the STAGE_NORETRY flag - default is to retry forever)
.TP
.B SENOSHOST
Host not known

.SH NOTES
A poolname other than the default can be specified either with environment variable $STAGE_POOL, or an entry 'STG POOL' in /etc/shift.conf

.SH SEE ALSO
\fBstageout\fP(1), \fBstage_limits\fP(3), \fBCastor_limits\fP(3), \fBstage_setlog\fP(3), \fBstage_setcallback\fP(3), \fBstageclr_link\fP(3), \fBrc_castor2shift\fP(3), \fBstage_kill\fP(3), \fBprint_stcp\fP(3), \fBprint_stpp\fP(3), \fBstage_struct\fP(3), \fBstage_macros\fP(3), \fBstage_constants\fP(3)

.SH AUTHOR
\fBCASTOR\fP Team <castor.support@cern.ch>

