#! /bin/sh
#
#/******************************************************************************
#                      logprocessord.init
#
# This file is part of the Castor project.
# See http://castor.web.cern.ch/castor
#
# Copyright (C) 2003  CERN
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# @(#)$RCSfile: dlfserver.init,v $ $Revision: 1.22 $ $Release$ $Date: 2008/07/28 16:42:48 $ $Author: waldron $
#
# chkconfig: 345 60 38
# description: Log Processor Daemon Initialisation Script
#
# @author castor dev team
#*****************************************************************************/

# Source function library.
. /etc/rc.d/init.d/functions

# Variables
prog="logprocessord"
FRETVAL=0
RETVAL=0

# Source sysconfig files
if [ -f /etc/sysconfig/$prog ]; then
        . /etc/sysconfig/$prog
fi

start() {
        echo -n $"Starting $prog: "
        echo

        # Start logprocessords
        for i in ${ROLES}; do

                # Load the appropriate sysconfig file for role
                if [ -f /etc/sysconfig/$prog.$i ]; then
                        . /etc/sysconfig/$prog.$i
                else
                        if [ -f /etc/sysconfig/$prog ]; then
                                . /etc/sysconfig/$prog
                        fi
                fi
                echo -n $"Starting $prog for role: $i "
                export PYTHONUNBUFFERED=1

                daemon /usr/bin/python /usr/bin/$prog -d start $LOGPROCESSORD_OPTIONS 1>/dev/null

                RETVAL=$?
                [ $RETVAL -eq 0 ] && success $"$base startup" || failure $"$base startup"
                echo
                if [ $RETVAL -eq 0 ]; then
                        touch /var/lock/subsys/$prog.$i
                else
                        FRETVAL=$RETVAL
                fi

        done

        RETVAL=$FRETVAL
        return $RETVAL
}

stop() {
        echo -n $"Stopping $prog: "
        echo

        # Stop logprocessords
        for i in ${ROLES}; do

                # Load the appropriate sysconfig file for role
                if [ -f /etc/sysconfig/$prog.$i ]; then
                        . /etc/sysconfig/$prog.$i
                else
                        if [ -f /etc/sysconfig/$prog ]; then
                                . /etc/sysconfig/$prog
                        fi
                fi
                echo -n $"Stopping $prog for role: $i "

                daemon /usr/bin/python /usr/bin/$prog -d stop $LOGPROCESSORD_OPTIONS 1>/dev/null

                RETVAL=$?
                [ $RETVAL -eq 0 ] && success $"$base startup" || failure $"$base startup"
                echo
                if [ $RETVAL -eq 0 ]; then
                        [ -f /var/lock/subsys/$prog.$i ] && rm -f /var/lock/subsys/$prog.$i
                else
                        FRETVAL=$RETVAL
                fi

        done

        RETVAL=$FRETVAL
        return $RETVAL
}

restart() {
        stop $1
        start $1
}

status() {
        # Loop over rhds
        for i in ${ROLES}; do
                # Check if the rhd associated to this role running
                pid=`pidofproc $prog.$i`
                if [ -n "$pid" ]; then
                        echo $"$prog for role: $i (pid $pid) is running..."
                        continue
                else
                        # See if /var/lock/subsys/$prog.$i exists
                        if [ -f /var/lock/subsys/$prog.$i ]; then
                                echo $"$prog for role: $i dead but subsys locked"
                        else
                                echo $"$prog for role: $i is stopped"
                        fi
                        RETVAL=1
                fi
        done
        return $RETVAL
}

# Check for roles
if [ -n "$2" ]; then
        ROLES=$2
elif [ -z "${ROLES}" ]; then
        ROLES="normal"
fi

# See how we were called
case "$1" in

        start)
                start $2
                ;;
        stop)
                stop $2
                ;;
        status)
                status
                ;;
        restart)
                restart $2
                ;;
        condrestart)
                if [ -n "$2" ]; then
                        [ -f /var/lock/subsys/$prog.$2 ] && restart $2 || :
                elif [ -z "$2" ]; then
                        count=`find /var/lock/subsys/ -name $prog.* -type f | wc -l`
                        [ $count -gt 0 ] && restart || :
                fi
                ;;
        *)
                echo $"Usage: $0 {start|stop|status|restart|condrestart} [role]"
                exit 1
esac

exit $RETVAL
