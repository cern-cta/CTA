#! /bin/sh
#
#/******************************************************************************
#                      logprocessord.init
#
# This file is part of the Castor project.
# See http://castor.web.cern.ch/castor
#
# Copyright (C) 2003  CERN
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# @(#)$RCSfile: dlfserver.init,v $ $Revision: 1.22 $ $Release$ $Date: 2008/07/28 16:42:48 $ $Author: waldron $
#
# chkconfig: 345 60 38
# description: Log Processor Daemon Initialisation Script
#
# @author castor dev team
#*****************************************************************************/

# Source function library.
. /etc/rc.d/init.d/functions

# Variables
prog="logprocessord"
RETVAL=0

# Source sysconfig files
if [ -f /etc/sysconfig/$prog ]; then
        . /etc/sysconfig/$prog
fi

start() {
        # Run daemon
        echo -n $"Starting $prog: "

        daemon /usr/bin/$prog -d start $LOGPROCESSORD_OPTIONS 1>/dev/null

        RETVAL=$?
        [ $RETVAL -eq 0 ] && success $"$base startup" || failure $"$base startup"
        echo
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog
        return $RETVAL
}

stop() {
        echo -n $"Stopping $prog: "

        /usr/bin/$prog -d stop 1>/dev/null

        RETVAL=$?
        [ $RETVAL -eq 0 ] && success $"$base startup" || failure $"$base startup"
        echo
        [ -f /var/lock/subsys/$prog ] && rm -f /var/lock/subsys/$prog
        return $RETVAL
}

restart() {
        stop
        start
}

# See how we were called
case "$1" in

        start)
                start
                ;;
        stop)
                stop
                ;;
        status)
                status "python /usr/bin/$prog"
                RETVAL=$?
                ;;
        restart)
                restart
                ;;
        condrestart)
                [ -f /var/lock/subsys/$prog ] && restart || :
                ;;
        *)
                echo $"Usage: $0 {start|stop|status|restart|condrestart}"
                exit 1
esac

exit $RETVAL
