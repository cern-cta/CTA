stages:
  - build:srpm
  - build:rpm
  - analysis:check
  - analysis:report
  - build:dockerimage
  - test
  - regressions
  - shouldfail
  - publish_rpm
  - release_rpm
  - docs

variables:
  # 4 or 5
  XROOTD_VERSION: 4
  # `objectstore` or `pgsched`
  SCHED_TYPE: "objectstore"
  # `cc7-base` or `cs8-base`
  LINUX_IMAGE: "cs8-base"
  CTA_VERSION: "${XROOTD_VERSION}"
  CMAKE_OPTIONS: ""

before_script:
  - export CTA_BUILD_ID=${CI_PIPELINE_ID}git${CI_COMMIT_SHA:0:8}
  - echo "Exporting CTA_BUILD_ID=${CTA_BUILD_ID}"
  - test -n "${CI_COMMIT_TAG}" && export TAG_VERSION=$(echo ${CI_COMMIT_TAG} | sed -e 's/^v//;s/-.*$//')
  - test -n "${CI_COMMIT_TAG}" && export TAG_RELEASE=$(echo ${CI_COMMIT_TAG} | sed -e 's/^[^-]*-//')
  - major_version=$(echo ${TAG_VERSION} | cut -d. -f1)
  - if [[ ${major_version} == 5 ]];
      then echo "Setting to compile with XRootD version 5";
      XROOTD_VERSION=5;
    fi
  - if [[ ${XROOTD_VERSION} -eq 5 ]];
    then echo "Using XRootD version 5";
      sed -i 's/define xrootdVersion 1:4.12.4-1/define xrootdVersion 1:5.4.2-1/' cta.spec.in;
      cp continuousintegration/docker/ctafrontend/cc7/cta-ci-xrootd5-enabled.repo continuousintegration/docker/ctafrontend/cc7/etc/yum.repos.d/cta-ci.repo;
      cp -f continuousintegration/docker/ctafrontend/cc7/versionlock-xrootd5.list continuousintegration/docker/ctafrontend/cc7/etc/yum/pluginconf.d/versionlock.list;
    else echo "Using XRootD version 4";
    fi
  - if [[ ${SCHED_TYPE} != "objectstore" ]]; then
      echo "Using specified scheduler database type $SCHED_TYPE";
      sched_opt="-DCTA_USE_$(echo ${SCHED_TYPE} | tr '[:lower:]' '[:upper:]'):Bool=true";
      sched_version=$(echo ${SCHED_TYPE} | cut -c 1-3);
      CTA_VERSION="${CTA_VERSION}${sched_version}";
      CMAKE_OPTIONS="-DSKIP_UNIT_TESTS:STRING=1 ${sched_opt}";
    fi

include:
  - local: .gitlab/ci/*.gitlab-ci.yml
