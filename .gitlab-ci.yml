stages:
  - build:srpm
  - build:rpm
  - build:dockerimage
  - rename:dockerimage

before_script:
  - export CTA_BUILD_ID=${CI_PIPELINE_ID}git${CI_BUILD_REF:0:8}
  - echo "Exporting CTA_BUILD_ID=${CTA_BUILD_ID}"

cta_srpm:
  stage: build:srpm
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install -y gcc-c++ cmake make rpm-build
    - mkdir build_srpm
    - cd build_srpm
    - cmake -DPackageOnly:Bool=true -DVCS_VERSION=${CTA_BUILD_ID} ..
    - make cta_srpm

  artifacts:
    paths:
    - build_srpm/RPM/SRPMS/

  tags:
    - docker

cta_rpm:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install -y gcc-c++ cmake make rpm-build
    - yum -y install yum-plugin-priorities
    - echo "Enabling cernonly repo for oracle-instantclient"; yum-config-manager --enable cernonly
    - echo "Adding Ceph repo"; echo -e "[ceph-internal]\nname=ceph-internal\nenabled=1\nbaseurl=http://castorwww.web.cern.ch/castorwww/repos/ceph/\npriority=4" > /etc/yum.repos.d/ceph-internal.repo
    - yum-builddep --nogpgcheck -y build_srpm/RPM/SRPMS/*
    - mkdir build_rpm
    - cd build_rpm
    - cmake -DVCS_VERSION=${CTA_BUILD_ID} ..
    - make -j4 && make -j4
    - make cta_rpm

  artifacts:
    paths:
    - build_rpm/RPM/RPMS

  tags:
    - docker


ctafrontend_docker:
  stage: build:dockerimage
  tags:
    - docker-image-build
  script:
    - ""
  variables:
    TO: gitlab-registry.cern.ch/cta/cta-orchestration:${CI_PIPELINE_ID}
    DOCKER_FILE: continuousintegration/docker/ctafrontend/cc7/Dockerfile


ctafrontend_docker_rename:
  stage: rename:dockerimage
  variables:
    REPOSITORY: cta/cta-orchestration
    GITLAB_HOST: gitlab.cern.ch
  script:
    - OLDTAG=${CI_PIPELINE_ID}
    - NEWTAG=${CTA_BUILD_ID}
    - JWT_PULL_PUSH_TOKEN=$(curl -q -u ${DOCKER_LOGIN_USERNAME}:${DOCKER_LOGIN_PASSWORD} "https://${GITLAB_HOST}/jwt/auth?service=container_registry&scope=repository:${REPOSITORY}:pull,push" | jq .token -r)
    - echo "List of tags in registry"
    - curl "https://${CI_REGISTRY}/v2/${REPOSITORY}/tags/list" -H "Authorization: Bearer ${JWT_PULL_PUSH_TOKEN}"
    - echo "Pulling the manifest of tag:${OLDTAG}"
    - curl "https://${CI_REGISTRY}/v2/${REPOSITORY}/manifests/${OLDTAG}" -H "Authorization: Bearer ${JWT_PULL_PUSH_TOKEN}" -H 'accept: application/vnd.docker.distribution.manifest.v2+json' > manifest.json
    - echo "Pushing new tag: ${NEWTAG}"
    - curl -XPUT "https://${CI_REGISTRY}/v2/${REPOSITORY}/manifests/${NEWTAG}" -H "Authorization: Bearer ${JWT_PULL_PUSH_TOKEN}" -H 'content-type: application/vnd.docker.distribution.manifest.v2+json' -d '@manifest.json' -v
    - echo "List of tags in registry"
    - curl "https://${CI_REGISTRY}/v2/${REPOSITORY}/tags/list" -H "Authorization: Bearer ${JWT_PULL_PUSH_TOKEN}"
