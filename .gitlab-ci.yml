stages:
  - validation
  - setup
  - analysis
  - build
  - build:image
  - test
  - system-test
  - release:changelog
  - release:internal
  - release:external

variables:

  # Building Configuration
  BUILD_GENERATOR:
    value: "Unix Makefiles"
    options:
      - "Unix Makefiles"
      - "Ninja"
  CMAKE_BUILD_TYPE:
    value: "Debug"
    options:
      - "Release"
      - "Debug"
      - "RelWithDebInfo"
      - "MinSizeRel"

  # CTA Configuration
  CTA_VERSION: 5
  SCHED_TYPE:
    value: "objectstore"
    options:
      - "pgsched"
      - "objectstore"
  ORACLE_SUPPORT:
    value: "ON"
    options:
      - "ON"
      - "OFF"

  # Tests
  BASH_LOGGING_ENABLED: 1 # For the k8s test scripts
  SYSTEMTESTS_IMAGETAG: "" # Custom image tag to run the systemtests against. Only used if SYSTEMTESTS_ONLY is true
  VALGRIND_DB_UNIT_TESTS:
    value: "FALSE"
    options:
      - "TRUE"
      - "FALSE"

  # System Tests
  SYSTEMTESTS_ONLY:
    value: "FALSE"
    options:
      - "TRUE"
      - "FALSE"
  # Pass a file here (must be absolute or relative to the orchestration directory, e.g. presets/dev...)
  CUSTOM_CTA_VALUES_FILE:
    value: ""

  # Pipeline Type. Supported types:
  #   - COMMIT: default pipeline type, Runs static analysis, compiles the software and tests it.
  #   - EOS_REGR_AGAINST_CTA_MAIN: test a new tagged EOS version against CTA main.
  #   - EOS_REGR_AGAINST_CTA_TAG: test a new tagged EOS version against the latest tagged CTA version.
  #   - CTAGENERIC_IMAGE: generate a ctageneric image from a set of CTA,EOS,XRD RPMS avaiable in repos.
  PIPELINE_TYPE:
    value: "COMMIT"
    options:
      - "COMMIT"
      - "EOS_REGR_AGAINST_CTA_MAIN"
      - "EOS_REGR_AGAINST_CTA_TAG"
      - "CTAGENERIC_IMAGE"

  # Image building. Used by EOS Regression and Image build pipeline types
  CUSTOM_XRD_TAG:
    value: ""
  CUSTOM_EOS_TAG:
    value: ""
  CUSTOM_CTA_TAG:
    value: ""

  # Meta CI
  CTA_BUILD_ID: ${CI_PIPELINE_ID}git${CI_COMMIT_SHORT_SHA}
  CTA_PIPELINE_NAME: "$CI_COMMIT_TITLE -- Scheduler: $SCHED_TYPE, Oracle support: $ORACLE_SUPPORT"

  # Git CI Configuration
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_DEPTH: 1 # Enforce a shallow clone of the main repo
  GIT_SUBMODULE_DEPTH: 0 # Full clone of the submodules

  # Job output configuration
  FF_TIMESTAMPS: true

  # Images
  IMAGE_ANALYSIS: gitlab-registry.cern.ch/cta/public_registry/container_registry/cta-ci-analysis:2025-03-25-11120052
  IMAGE_BUILD: gitlab-registry.cern.ch/cta/public_registry/container_registry/cta-ci-build:2025-03-25-11120052
  IMAGE_TEST: gitlab-registry.cern.ch/cta/public_registry/container_registry/cta-ci-test:2025-03-25-11120052
  IMAGE_RELEASE: gitlab-registry.cern.ch/cta/public_registry/container_registry/cta-ci-release:2025-03-25-11120052
  IMAGE_GITLAB_RELEASE_CLI: registry.gitlab.com/gitlab-org/release-cli:latest
  IMAGE_DOCKER_IMAGE_BUILDER: gcr.io/kaniko-project/executor:debug

default:
  interruptible: true

workflow:
  name: $CTA_PIPELINE_NAME
  auto_cancel:
    on_job_failure: all
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger"
      auto_cancel:
        on_job_failure: none
    # Note that the web pipeline source could also concern tagged pipelines
    # but these are already covered by the first rule
    - if: $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web"
      changes:
        compare_to: "refs/heads/$CI_DEFAULT_BRANCH"
        paths:
          - '**/*'
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"

include:
  - local: .gitlab/ci/*.gitlab-ci.yml
