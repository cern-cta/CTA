COMM
COMM  Copyright (C) 2004 by CERN/IT/ADC/CA
COMM  All rights reserved
COMM
COMM  @(#)$RCSfile: Imakefile,v $ $Revision: 1.23 $ $Date: 2004/12/21 22:32:04 $ CERN IT-ADC/CA Jean-Damien Durand

COMM 	Make stager daemon programs.

COMM #define STAGE_LINK_STATIC

#include <Project.tmpl>

SPOOL = StageSpool
INCLUDES = FileName(..,h)
INCLUDES_CPP = FileName(..,)

COMM
COMM Set this flag to -O for optimization, or -g for debug
COMM
#ifdef _WIN32
CCOPTIM =
#else
CCOPTIM = -g
#endif

#ifdef StagerSuperUser
STAGEUSER = StagerSuperUser
#else
STAGEUSER = stage
#endif

STAGEHOST=-DSTAGEHOST=\"OBSOLETE\"

#ifdef StagerSuperGroup
STAGEGROUP = StagerSuperGroup
#else
STAGEGROUP = st
#endif

STAGEFLAGS = -DSTAGEUSER=\"$(STAGEUSER)\" -DSTAGEGROUP=\"$(STAGEGROUP)\"
THREADFLAGS = $(MTCCFLAGS)
LDFLAGS = $(MTLDFLAGS)

#if SOLARIS
LDLIBS = -lsocket -lnsl
#else
#if _AIX
#if defined(_IBMR2)
LDLIBS = -lodm
#endif
#else
#if linux
LDLIBS = $(ADNSLIB) -lnsl
#else
#if _WIN32
LDLIBS = wsock32.lib ws2_32.lib advapi32.lib
#endif
#endif
#endif
#endif

#if BuildSecurity
SECURITYFLAG=-DCSEC
#endif

CFLAGS = $(CCOPTIM) -I$(INCLUDES) -I$(INCLUDES_CPP) $(SECURITYFLAG) $(THREADFLAGS) $(STAGEFLAGS) $(STAGEHOST)
CPPFLAGS=$(CFLAGS) -I..

#ifdef STAGE_LINK_STATIC
DEPLIB = DepLibraryTargetName(lib,shift)
GLOBLIB = -L../lib -lshift
#else
DEPLIB = DepSharedLibraryTargetName(shlib,shift)
GLOBLIB = -L../shlib -lshift
#endif


#if BuildStageDaemon
PROGS_STAGER = ProgramTargetName(stager) ProgramTargetName(stageradmin) ProgramTargetName(stagerNotifyService)
IPROGS_STAGER = FileName($(BIN),ProgramTargetName(stager)) FileName($(BIN),ProgramTargetName(stageradmin))
EPROGS_STAGER = FileName($(EXPORTBIN),stager) FileName($(EXPORTBIN),stageradmin)
MANPAGES_STAGER = FileName($(MANDIR),stager.$(MANSUFFIX)) FileName($(MANDIR),stageradmin.$(MANSUFFIX))
EMANPAGES_STAGER = FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),stager.$(MANSUFFIX))) FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),stageradmin.$(MANSUFFIX)))
#ifdef STAGE_LINK_STATIC
DEPLIB += DepLibraryTargetName(lib,castorCommonOra)
GLOBLIB += -L../lib -lcastorCommonOra
#else
DEPLIB += DepSharedLibraryTargetName(shlib,castorCommonOra)
GLOBLIB += -L../shlib -lcastorCommonOra
#endif
#endif

#if BuildSecurity
GLOBLIB += -ldl
#endif

STAGER_OBJS = \
		stager.Osuf \
		stager_db_service.Osuf \
		stager_fs_service.Osuf \
		stager_getnext_service.Osuf \
		stager_job_service.Osuf \
		stager_query_service.Osuf \
		stager_service_run.Osuf \
		stager_update_service.Osuf
STAGERADMIN_OBJS = stageradmin.Osuf
OBSOLETE_OBJS = \
		buildupath.Osuf \
		send2stgd_api.Osuf \
		send2stgd_compat.Osuf \
		stage_api.Osuf \
		stage_errmsg.Osuf \
		stage_updc.Osuf \
		stage_util.Osuf

STAGERLIB_OBJS = \
		stager_admin_api.Osuf \
		stager_catalogInterface.Osuf \
		stager_client_api_common.Osuf \
		stager_client_api_get.Osuf \
		stager_client_api_put.Osuf \
		stager_client_api_update.Osuf \
		stager_client_api_open.Osuf \
		stager_client_api_query.Osuf \
		stager_errmsg.Osuf \
		stager_extern_globals.Osuf \
		stager_messages.Osuf \
		stager_service.Osuf \
		stager_util.Osuf \
		stager_uuid.Osuf \
		$(OBSOLETE_OBJS)

#if BuildStageLibrary
STAGELIBTARGET=LibraryTargetName(stager)
#endif

all: $(STAGELIBTARGET) $(PROGS_STAGER)

NormalProgramTarget(stager,$(STAGER_OBJS),$(DEPLIB),$(GLOBLIB) $(DBLIBS) $(LDLIBS))
NormalProgramTarget(stagerNotifyService,stagerNotifyService.Osuf,$(DEPLIB),$(GLOBLIB) $(DBLIBS) $(LDLIBS))
NormalProgramTarget(stageradmin,$(STAGERADMIN_OBJS),$(DEPLIB),$(GLOBLIB) $(DBLIBS) $(LDLIBS))

MakeDepLibrary(lib,shift)

MakeDepSharedLibrary(shlib,shift)

MakeDepLibrary(lib,castorCommonOra)

MakeDepSharedLibrary(shlib,castorCommonOra)

NormalLibraryTarget(stager,$(STAGERLIB_OBJS))

install: $(BIN) $(IPROGS_STAGER) $(SPOOL)

InstallProgram(stager,$(BIN),root,bin,0750)
InstallProgram(stageradmin,$(BIN),root,bin,0750)

install.man: $(MANDIR) $(MANPAGES_STAGER)

IMANPAGE(stager,$(MANDIR),$(MANSUFFIX))
IMANPAGE(stageradmin,$(MANDIR),$(MANSUFFIX))

export: $(EPROGS_STAGER)

IEXPORT(stager,$(EXPORTBIN),755)
IEXPORT(stageradmin,$(EXPORTBIN),755)

exportman: $(EMANPAGES_STAGER)

EMANPAGE(stager,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))
EMANPAGE(stageradmin,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))

MakeDir($(BIN),root,bin,0755)
MakeDir($(SPOOL),root,bin,0755)
MakeDir($(MANDIR),root,bin,0755)

COMM###################### CLEANING RULES #######################

clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean)

clobber:	clean
	@echo clobbering in CurDir
	-@RemoveFiles($(PROGS_STAGER) LibraryTargetName(stager))

#if _WIN32
depend:
	@echo Not supported on this platform
#else
depend:
	makedepend  -Y -- $(CFLAGS) -- *.c *.cpp 2> /dev/null
#endif

Makefiles:

FORCE:

COMM DO NOT DELETE THIS LINE -- make  depend  depends  on  it.
