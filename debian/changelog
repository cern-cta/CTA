castor (2.1.4-4) unstable; urgency=low

  * CASTOR2/CASTOR.spec:
    [r1.68,2007-09-07,kotlyar] to build gridftp rpms there should be GLOBUS_LOCATION variable defined, in other case it willprovide a standart set of rpms
  * CASTOR2/castor/db/DbBaseObj.cpp:
    [r 1.7,2007-09-10,waldron] Fixed indentation
  * CASTOR2/castor/db/DbBaseObj.hpp:
    [r 1.8,2007-09-10,waldron] Fixed indentation
  * CASTOR2/castor/db/analyze/BugCleanup2_1_3.sql:
    [r 1.8,2007-09-05,sponcec3] don't shrink DiskCopy table since it has a function based index making it fail
    [r 1.7,2007-09-04,sponcec3] Fixed stupid typo leading to not cleaning files having both a STAGED copy and a tape recall properly
    [r 1.6,2007-09-03,sponcec3] Fixed typo
    [r 1.5,2007-08-31,sponcec3] Added extra cleaning :
    [r 1.5,2007-08-31,sponcec3] Cleanup of the TapeCopies with no DiskCopies
    [r 1.5,2007-08-31,sponcec3] Cleanup of old subrequests stuck waiting on nothing
    [r 1.5,2007-08-31,sponcec3] cleanup of the files having both a STAGED copy and a tape recall going on
  * CASTOR2/castor/db/analyze/BugCleanup2_1_3.sqlplus:
    [r 1.4,2007-09-03,sponcec3] Fixed typo
    [r 1.3,2007-08-31,sponcec3] Added extra cleaning :
    [r 1.3,2007-08-31,sponcec3] Cleanup of the TapeCopies with no DiskCopies
    [r 1.3,2007-08-31,sponcec3] Cleanup of old subrequests stuck waiting on nothing
    [r 1.3,2007-08-31,sponcec3] cleanup of the files having both a STAGED copy and a tape recall going on
  * CASTOR2/castor/db/castor_oracle_create.sql:
    [r1.107,2007-09-05,sponcec3] Regenarated scripts, including fix to reintroduce lost StageGetRequest Table
  * CASTOR2/castor/db/castor_oracle_create.sqlplus:
    [r1.50,2007-09-05,sponcec3] Regenarated scripts, including fix to reintroduce lost StageGetRequest Table
  * CASTOR2/castor/db/castor_postgres_drop.sql:
    [r1.13,2007-09-05,sponcec3] Regenarated scripts, including fix to reintroduce lost StageGetRequest Table
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.30,2007-09-10,waldron] Fixed indentation
  * CASTOR2/castor/db/ora/OraRHSvc.cpp:
    [r 1.4,2007-09-10,waldron] oracle::occi::Statement objects cannot be shared between threads. As a temporary solution to solve the request handlers segmentation fault when use white and black lists a mutex is used to protect the vulnerable section of code.
    [r 1.3,2007-08-31,waldron] Added dedicated 'Permission Denied' DLF message and changed severity to DLF_LVL_AUTH
  * CASTOR2/castor/db/ora/OraRHSvc.hpp:
    [r 1.2,2007-09-10,waldron] oracle::occi::Statement objects cannot be shared between threads. As a temporary solution to solve the request handlers segmentation fault when use white and black lists a mutex is used to protect the vulnerable section of code.
  * CASTOR2/castor/db/ora/OraTapeSvc.cpp:
    [r1.28,2007-09-05,waldron] Added missing optimized attribute when calling bestFileSystemForSegment
  * CASTOR2/castor/db/oracleSchema.sql:
    [r 1.7,2007-09-05,sponcec3] Regenarated scripts, including fix to reintroduce lost StageGetRequest Table
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.496,2007-09-10,waldron] Added some newlines between procedures so that the tool to convert to sqlplus doesn't break
    [r1.495,2007-09-07,sponcec3] Several fixes to the PL/SQL code, all credits to Giuseppe :
    [r1.495,2007-09-07,sponcec3] in bestFileSystemForSegment, fixed the check for free space on the filesystem. It was not taking the hard space limit into consideration, leading to full filesystems.
    [r1.495,2007-09-07,sponcec3] in bestTapeCopyForStream, fixed (actually drop) the reset of NbTapeCopiesInFS in the outer call when calling itself recursively.
    [r1.495,2007-09-07,sponcec3] in archiveSubReq, fix the dropping of too numerous subrequests for a file. Avoid to drop running ones and drop enough requests (we used to drop only one at a time, even if several were over at the same moment)
    [r1.494,2007-09-05,sponcec3] Added some useful debug functions.
    [r1.494,2007-09-05,sponcec3] Try this :
    [r1.494,2007-09-05,sponcec3] SELECT * from TABLE(getDCs(<any id>));
    [r1.494,2007-09-05,sponcec3] SELECT * from TABLE(getSRs(<any id>));
    [r1.494,2007-09-05,sponcec3] any id may be fileid, castorfile id, diskcopy id or subrequest id
    [r1.493,2007-09-04,sponcec3] handling of files having both a STAGED copy and a tape recall when reenabling a filesystem or a diskserver
    [r1.492,2007-09-04,sponcec3] Fixed potential deadlock in fileCleared and fileDeletionFailed
    [r1.491,2007-08-30,itglp] Fixed noPinGCPolicy, bad cut&paste left it uncompilable
    [r1.490,2007-08-30,sponcec3] Reset properly the parent field of the Subrequests when exiting the WaitSubReq status
  * CASTOR2/castor/db/postgresSchema.sql:
    [r 1.6,2007-09-05,sponcec3] Regenarated scripts, including fix to reintroduce lost StageGetRequest Table
  * CASTOR2/castor/gc/GcDaemon.cpp:
    [r1.37,2007-09-04,waldron] Prior to this modification the GcDaemon overrode the start method of the BaseDaemon by its own version. As a consequence of this there was no remote logging to dlf as the dlf thread was never created via a call to dlf_create_threads and the sigwait call of the signal handler was never polled, resulting in all signals being blocked.
  * CASTOR2/castor/gc/GcDaemon.hpp:
    [r 1.7,2007-09-04,waldron] Prior to this modification the GcDaemon overrode the start method of the BaseDaemon by its own version. As a consequence of this there was no remote logging to dlf as the dlf thread was never created via a call to dlf_create_threads and the sigwait call of the signal handler was never polled, resulting in all signals being blocked.
  * CASTOR2/castor/gc/Imakefile:
    [r1.10,2007-09-04,waldron] Updated
  * CASTOR2/castor/gc/gcDaemon.man:
    [r 1.7,2007-09-04,waldron] Updated
  * CASTOR2/castor/io/biniostream.h:
    [r 1.9,2007-09-04,waldron] Negative long values are now unmarshalled correctly on x86_64
  * CASTOR2/castor/jobmanager/CancellationThread.cpp:
    [r 1.4,2007-09-07,waldron] Only do resource requirment checks for jobs which have requested filesystems e.g. GetRequests. Also added missing call to terminate a job in LSF.
  * CASTOR2/castor/jobmanager/JobManagerDaemon.cpp:
    [r 1.6,2007-09-04,waldron] Minor comment change
  * CASTOR2/castor/jobmanager/SubmissionProcess.cpp:
    [r 1.6,2007-09-07,waldron] Added the TYPE attribute back into the external scheduler options so that the request type can be logged when a job is cancelled in the CancellationThread
    [r 1.5,2007-09-04,waldron] Replaced TYPE by DIRECTION in external scheduler options
  * CASTOR2/castor/jobmanager/ora/OraJobManagerSvc.cpp:
    [r 1.4,2007-09-07,waldron] Only do resource requirment checks for jobs which have requested filesystems e.g. GetRequests. Also added missing call to terminate a job in LSF.
  * CASTOR2/castor/repack/repack_oracle_drop.sql:
    [r 1.3,2007-09-10,waldron] Updated to be like the dlf and stager drop scripts
  * CASTOR2/castor/rh/RHThread.cpp:
    [r1.12,2007-08-31,waldron] Added dedicated 'Permission Denied' DLF message and changed severity to DLF_LVL_AUTH
  * CASTOR2/castor/rh/Server.cpp:
    [r1.56,2007-09-05,waldron] Allow the TCPListenerThreadPool to spawn a seperate thread for the listenLoop. If this doesn't happen the accept() call in the loop prevents returning control back to the main and the signals collected by the signal handler thread are never checked resulting in broken signal handling
    [r1.55,2007-09-04,waldron] Updated the command line options to match that offered by the BaseServer i.e. the config-file option has now been added
    [r1.54,2007-08-31,waldron] Added dedicated 'Permission Denied' DLF message and changed severity to DLF_LVL_AUTH
  * CASTOR2/castor/rh/rhserver.man:
    [r 1.2,2007-09-04,waldron] Updated the command line options to match that offered by the BaseServer i.e. the config-file option has now been added
  * CASTOR2/castor/server/Mutex.hpp:
    [r 1.8,2007-09-10,waldron] Fixed indentation
  * CASTOR2/castor/server/TCPListenerThreadPool.cpp:
    [r 1.4,2007-09-04,waldron] Break out of the accept() loop when the file descriptor is bad. This occurs when the process is being shutdown and the listening socket has been closed to prevent further incoming connections. Prior to this, shutdowns resulted in several thousands errors being written to the log file
  * CASTOR2/castor/stager/dbService/StagerCnsHelper.hpp:
    [r1.15,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerDBService.cpp:
    [r1.20,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerJobRequestHandler.cpp:
    [r1.14,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerPrepareToGetHandler.cpp:
    [r1.13,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerPrepareToPutHandler.cpp:
    [r1.13,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerPrepareToUpdateHandler.cpp:
    [r1.16,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerPutDoneHandler.cpp:
    [r 1.9,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerRepackHandler.cpp:
    [r1.15,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerReplyHelper.cpp:
    [r 1.7,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerReplyHelper.hpp:
    [r 1.8,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerRmHandler.cpp:
    [r1.11,2007-09-04,mmartins] empty log message ***
  * CASTOR2/castor/stager/dbService/StagerSetGCHandler.cpp:
    [r 1.7,2007-09-04,mmartins] empty log message ***
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.163,2007-09-05,sponcec3] Fixed bad StageGetRequest declaration leading to not generate it
  * CASTOR2/common/Cthread.man:
    [r1.13,2007-09-10,obarring] Document Cthread_init()
  * CASTOR2/debian/castor-jobmanager-server.prerm:
    [r 1.2,2007-09-05,waldron] Added missing declaration of the CASTOR_SERVICE to be shutdown on uninstall
  * CASTOR2/debian/castor-stager-server.logrotate:
    [r 1.4,2007-08-31,waldron] Added log rotation for cleaning daemon
  * CASTOR2/debian/castor.conf:
    [r1.65,2007-08-29,sponcec3] Marked DIRECTIO and XFSPREALLOC as experimental
  * CASTOR2/debian/control:
    [r1.47,2007-09-07,kotlyar] to build gridftp rpms there should be GLOBUS_LOCATION variable defined, in other case it will provide a standart set of rpms
  * CASTOR2/disksrv/src/gridftp2/external/globus_gridftp_server_CASTOR2ext.c:
    [r 1.4,2007-08-30,kotlyar] uberftp ls command doesn't understand castor's nlink=0 for empty directories, in common  unix file system  it should be  2  (one for '.' and one for '..') so now we return nlink=2 for the empty dirs and for the dirs with two files inside.
    [r 1.4,2007-08-30,kotlyar]
    [r 1.4,2007-08-30,kotlyar] For a security reason we do not allow access for  a path without "/castor".
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
    [r2.11,2007-08-31,waldron] Updated to also move partition indexes into the correct daily tablespace
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
    [r2.11,2007-08-31,waldron] Updated to also move partition indexes into the correct daily tablespace
  * CASTOR2/dlf/web/site.css:
    [r 1.8,2007-09-04,waldron] Minor change to severity colours
  * CASTOR2/maketar.sh:
    [r1.62,2007-09-07,kotlyar] to build gridftp rpms there should be GLOBUS_LOCATION variable defined, in other case it will provide a standart set of rpms
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [r1.22,2007-09-10,obarring] Allow for retry even when diskcopy is on disabled diskserver/filesystem. This
    [r1.22,2007-09-10,obarring] is ok now since streamsToDo() checks that at least one file is available.
  * CASTOR2/scheduler/LSF/Plugin.cpp:
    [r 1.5,2007-09-04,waldron] Removal of unused TYPE option from external scheduler options
  * CASTOR2/stager/stager_db_service.c:
    [r1.175,2007-09-04,sponcec3] Remove file  from nameserver when Cns_chclass fails
  * CASTOR2/tape/mounttape.c:
    [r1.58,2007-08-31,wiebalck] Added the TP020 "mount tape" message back in, which has been removed during
    [r1.58,2007-08-31,wiebalck] the message daemon cleanup (added also a DLF pendant).
  * CASTOR2/tape/tplogger_messages.c:
    [r 1.7,2007-08-31,wiebalck] Added the TP020 "mount tape" message back in, which has been removed during
    [r 1.7,2007-08-31,wiebalck] the message daemon cleanup (added also a DLF pendant).
  * CASTOR2/tools/castor.supp:
    [r 1.5,2007-09-04,waldron] Added additional suppressions for oracle libraries on x86_64
  * CASTOR2/upgrades/2.1.3-24_to_2.1.4-3.sql:
    [r1.20,2007-09-10,waldron] Renamed
    [r1.19,2007-09-10,waldron] Merged in the latest oracleTrailer modifications
    [r1.18,2007-09-04,sponcec3] By default, allow for queries on all service classes ('*' service class)
    [r1.17,2007-08-31,waldron] Added missing sourceDiskCopyId field to table Disk2DiskCopyDoneRequest
  * CASTOR2/upgrades/2.1.3-24_to_2.1.4-3.sqlplus:
    [r 1.9,2007-09-04,sponcec3] By default, allow for queries on all service classes ('*' service class)
    [r 1.8,2007-08-31,waldron] Added missing sourceDiskCopyId field to table Disk2DiskCopyDoneRequest
    [r1.11,2007-09-10,waldron] Renamed
    [r1.10,2007-09-10,waldron] Merged in the latest oracleTrailer modifications
  * CASTOR2/upgrades/dlf_2.1.3-24_to_2.1.4-3.sql:
    [r 1.5,2007-09-10,waldron] Renamed
    [r 1.4,2007-08-31,waldron] Updated to also move partition indexes into the correct daily tablespace
  * CASTOR2/upgrades/dlf_2.1.3-24_to_2.1.4-3.sqlplus:
    [r 1.5,2007-09-10,waldron] Renamed
    [r 1.4,2007-08-31,waldron] Updated to also move partition indexes into the correct daily tablespace
  * CASTOR2/upgrades/repack_2.1.2-*_to_2.1.3-17.sql:
    [r 1.2,2007-09-10,waldron] Updated to follow the standard upgrade template
  * CASTOR2/upgrades/repack_2.1.2-*_to_2.1.3-17.sqlplus:
    [r 1.2,2007-09-10,waldron] Updated to follow the standard upgrade template

-- Dennis Waldron <waldron@cern.ch>  Mon, 10 September 2007 14:30:00 +0100	

castor (2.1.4-3) unstable; urgency=low

  * fixed the PL/SQL versionning (I forgot the C++ oen in previous release)

-- Sebastien Ponce <sponce@cern.ch>  Wed, 28 August 2007 10:30:00 +0100	

castor (2.1.4-2) unstable; urgency=low

  * CASTOR2/castor/Constants.cpp:
  * CASTOR2/castor/Imakefile:
  * CASTOR2/castor/db/cnv/Imakefile:
    [2007-08-27,sponcec3] Compile all new objects for version querying
  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
    [r1.42,2007-08-27,sponcec3] Handle new version request
  * CASTOR2/castor/db/oracleSchema.sql:
    [r 1.6,2007-08-27,sponcec3] New table versionquery
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.488,2007-08-23,itglp] Fix for bug #28986, report free space without taking spaceToBeFreed into account, and taking the hard limit.
    [r1.488,2007-08-23,itglp] Included new SubRequest states 13 and 14 in queries for 'running' subrequests.
  * CASTOR2/castor/jobmanager/SubmissionProcess.cpp:
    [r 1.4,2007-08-23,waldron] Stripped trailing ';' from external scheduler options. This fixes the nshost logging in dlf
  * CASTOR2/castor/rh/Server.cpp:
  * CASTOR2/castor/rh/Server.hpp:
    [2007-08-23,waldron] Inherit from the BaseDaemon and not the BaseServer. This fixes the signal handling and dlf logging
  * CASTOR2/castor/rh/rhserver.scripts:
  * CASTOR2/debian/rhserver.init:
    [2007-08-23,waldron] Fixed restart
  * CASTOR2/commands/castor.c:
    [r 1.7,2007-08-27,sponcec3] Added -s flag returning the stager version
  * CASTOR2/disksrv/src/gridftp2/external/Makefile:
  * CASTOR2/disksrv/src/gridftp2/internal/Makefile:
    [2007-08-23,kotlyar] Removed link to globus header and inserted necessary variables directly to Makefile to simplify building. All you need now is to set GLOBUS_LOCATION only.
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
    [2007-08-24,waldron] Increased max tablespace size to 30G
  * CASTOR2/dlf/web/site.css:
    [r 1.7,2007-08-23,waldron] Use min-width as opposed to width to correct bad formatting when using customized columns
  * CASTOR2/h/Ctape.h:
    [r1.51,2007-08-27,wiebalck] Extension of the bad label message to provide a "reason" and the label
    [r1.51,2007-08-27,wiebalck] data (Savannah Bug #28962).
  * CASTOR2/h/patchlevel.h:
    [r 1.6,2007-08-27,itglp] Add symbols to expose the four parts of a CASTOR version number
  * CASTOR2/h/stager_client_api.h:
    [r1.36,2007-08-27,sponcec3] stage_version api
  * CASTOR2/h/stager_messages.h:
    [r 1.6,2007-08-27,sponcec3] Added DLF messages for query requests
  * CASTOR2/maketar.sh:
    [r1.60,2007-08-27,itglp] Add symbols to expose the four parts of a CASTOR version number
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.165,2007-08-27,obarring] Add missing update of the tapecopy status when detached from streams because
    [r1.165,2007-08-27,obarring] of dual copy on the same tape.
  * CASTOR2/scheduler/LSF/Plugin.cpp:
    [r 1.4,2007-08-23,waldron] Explicitly call dlf_create_threads to enable remote logging
  * CASTOR2/stager/Imakefile:
    [r1.60,2007-08-27,sponcec3] Compile all new objects for version querying
  * CASTOR2/stager/stager_messages.c:
    [r 1.5,2007-08-27,sponcec3] Added DLF messages for query requests
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.54,2007-08-27,sponcec3] Added DLF messages for query requests
    [r1.53,2007-08-27,sponcec3] Do send an end response
    [r1.52,2007-08-27,sponcec3] Implemented VersionQuery service
  * CASTOR2/tape/posittape.c:
  * CASTOR2/tape/readlbl.c:
    [2007-08-27,wiebalck] Extension of the bad label message to provide a "reason" and the label data (Savannah Bug #28962).
  * CASTOR2/test/stager/ClientTest.py:
    [r1.18,2007-08-23,gtaur] missing comma in tuple with single entry
  * CASTOR2/tools/makeRelease.py:
    [r 1.6,2007-08-28,sponcec3] Added creation of a fresh checkout of the code in the internal release space
  * CASTOR2/upgrades/2.1.3-24_to_2.1.4-2.sql:
    [r1.15,2007-08-28,sponcec3] Adapted to version 2.1.4-2
    [r1.14,2007-08-27,sponcec3] Create table VersionQuery
    [r1.13,2007-08-27,waldron] Fixed splitting of subrequest partitions
    [r1.12,2007-08-23,sponcec3] Added missing indexes
  * CASTOR2/upgrades/dlf_2.1.3-24_to_2.1.4-1.sql:
  * CASTOR2/upgrades/dlf_2.1.3-24_to_2.1.4-1.sqlplus:
    [2007-08-28,waldron] Included modifications to partition procedure to increase max size of a tablespace

-- Sebastien Ponce <sponce@cern.ch>  Wed, 28 August 2007 10:30:00 +0100	

castor (2.1.4-1) unstable; urgency=low

  * Second test release of the 2.1.4 series
  * CASTOR2/castor/Constants.cpp:
    [r1.44,2007-08-20,sponcec3] added new RH service
  * CASTOR2/castor/Constants.hpp:
    [r1.78,2007-08-20,sponcec3] added new RH service
  * CASTOR2/castor/Imakefile:
    [r1.150,2007-08-20,sponcec3] new exception PermissionDenied
  * CASTOR2/castor/System.cpp:
    [r 1.6,2007-08-16,sponcec3] Included a porttoi function parsing port numbers and checking the port range
  * CASTOR2/castor/System.hpp:
    [r 1.4,2007-08-16,sponcec3] Included a porttoi function parsing port numbers and checking the port range
  * CASTOR2/castor/cleaning/HouseKeeping.cpp:
    [r1.11,2007-08-21,itglp] Removed call, not needed any longer
  * CASTOR2/castor/cleaning/SpringCleaning.cpp:
    [r1.10,2007-08-21,itglp] Removed call, not needed any longer
  * CASTOR2/castor/cleaning/cleaningDaemon.man:
    [r 1.5,2007-08-14,waldron] Removed reference to expertd
  * CASTOR2/castor/client/BaseClient.cpp:
    [r1.63,2007-08-21,sponcec3] Fixed returned error code when acknowledgement from the RH has false status
    [r1.62,2007-08-16,sponcec3] Dropped porttoi that was exported to castor::System and used new one
  * CASTOR2/castor/client/BaseClient.hpp:
    [r1.23,2007-08-16,sponcec3] Dropped porttoi that was exported to castor::System and used new one
  * CASTOR2/castor/db/analyze/BugCleanup2_1_3.sql:
    [r 1.4,2007-08-10,sponcec3] Added cleanup of files with multiple concurrent recalls (race condition in castor release < 2.1.4-0)
  * CASTOR2/castor/db/analyze/BugCleanup2_1_3.sqlplus:
    [r 1.2,2007-08-10,sponcec3] Added cleanup of files with multiple concurrent recalls (race condition in castor release < 2.1.4-0)
  * CASTOR2/castor/db/castor_oracle_create.sql:
    [r1.102,2007-08-22,waldron] Regenerated
    [r1.101,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/castor/db/castor_oracle_create.sqlplus:
    [r1.45,2007-08-22,waldron] Regenerated
    [r1.44,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/castor/db/castor_postgres_create.sql:
    [r1.25,2007-08-17,sponcec3] Recreated schemas according to latest code
  * CASTOR2/castor/db/castor_postgres_drop.sql:
    [r1.11,2007-08-17,sponcec3] Recreated schemas according to latest code
  * CASTOR2/castor/db/cnv/DbDisk2DiskCopyDoneRequestCnv.cpp:
    [r1.12,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
  * CASTOR2/castor/db/cnv/DbStreamCnv.cpp:
    [r1.15,2007-08-13,waldron] Remove byteVolume attribute from Stream object
  * CASTOR2/castor/db/newora/Imakefile:
    [r1.17,2007-08-20,sponcec3] added new RH service
    [r1.16,2007-08-17,sponcec3] Added new range of DLF messages to be used by the ORACLE library
  * CASTOR2/castor/db/ora/OraJobSvc.cpp:
    [r1.29,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
    [r1.28,2007-08-17,sponcec3] Improved handling of prepareForMigration when file was deleted during transfer. Do not report any failure but log the fact that we recognized the situation and acted accordingly
    [r1.27,2007-08-15,sponcec3] Added a check in prepareForMigration for the case where the file was deleted while being written to
  * CASTOR2/castor/db/ora/OraJobSvc.hpp:
    [r1.10,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.207,2007-08-20,sponcec3] Avoid that two concurrent stagerGetRequests may result in two DiskCopies in status WAITTAPERECALL (#28619)
  * CASTOR2/castor/db/ora/OraStagerSvc.hpp:
    [r1.85,2007-08-20,sponcec3] Avoid that two concurrent stagerGetRequests may result in two DiskCopies in status WAITTAPERECALL (#28619)
  * CASTOR2/castor/db/ora/OraTapeSvc.cpp:
    [r1.27,2007-08-13,waldron] Removed getBytesByStream function
  * CASTOR2/castor/db/ora/OraTapeSvc.hpp:
    [r1.11,2007-08-13,waldron] Removed getBytesByStream function
  * CASTOR2/castor/db/oracleSchema.sql:
    [r 1.5,2007-08-17,sponcec3] Recreated schemas according to latest code
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.486,2007-08-21,waldron] Updated index hint in subrequestToDo to help execution plans, credits to Nilo
    [r1.485,2007-08-21,sponcec3] White and black list creation
    [r1.484,2007-08-21,sponcec3] take empty service class name into account
    [r1.483,2007-08-21,sponcec3] fixed some wrong datatype
    [r1.482,2007-08-21,waldron] Added ESTNOTAVAIL code to failSchedulerJob
    [r1.481,2007-08-20,sponcec3] Black and White list implementation
    [r1.480,2007-08-17,itglp] Adapted SubRequest partition values to newly introduced statuses.
    [r1.480,2007-08-17,itglp] Fix for bug #26534: introduced DiskCopy.gcWeight in the GC policies.
    [r1.479,2007-08-17,sponcec3] in disk2diskCopyDone,  use the id of the source diskCopy instead of its state. This fixes bug #28336 where a migration took place concurrently to replication and the status of the diskcopies were inconsistent at the end
    [r1.478,2007-08-17,sponcec3] In prepareForMigration, will fill filid and nsHost in case of early exit for debug purposes
    [r1.477,2007-08-15,sponcec3] Added a check in prepareForMigration for the case where the file was deleted while being written to
    [r1.476,2007-08-14,waldron] Removed unnecessary select in stream2tapecopy triggers
    [r1.475,2007-08-13,waldron] Fixed the selectFiles2Delete procedure which was not returning correctly the files that should be deleted. Also removed code related to byteVolume in the stream table
  * CASTOR2/castor/db/postgresSchema.sql:
    [r 1.4,2007-08-17,sponcec3] Recreated schemas according to latest code
  * CASTOR2/castor/dlf/Dlf.cpp:
    [r 1.7,2007-08-17,sponcec3] Use ::dlf_isinitialized instead of our own version so that it works also when DLF is initialized from C
    [r 1.6,2007-08-16,sponcec3] Improved logging into DLF. You can now declare new messages even before DLF was initialized. Very useful for libraries loaded before the main is called \!
  * CASTOR2/castor/dlf/Dlf.hpp:
    [r 1.5,2007-08-17,sponcec3] Use ::dlf_isinitialized instead of our own version so that it works also when DLF is initialized from C
    [r 1.4,2007-08-16,sponcec3] Improved logging into DLF. You can now declare new messages even before DLF was initialized. Very useful for libraries loaded before the main is called \!
  * CASTOR2/castor/gc/gcDaemon.man:
    [r 1.6,2007-08-14,waldron] Removed reference to expertd
  * CASTOR2/castor/io/StreamDisk2DiskCopyDoneRequestCnv.cpp:
    [r 1.9,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
  * CASTOR2/castor/jobmanager/CancellationThread.cpp:
    [r 1.3,2007-08-21,waldron] Added support for terminating jobs whose requested filesystems are no longer available
    [r 1.2,2007-08-13,waldron] Fixed recursive calls to the database when an attempt to fail a job throws an exception
  * CASTOR2/castor/jobmanager/CancellationThread.hpp:
    [r 1.2,2007-08-21,waldron] Added support for terminating jobs whose requested filesystems are no longer available
  * CASTOR2/castor/jobmanager/DispatchThread.cpp:
    [r 1.2,2007-08-16,waldron] Fixed recursive submission into LSF observed on x86_64
  * CASTOR2/castor/jobmanager/IJobManagerSvc.hpp:
    [r 1.2,2007-08-21,waldron] Added support for terminating jobs whose requested filesystems are no longer available
  * CASTOR2/castor/jobmanager/JobManagerDaemon.cpp:
    [r 1.5,2007-08-22,waldron] Removed invalid comment
    [r 1.4,2007-08-21,itglp] Fixed typo
    [r 1.3,2007-08-21,waldron] Added support for terminating jobs whose requested filesystems are no longer available
    [r 1.2,2007-08-13,waldron] Changed the default number of preforked workers to 2
  * CASTOR2/castor/jobmanager/SubmissionProcess.cpp:
    [r 1.3,2007-08-16,waldron] Fixed recursive submission into LSF observed on x86_64
  * CASTOR2/castor/jobmanager/ora/OraJobManagerSvc.cpp:
    [r 1.3,2007-08-21,waldron] Added support for terminating jobs whose requested filesystems are no longer available
    [r 1.2,2007-08-16,waldron] Fixed recursive submission into LSF observed on x86_64
  * CASTOR2/castor/jobmanager/ora/OraJobManagerSvc.hpp:
    [r 1.2,2007-08-21,waldron] Added support for terminating jobs whose requested filesystems are no longer available
  * CASTOR2/castor/logstream.cpp:
    [r1.10,2007-08-17,sponcec3] Map VERBOSE mesages to verbose (and no more debug) so that they are ignored by DLF
  * CASTOR2/castor/monitoring/Imakefile:
    [r1.15,2007-08-13,waldron] Remove all objects when cleaning
  * CASTOR2/castor/monitoring/rmmaster/HeartbeatThread.cpp:
    [r 1.5,2007-08-21,waldron] Announce the disabling of a diskserver only once
    [r 1.4,2007-08-13,waldron] Do not change the status of diskservers and filesystems who's admin status is not ADMIN_NONE
  * CASTOR2/castor/monitoring/rmmaster/Imakefile:
    [r1.10,2007-08-13,waldron] Remove all objects when cleaning
  * CASTOR2/castor/monitoring/rmmaster/RmMasterDaemon.cpp:
    [r1.14,2007-08-21,itglp] Use BaseServer::dlfInit
  * CASTOR2/castor/monitoring/rmnode/RmNodeDaemon.cpp:
    [r 1.6,2007-08-21,itglp] Use BaseServer::dlfInit
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.31,2007-08-21,itglp] Use BaseServer::dlfInit
  * CASTOR2/castor/repack/repack_oracle_create.sql:
    [r 1.9,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/castor/repack/repack_oracle_create.sqlplus:
    [r 1.2,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/castor/replier/ClientConnection.cpp:
    [r1.12,2007-08-17,sponcec3] Fixed logging so that it stays reasonnable in DEBUG mode
  * CASTOR2/castor/replier/RequestReplier.cpp:
    [r1.32,2007-08-17,sponcec3] Fixed logging so that it stays reasonnable in DEBUG mode
  * CASTOR2/castor/rh/Imakefile:
    [r1.12,2007-08-16,sponcec3] Rules to install/export the man page of rhserver
  * CASTOR2/castor/rh/RHThread.cpp:
    [r1.11,2007-08-20,sponcec3] Used new RH service for implementing permission checks (when enabled in castor.conf)
  * CASTOR2/castor/rh/RHThread.hpp:
    [r 1.6,2007-08-20,sponcec3] Used new RH service for implementing permission checks (when enabled in castor.conf)
  * CASTOR2/castor/rh/Server.cpp:
    [r1.52,2007-08-21,itglp] Renamed facility to RequestHandler
    [r1.51,2007-08-20,sponcec3] Used new RH service for implementing permission checks (when enabled in castor.conf)
    [r1.50,2007-08-16,sponcec3] Revisited parsing of command line and added -p,--port option
  * CASTOR2/castor/rh/Server.hpp:
    [r 1.7,2007-08-20,sponcec3] Used new RH service for implementing permission checks (when enabled in castor.conf)
    [r 1.6,2007-08-16,sponcec3] Revisited parsing of command line and added -p,--port option
  * CASTOR2/castor/rh/rhserver.scripts:
    [r 1.4,2007-08-22,waldron] Added support for running two rhservers on the same machine each on different ports
  * CASTOR2/castor/rh/rhserver.sysconfig:
    [r 1.3,2007-08-22,waldron] Added support for running two rhservers on the same machine each on different ports
  * CASTOR2/castor/server/BaseDaemon.cpp:
    [r1.23,2007-08-13,waldron] Changed call to dlf_create_threads to reflect changes in dlf api
  * CASTOR2/castor/server/BaseDbThread.cpp:
    [r 1.2,2007-08-21,itglp] Fixed implementation by using the more appropriate init() method
  * CASTOR2/castor/server/BaseDbThread.hpp:
    [r 1.3,2007-08-21,itglp] Fixed implementation by using the more appropriate init() method
  * CASTOR2/castor/server/ForkedProcessPool.cpp:
    [r1.12,2007-08-13,waldron] Changed the severity of logging messages when the pipe between parent and child is closed by the remote end. This only happens during shutdown and is not an error
  * CASTOR2/castor/server/ListenerThreadPool.hpp:
    [r1.11,2007-08-16,sponcec3] Added a method that allows to change the listening port
  * CASTOR2/castor/sharedMemory/Block.hpp:
    [r1.17,2007-08-15,sponcec3] Fixed bad size of the initial free memory block leading to memory corruptions
  * CASTOR2/castor/sharedMemory/BlockDict.cpp:
    [r 1.9,2007-08-15,sponcec3] Fixed logging by properly using the offset for shared memeory messages
  * CASTOR2/castor/sharedMemory/BlockDict.hpp:
    [r 1.8,2007-08-16,sponcec3] Fixed dlf logging
    [r 1.7,2007-08-15,sponcec3] Fixed bad size of the initial free memory block leading to memory corruptions
  * CASTOR2/castor/sharedMemory/DLFInit.cpp:
    [r 1.5,2007-08-16,sponcec3] Fixed dlf logging
  * CASTOR2/castor/sharedMemory/DLFInit.hpp:
    [r 1.2,2007-08-16,sponcec3] Fixed dlf logging
  * CASTOR2/castor/sharedMemory/SingletonBlock.hpp:
    [r 1.9,2007-08-15,sponcec3] Fixed bad size of the initial free memory block leading to memory corruptions
  * CASTOR2/castor/stager/Disk2DiskCopyDoneRequest.cpp:
    [r 1.9,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/Disk2DiskCopyDoneRequest.h:
    [r 1.9,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/Disk2DiskCopyDoneRequest.hpp:
    [r 1.9,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/Disk2DiskCopyDoneRequestCInt.cpp:
    [r 1.7,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/IJobSvc.h:
    [r 1.8,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/IJobSvc.hpp:
    [r 1.7,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/IJobSvcCInt.cpp:
    [r 1.7,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/ITapeSvc.h:
    [r1.10,2007-08-13,waldron] Removed getBytesByStream function
  * CASTOR2/castor/stager/ITapeSvc.hpp:
    [r 1.8,2007-08-13,waldron] Removed getBytesByStream function
  * CASTOR2/castor/stager/ITapeSvcCInt.cpp:
    [r1.12,2007-08-13,waldron] Removed getBytesByStream function
  * CASTOR2/castor/stager/RemoteJobSvc.cpp:
    [r1.11,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/RemoteJobSvc.hpp:
    [r 1.9,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/castor/stager/Stream.cpp:
    [r1.24,2007-08-13,waldron] Remove byteVolume attribute from Stream object
  * CASTOR2/castor/stager/Stream.h:
    [r1.24,2007-08-13,waldron] Remove byteVolume attribute from Stream object
  * CASTOR2/castor/stager/Stream.hpp:
    [r1.17,2007-08-13,waldron] Remove byteVolume attribute from Stream object
  * CASTOR2/castor/stager/StreamCInt.cpp:
    [r1.16,2007-08-13,waldron] Remove byteVolume attribute from Stream object
  * CASTOR2/castor/stager/dbService/StagerCnsHelper.hpp:
  * CASTOR2/castor/stager/dbService/StagerDBService.cpp:
  * CASTOR2/castor/stager/dbService/StagerDBService.hpp:
  * CASTOR2/castor/stager/dbService/StagerGetHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerJobRequestHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerJobRequestHandler.hpp:
  * CASTOR2/castor/stager/dbService/StagerMainDaemon.cpp:
  * CASTOR2/castor/stager/dbService/StagerPrepareToGetHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerPrepareToPutHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerPrepareToUpdateHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerPutDoneHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerPutHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerRepackHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerReplyHelper.cpp:
  * CASTOR2/castor/stager/dbService/StagerReplyHelper.hpp:
  * CASTOR2/castor/stager/dbService/StagerRequestHandler.hpp:
  * CASTOR2/castor/stager/dbService/StagerRequestHelper.hpp:
  * CASTOR2/castor/stager/dbService/StagerRmHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerSetGCHandler.cpp:
  * CASTOR2/castor/stager/dbService/StagerUpdateHandler.cpp:
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.161,2007-08-17,sponcec3] Changed Disk2DiskCopyDoneRequest to store the id of the source diskCopy instead of its state
    [r1.160,2007-08-13,waldron] Removed byteVolume from Stream object
  * CASTOR2/config/Project.tmpl:
    [r1.66,2007-08-15,sponcec3] Yet another missing dependency
    [r1.65,2007-08-15,sponcec3] Fixed another missing dependency
    [r1.64,2007-08-15,sponcec3] Fixed missing build dependency
  * CASTOR2/debian/MigHunter.init:
    [r1.10,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/castor-dlf-server.manpages:
    [r 1.5,2007-08-22,waldron] Fixed missing manpage for dlf_isintialized
  * CASTOR2/debian/castor.conf:
    [r1.64,2007-08-21,itglp] Changed RHLog facility to RequestHandler, and cleaning to Cleaning
    [r1.63,2007-08-21,waldron] Added JobManager/ResReqKill configuration option
    [r1.62,2007-08-20,sponcec3] New library mapping for the RH service
    [r1.61,2007-08-20,sponcec3] New entry to decide whether to user access lists
    [r1.60,2007-08-16,sponcec3] Included new RH/PORT configuration into standard castor.conf (commented)
    [r1.59,2007-08-13,waldron] Changed the default number of preforked jobmanager processes to 2 and corrected the value of JobManager/SharedLSFResource
  * CASTOR2/debian/changelog:
    [r1.164,2007-08-13,sponcec3] New release 2.1.4-0
  * CASTOR2/debian/cleaning.init:
    [r 1.4,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/dlfserver.init:
    [r1.15,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/expertd.init:
    [r 1.5,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/gcDaemon.init:
    [r 1.4,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/jobManager.init:
    [r 1.2,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/policies.py:
    [r 1.6,2007-08-13,waldron] Updated the export function to conform too w/r/o conventions for the direction of transfers
  * CASTOR2/debian/repackserver.init:
    [r 1.6,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/rfiod.init:
    [r 1.5,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/rhserver.init:
    [r 1.8,2007-08-22,waldron] Added support for running two rhservers on the same machine each on different ports
  * CASTOR2/debian/rmMasterDaemon.init:
    [r 1.5,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/rmNodeDaemon.init:
    [r 1.5,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/rtcpclientd.init:
    [r1.10,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/debian/stager.init:
    [r1.10,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/disksrv/src/gridftp2/external/Makefile:
    [r 1.3,2007-08-16,kotlyar] added favor for x86_64
  * CASTOR2/disksrv/src/gridftp2/external/mkheader.sh:
    [r 1.2,2007-08-16,kotlyar] added favor for x86_64
  * CASTOR2/disksrv/src/gridftp2/internal/Makefile:
    [r 1.3,2007-08-16,kotlyar] added favor for x86_64
  * CASTOR2/disksrv/src/gridftp2/internal/mkheader.sh:
    [r 1.2,2007-08-16,kotlyar] added favor for x86_64
  * CASTOR2/dlf/Imakefile:
    [r1.19,2007-08-22,waldron] Fixed missing manpage for dlf_isintialized
    [r1.18,2007-08-17,waldron] Added dlf_isinitialized function
  * CASTOR2/dlf/dlf_lib.c:
    [r1.24,2007-08-17,waldron] Added dlf_isinitialized function
    [r1.23,2007-08-16,sponcec3] Fixed bad sizeof leading to bad handling of message numbers >= 1000
    [r1.22,2007-08-13,waldron] Added an option to the dlf_create_threads function to erase the contents of a threads message buffer prior to thread creation
  * CASTOR2/dlf/doc/man/dlf_create_threads.man:
    [r 1.3,2007-08-13,waldron] Added an option to the dlf_create_threads function to erase the contents of a threads message buffer prior to thread creation
  * CASTOR2/dlf/scripts/mysql/dlf_mysql_create.sql:
    [r 2.8,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/dlf/scripts/mysql/mysqlCreate.sql:
    [r 2.3,2007-08-21,itglp] Changed RHLog facility to RequestHandler, and cleaning to Cleaning
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
    [r 2.7,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
    [r 2.7,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sql:
    [r 2.7,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sqlplus:
    [r 2.6,2007-08-21,itglp] Regenerated for version 2.1.4-1
  * CASTOR2/dlf/scripts/oracle/express/oracleCreate.sql:
    [r 2.3,2007-08-21,itglp] Changed RHLog facility to RequestHandler, and cleaning to Cleaning
  * CASTOR2/dlf/scripts/oracle/oracleCreate.sql:
    [r 2.3,2007-08-21,itglp] Changed RHLog facility to RequestHandler, and cleaning to Cleaning
  * CASTOR2/expert/expertd.scripts:
    [r 1.3,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/h/dlf_api.h:
    [r1.25,2007-08-17,waldron] Added dlf_isinitialized function
    [r1.24,2007-08-17,sponcec3] Added message range for the ORACLE library and defined a VERBOSE error level for which messages are just ignored.
    [r1.23,2007-08-16,sponcec3] Defined a new range for stager library messages
    [r1.22,2007-08-13,waldron] Added an option to the dlf_create_threads function to erase the contents of a threads message buffer prior to thread creation
  * CASTOR2/h/rtcpcld_messages.h:
    [r1.51,2007-08-11,obarring] New error message for false ENOENT from Cns_setsegattr()
  * CASTOR2/h/stager_macros.h:
    [r1.24,2007-08-16,waldron] Fixed 64bit stager segmentation fault. In c++ NULL is an integral constant, while in C it is a defined pointer constant. As a result NULL in va_arg lists must be type cast to const char * especially on 64 bit platforms otherwise the behaviour is undefined. - Refer to http://lwn.net/Articles/93574/ for a nice article on NULL vs 0
  * CASTOR2/job/stagerJob.c:
    [r1.172,2007-08-17,sponcec3] Send properly the old diskCopy id to disk2diskCopyDone and no more the odl diskCopy status
  * CASTOR2/ns/Cns_oracle_ifce.pc:
    [r 1.4,2007-08-20,sponcec3] fixed Cns_seg_metadata to not return EEXIST when any constraint fails but only when the right one does
  * CASTOR2/rfio/rfio_calls.c:
    [r1.18,2007-08-13,waldron] Ignore setgroups failures if not root. Failure to do this causes all tape relation operations to fail with 'operation not permitted' as rfiod tries to give up its privileges multiple times. After the first successful attempt to give up its privileges, subsequent calls to setgroups fail as this is a super-user only call.
  * CASTOR2/rfio/rfio_fcalls.c:
    [r 1.4,2007-08-13,waldron] Ignore setgroups failures if not root. Failure to do this causes all tape relation operations to fail with 'operation not permitted' as rfiod tries to give up its privileges multiple times. After the first successful attempt to give up its privileges, subsequent calls to setgroups fail as this is a super-user only call.
  * CASTOR2/rtcopy/rtcpcldNsInterface.c:
    [r1.42,2007-08-11,obarring] Additional check with Cns_statx() if Cns_setsegattr() returns ENOENT
  * CASTOR2/rtcopy/rtcpclientd.scripts:
    [r 1.3,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/scheduler/LSF/Python.hpp:
    [r 1.2,2007-08-16,itglp] Fixed a method's signature, gcc 4.1.3 + python 2.4.4 were complaining
  * CASTOR2/stager/stager.scripts:
    [r 1.3,2007-08-22,waldron] Minor update to prevent the process name being disabled twice if disabled in sysconfig
  * CASTOR2/stager/stager_db_service.c:
    [r1.174,2007-08-21,itglp] Call SubRequest.getNextStatus also for the new READYFORSCHED case
  * CASTOR2/stager/stager_job_service.cpp:
    [r1.43,2007-08-17,sponcec3] Fixing typo
    [r1.42,2007-08-17,sponcec3] Changed disk2diskCopyDone api to use the id of the source diskCopy instead of its state
  * CASTOR2/tape/rbtsubr.c:
    [r1.33,2007-08-16,wiebalck] Corrected wrong return code in case of a self-checked volume in use (led
    [r1.33,2007-08-16,wiebalck] to "tape not mounted or not ready").
  * CASTOR2/test/CASTORTESTCONFIG:
    [r1.10,2007-08-14,sponcec3] Created a Disk only test suite and included it in the framework. At the time, this tests only the forcing of fileclasses and needs 2 new extra parameters to be set in the config file : DISKONLY_SVCCLASS and FORCED_FILECLASS
  * CASTOR2/test/CastorTestSuite.py:
    [r1.13,2007-08-14,sponcec3] Created a Disk only test suite and included it in the framework. At the time, this tests only the forcing of fileclasses and needs 2 new extra parameters to be set in the config file : DISKONLY_SVCCLASS and FORCED_FILECLASS
  * CASTOR2/test/UtilityForCastorTest.py:
    [r1.12,2007-08-14,sponcec3] Created a Disk only test suite and included it in the framework. At the time, this tests only the forcing of fileclasses and needs 2 new extra parameters to be set in the config file : DISKONLY_SVCCLASS and FORCED_FILECLASS
  * CASTOR2/test/rfio/RfioTest.py:
    [r 1.9,2007-08-14,sponcec3] Created a Disk only test suite and included it in the framework. At the time, this tests only the forcing of fileclasses and needs 2 new extra parameters to be set in the config file : DISKONLY_SVCCLASS and FORCED_FILECLASS
  * CASTOR2/test/stager/ClientTest.py:
    [r1.17,2007-08-14,sponcec3] No fullDiskPool test for the time being
    [r1.16,2007-08-14,sponcec3] Created a Disk only test suite and included it in the framework. At the time, this tests only the forcing of fileclasses and needs 2 new extra parameters to be set in the config file : DISKONLY_SVCCLASS and FORCED_FILECLASS
    [r1.15,2007-08-14,sponcec3] Fixed getStageOut test
    [r1.14,2007-08-14,sponcec3] Uncommented stageRm with SvcClass test and added a getStageOut test
  * CASTOR2/test/tape/TapeTest.py:
    [r 1.5,2007-08-14,sponcec3] Created a Disk only test suite and included it in the framework. At the time, this tests only the forcing of fileclasses and needs 2 new extra parameters to be set in the config file : DISKONLY_SVCCLASS and FORCED_FILECLASS
  * CASTOR2/upgrades/2.1.3-24_to_2.1.4-1.sql:
    [r 1.9,2007-08-21,sponcec3] Added creation of black and while lists of authorized users
    [r 1.8,2007-08-17,itglp] Added update of SubRequest partitioning
    [r 1.7,2007-08-13,waldron] Removed sqlplus conventions
    [r1.10,2007-08-21,sponcec3] Fixed default content of the whitelist. The cake disturbed me and ORACLE has no type checking \!
  * CASTOR2/upgrades/dlf_2.1.3-24_to_2.1.4-0.sql:
    [r 1.2,2007-08-21,itglp] Renamed RHLog facility to RequestHandler, and cleaning to Cleaning
  * CASTOR2/vdqm/vdqmapi.c:
    [r 1.5,2007-08-17,sponcec3] Fixed compilation warnings

-- Dennis Waldron <waldron@cern.ch>  Wed, 22 August 2007 18:30:00 +0100	

castor (2.1.4-0) unstable; urgency=low

  * First test release of 2.1.4 series
  * Here is a list of everything that changed since version v2.1.3-17
  * General
    + rmmaster has been dropped and replace by a jobManager dealing with LSF and the job scheduling
    + scripts have been developed to build new releases easily and to generate all SQL creation scripts with the correct release value.
    + tank specific code was finally dropped
    + new initd scripts and sysconfig files
    + introduced hooks for recall policies. Policies themselves are not implemented yet
  * Disk only related
    + Implemented stageRm per service class
    + Added ability to declare a svcClass as disk only. In this case, requests that need to write to the diskpool (that is puts but also recalls and disk to disk copy) will fail if no space is available instead of filling the LSF queue
    + Added ability to force the fileClass of new files in the disk only pool
  * Stager
    + 2 new status codes exist for SubRequest SUBREQUEST_BEINGSCHED and READYFORSCHED. These are used by the jobManager when dispatching jobs 
    + Log the svcClass for all requests
    + Handle properly requests sent of behalf of somebody else
    + Handle properly cases where STAGEOUT diskcopies are unavailable (disable hardware) or in another fileclass.
    + Added 'ENABLE ROW MOVEMENT' to all tables
    + Added versioning to clients in order to support answering in different ways to different client versions
    + Added check for existence of eligible migration candidates in streamsToDo (bug #26789). This avoids to mount tapes while all candidates are unavailable (disabled hardware)
    + Fix for bug #27311, respect maxReplicaNb when replicating because of disabled/draining filesystems
  * Framework
    + BaseObject now has a thread-shared singleton for the services
    + a new BaseDbThread exists that allows clean drop of db connections
    + implemented easy way to deal with errors from the DB : setting errorMessage and errorCode in the subRequest table (on top of setting status to FAILED) is enough to send an error message to the client.
    + Introduced forked process pools at the framework level. These are used by the jobDispatcher since LSF fork in its API and can thus not be called from a multithreaded daemon
    + New starting sequence: pools' init is called before daemonization, so that ForkedProcessPools get forked before any other thread/process operation.
    + Introduced a shutdown method for pools
    + Refactored signal handling: now calls each pool's shutdown. Added SIGPIPE to the list of signals to ignore and modified the waitAllThreads method to signal all thread and process pools to stop on SIGINT
  * Monitoring
    + Log all status change requests initiated by users. Fixed bug #28411, rmAdminNode does not respect the deleted status of a diskserver when using the -f option
    + announce when a diskserver is brought back into production after previously being disabled after heartbeat timeout
  * GC
    + Added logging of the fileid to log messages when files are deleted to improve traceability
  * DiskServer
    + Added proper cleaning after disk to disk copy failure
    + Fail the job if the localhost does not match the hostname requested by the plugin (#28398)
    + Fixed interrupted RFIO transfers not being correctly committed to the stager (#28372)
  * VMGR
    + Added load balancing of VMGR pools with tapes in multiple libraries (#27319)
  * tape part
    + Extension of the tplogger interface for rtcpd, mainly definition of new messages.
    + Extension of rtcpd to log into DLF (using the tplogger interface of the tape part).
    + Structured DLF logging to ease parsing for monitoring and accounting: added static messages for the typical tape cycle, for the handling of bad MIRs and for the tape alerts.
    + Removal of message daemon from the tape code. The "ask operator" actions in case of failures have been replaced by RTB_NORETRY and RBT_FAST_RETRY for mount and unmounts, respectively.
    + Refinement of 'Volume in use' fix: re-check the mount status of the drive if a 'Volume in use' is encountered. Despite the first (negative) check after EBUSY, the tape may still be mounted (due to a flawed SMC response or a too early check).
    + Refinement of EBUSY handling: an EBUSY error reported by the SCSI layer on a mount does not necessarily mean that the mount failed. A simple retry will hence cause in some cases 'volume in use' errors, which lead to disabled tapes. If receiving an EBUSY, the code will now check if the requested tape is mounted in our drive and retry only if appropriate.
    + Streamlined logging output in case of the new 'Bad MIR' handling in order to ease parsing.
  * RFIO
    + Dropping secondary groups as well when doing setuid/setgid
    + Added timeout to data connection in accept call (#28438)
  * Nameserver
    + Allowed nschclass to change the class for regular files, but only if the user has Cupv admin privilege
    + Added missing man pages
    + fixed memory corruption in nsls on 64 bits (#25468)
  * rtcopy, MigHunter
    + Fixed incorrectly logged checksum with DLF_MSG_PARAM_INT64 leading to segfault for old castorfiles without checksum
    + Added protection against tapecopy linked with NULL castorfile to the MigHunter (#28335)
    + Fixed MigHunter's signal handler (#28414)
    + fixed creation of the rtcopy work directory
    + Added /var/lib/castor as new character device directory for rtcopyd
    + getNumFilesByStream function was added to the TapeSvc and gives the number of files to be migrated in a given stream. This will allow to have thresholds for the number of migrators started (#20052). They will be implemented via streamPolicies attached to service class. No there yet.
  * DLF
    + added separate stager link to ns file id results column in the DLF GUI
    + added automatic creation of partition tablespaces
    + support for large password lengths in connect string
    + Added new loggin severity LOG_STANDARD. This is masking a standard set of rules, logging everything but the DEBUG level locally and everything but DEBUG and USAGE level remotely
  * codegeneration
    + ported to kdesdk 3.5.7

-- Sebastien Ponce <sponcec3@cern.ch>  Wed, 13 August 2007 15:30:00 +0100

castor (2.1.3-17) unstable; urgency=low

  * Bug fix release on top of 2.1.3-16
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
    [2007-06-20,itglp] schema version field is now 'schemaVersion'
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.202,2007-06-20,itglp] Fixed subRequestToDo. It was tightly looping if there was nothing to do...
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
  * CASTOR2/castor/repack/DatabaseHelper.hpp:
  * CASTOR2/castor/repack/RepackCleaner.cpp:
  * CASTOR2/castor/repack/RepackCleaner.hpp:
  * CASTOR2/castor/repack/RepackFileChecker.cpp:
  * CASTOR2/castor/repack/RepackFileStager.cpp:
  * CASTOR2/castor/repack/RepackMonitor.cpp:
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [2007-06-21,gtaur] Fix to make repack thread safe in using the connections to the db (it is still necessary to use only a thread for each thread pool).
    [2007-06-21,gtaur] Fixed the segfault problem in DatabaseHelper, thanks to Sebastien aka "the gdb-guru".
  * CASTOR2/test/CASTORTESTCONFIG:
  * CASTOR2/test/CastorTestSuite.py:
  * CASTOR2/test/tape/TapeTest.py:
    [2007-06-20,gtaur] removed unusefull output and implemented the signal handler to handle correctly the keyboard interrupt for the tape tests when threads are used.

-- Sebastien Ponce <sponcec3@cern.ch>  Wed, 21 June 2007 15:30:00 +0100

castor (2.1.3-16) unstable; urgency=low

  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.24,2007-06-18,itglp] Changed schema version to 2_1_3_16
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
  * CASTOR2/castor/db/ora/OraStagerSvc.hpp:
    [2007-06-13,itglp] Removed decode() SQL function from subrequestFailedToDo, not needed with partitioned SubRequest
    [2007-06-13,itglp] Converted subrequestToDo statement into a PL/SQL procedure with some optimizations from Nilo
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.440,2007-06-19,itglp] schema version field is now 'schemaVersion'
    [r1.439,2007-06-19,itglp] Fixed deletion of a diskserver from the monitoring when requested via rmAdminNode
    [r1.438,2007-06-18,itglp] Modified versioning, and schema upgraded to 2_1_3_16
    [r1.437,2007-06-14,itglp] Fix for garbageCollectFS in case of FileSystems with no GC policy
    [r1.436,2007-06-13,itglp] Introduced procedure for subrequestToDo method.
    [r1.436,2007-06-13,itglp] Better partitioning of SubRequest.
    [r1.435,2007-06-11,itglp] Back SubRequest partitioning for next release
  * CASTOR2/debian/rtcpclientd.init:
    [r 1.8,2007-06-18,waldron] modified initd script
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
    [2007-06-18,waldron] altered to use schemaVer and release in dlf_version table
    [2007-06-13,waldron] added code to check the version of the dlf schema at startup
  * CASTOR2/dlf/scripts/mysql/dlf_mysql_drop.sql:
    [r 1.5,2007-06-13,waldron] added dlf_version drop statement
  * CASTOR2/dlf/web/index.php:
    [r 1.4,2007-06-07,waldron] added displayname to database name in drop down menu
  * CASTOR2/hsmtools/Imakefile:
    [r1.36,2007-06-07,obarring] Add adler32
  * CASTOR2/hsmtools/modifyFileClass.c:
    [r 1.7,2007-06-13,waldron] fixed incorrect handling of command line options
  * CASTOR2/job/stagerJob.c:
    [r1.164,2007-06-13,waldron] also support file:// syntax when reading the notification directory
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.163,2007-06-18,waldron] flag tape as unused in resetStream when stream is in WAITDRIVER
  * CASTOR2/rtcopy/rtcpclientd.c:
    [r1.39,2007-06-18,waldron] fixed signal handling and reset streams with no active process on shutdown
    [r1.38,2007-06-11,waldron] fixed signal handling, a shutdown request now correctly waits for all migrators to end so that the streams can be correctly reset in the database
  * CASTOR2/test/CASTORTESTCONFIG:
  * CASTOR2/test/CastorTestSuite.py:
  * CASTOR2/test/UtilityForCastorTest.py:
  * CASTOR2/test/rfio/RfioTest.py:
  * CASTOR2/test/stager/ClientTest.py:
  * CASTOR2/test/tape/TapeTest.py:
    [2007-06-13,gtaur] Introduction of a second service class to be used for tests, extension of svc class testsstager, service class, extr
    [2007-06-13,gtaur] Remote Host for rfio retrieved with the "stager_qry -s"
    [2007-06-13,gtaur] preparered test case for stager_rm with -S service class (not active now)
  * CASTOR2/upgrades/2.1.2-*_to_2.1.3-14.sql:
  * CASTOR2/upgrades/2.1.2-*_to_2.1.3-14.sqlplus:
  * CASTOR2/upgrades/2.1.2-*_to_2.1.3-15.sql:
  * CASTOR2/upgrades/2.1.2-*_to_2.1.3-15.sqlplus:
    [2007-06-14,itglp] Use BEGIN/END syntax for gathering index statistics
  * CASTOR2/upgrades/template.sql:
    [r 1.2,2007-06-18,itglp] Updated initial revision check
  * CASTOR2/tape/mounttape.c:
    [r 1.54,2007-06-19,wiebalck] Added an automatic repair of corrupted tape directories (MIR). The repair is done by SPACE to EOD and REWIND SCSI commands. The handling of bad MIRs is controlled via the new option BADMIR_HANDLING.

-- Sebastien Ponce <sponcec3@cern.ch>  Wed, 19 June 2007 17:00:00 +0100

castor (2.1.3-15) unstable; urgency=low

  * CASTOR2/castor/db/ora/OraCleanSvc.cpp:
    [r1.13,2007-06-06,gtaur] removeOutOfDateDiskCopies statement was not taken into account in reset() and in the constructor of the clean service
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.433,2007-06-04,sponcec3] Fixed oracle hint in putStart to avoid full table scan of the CastorTable (2nd ORACLE attempt)
    [r1.432,2007-06-04,sponcec3] Named unnamed index (on newrequests, columns id and type)
    [r1.431,2007-06-04,sponcec3] Fixed oracle hint in putStart to avoid full table scan of the CastorTable
    [r1.430,2007-06-04,sponcec3] Fixed case of a file with no diskcopy and no subrequest but which still has a CASTOR file. We were returning null as status, nicely translated into 0 (that is STAGED cvs diff oracleTrailer.sql!) by the oracle API
  * CASTOR2/clips/recallerRetryPolicy.pl:
    [r 1.2,2007-06-05,obarring] Add more retries on system and tape errors
  * CASTOR2/debian/castor-lib.postinst:
    [r 1.2,2007-06-05,sponcec3] Fixing iptable rules for the rang of open ports
  * CASTOR2/debian/castor.conf:
    [r1.54,2007-06-06,waldron] enable rfiod logging by default
    [r1.53,2007-06-01,waldron] added Sched/DynamicPythonLib option
  * CASTOR2/common/serror.c:
  * CASTOR2/h/serrno.h:
  * CASTOR2/h/serrno.man:
    [2007-05-31,obarring] Add new RTCOPY error code: ERTWRONGSIZE - Recalled file size incorrect
  * CASTOR2/hsmtools/enterFileClass.c:
    [r 1.9,2007-05-31,waldron] fixed processing for arguments that do not requirement an argument
  * CASTOR2/job/stagerJob.c:
    [r1.163,2007-06-06,waldron] added support for separate stager trace and rfiod log files
  * CASTOR2/rtcopy/recaller.c:
    [r1.28,2007-05-31,obarring] Use new error code ERTWRONGSIZE to flag tape recalls with wrong filesize
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.162,2007-05-31,obarring] Use new error code ERTWRONGSIZE to flag tape recalls with wrong filesize
    [r1.161,2007-05-31,obarring] Fix too early free of file->dbRef in updcFileRecalled() causing segment to
    [r1.161,2007-05-31,obarring] stay in SEGMENT_SELECTED if filesize is wrong
  * CASTOR2/rtcopy/rtcpd_Disk.c:
  * CASTOR2/rtcopy/rtcpd_Tape.c:
    [2007-06-04,obarring] Avoid deadlock with castor2 clients after errors in Ctape_reserve()
    [2007-06-04,obarring] or Ctape_mount()
  * CASTOR2/scheduler/LSF/Imakefile:
    [r1.20,2007-06-01,waldron] modified to fix compilation problems between Python 2.2 and 2.3
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
  * CASTOR2/scheduler/LSF/schmod_castor.hpp:
    [2007-06-01,waldron] expanded the list of customised pending errors to help in operational debugging
    [2007-06-01,waldron] fixed compiler warnings under -Wall -pedantic and Python 2.3
    [2007-06-01,waldron] fixed missing Python 2.3 symbols at runtime
  * CASTOR2/tape/mounttape.c:
    [r1.53,2007-06-06,wiebalck] Changed signal handling to prevent mount/dismount race in case of a killed
    [r1.53,2007-06-06,wiebalck] mount request. This should fix at least some of the 'volume in use' cases
    [r1.53,2007-06-06,wiebalck] and the 'Destination Element Full' problems.
  * CASTOR2/tape/smcsubr2.c:
    [r 1.9,2007-05-31,wiebalck] Added some debugging for the 'volume in use' issue.

-- Sebastien Ponce <sponcec3@cern.ch>  Wed, 6 June 2007 15:00:00 +0100
	
castor (2.1.3-14) unstable; urgency=low

  * CASTOR2/CASTOR.spec:
    [r1.64,2007-05-25,waldron] added example LSF policies file
  * CASTOR2/castor/db/analyze/BugCleanup2_1_2.sql:
  * CASTOR2/castor/db/analyze/BugCleanup2_1_2.sqlplus:
    [2007-05-25,itglp] Fixed syntax error.
    [2007-05-25,itglp] Added one more cleanup section (credits to Olof)
  * CASTOR2/castor/db/ora/OraGCSvc.cpp:
    [r1.24,2007-05-30,waldron] fixed oracle error, credits to Seb
    [r1.23,2007-05-25,sponcec3] fixed typo leading to segFault
    [r1.22,2007-05-24,sponcec3] Avoid to take long lock on the DB while executing filesDeleted
  * CASTOR2/castor/db/ora/OraGCSvc.hpp:
    [r 1.6,2007-05-24,sponcec3] Avoid to take long lock on the DB while executing filesDeleted
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.426,2007-05-29,waldron] corrected spelling mistake
    [r1.425,2007-05-24,sponcec3] Avoid to take long lock on the DB while executing filesDeleted
  * CASTOR2/castor/monitoring/rmmaster/ora/StatusUpdateHelper.cpp:
    [r 1.7,2007-05-30,waldron] do not add delta values to fresh monitoring information
  * CASTOR2/common/Cuuid.c:
    [r1.12,2007-05-29,waldron] use the lock and unlock definitions of Cuuid_create function to prevent duplicate uuids being created in threaded applications
  * CASTOR2/debian/castor.conf:
    [r1.51,2007-05-30,waldron] updated with new options
  * CASTOR2/debian/rules:
  * CASTOR2/debian/castor-lsf-plugin.install.perm:
    [2007-05-25,waldron] added example LSF policies file
  * CASTOR2/dlf/common.c:
  * CASTOR2/dlf/common.h:
  * CASTOR2/dlf/dlf_lib.c:
  * CASTOR2/dlf/dlf_lib.h:
  * CASTOR2/dlf/doc/man/dlf_init.man:
    [2007-05-29,waldron] added LOGSTANDARD severity, all severities except USAGE and DEBUG
  * CASTOR2/dlf/oracle.pc:
    [r1.23,2007-05-30,waldron] minor change to mutex unlock position
  * CASTOR2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.87,2007-05-29,waldron] removed duplicate resource delimiter ';' in extsched message
  * CASTOR2/rfio/rfmkdir.c:
    [r1.10,2007-05-29,waldron] bug fix for #1288
  * CASTOR2/rtcopy/recaller.c:
    [r1.27,2007-05-24,obarring] Try to carry on with next file if wrong filesize is detected in a recall
  * CASTOR2/rtcopy/rtcp_log.c:
    [r1.21,2007-05-24,obarring] Make log dir configurable
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.160,2007-05-24,obarring] Allow for retry in next iteration (30secs) in case of non-fatal VMGR errors
  * CASTOR2/rtcopy/rtcpd.c:
    [r 1.4,2007-05-24,obarring] Make workdir configurable
  * CASTOR2/rtcopy/rtcpd_Tape.c:
    [r1.89,2007-05-24,obarring] Extra protection against deadlocks when check for more work (castor2 client)
    [r1.89,2007-05-24,obarring] uponearly failures in a tape recall.
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r1.35,2007-05-30,waldron] exposed the total number of allocated LSF job slots to the Python policies
    [r1.34,2007-05-29,waldron] added Python tracebacks to logging output when Python errors are thrown to help debugging
    [r1.34,2007-05-29,waldron] added functionality to cleanup the notification directory after LSF plugin reconfigurations to prevent orphaned files
    [r1.33,2007-05-25,waldron] Explictly check that the return value from the Python call is of type Float
    [r1.33,2007-05-25,waldron] Exposed filesystem read and write data rates to the Python modules namespace
    [r1.33,2007-05-25,waldron] Throttle double match phases
    [r1.32,2007-05-24,waldron] fixed compiliation error
    [r1.31,2007-05-24,waldron] minor change to monitoring to help debugging
    [r1.30,2007-05-24,waldron] added pySetU64 for setting usigned_64 datatypes in the python modules namespace
    [r1.29,2007-05-24,waldron] exclude machines with no available slots in the match phase
  * CASTOR2/scheduler/LSF/schmod_castor.hpp:
    [r 1.9,2007-05-24,waldron] removed LSF job slot information
    [r1.13,2007-05-30,waldron] exposed the total number of allocated LSF job slots to the Python policies
    [r1.12,2007-05-29,waldron] added Python tracebacks to logging output when Python errors are thrown to help debugging
    [r1.12,2007-05-29,waldron] added functionality to cleanup the notification directory after LSF plugin reconfigurations to prevent orphaned files
    [r1.11,2007-05-25,waldron] Explictly check that the return value from the Python call is of type Float
    [r1.11,2007-05-25,waldron] Exposed filesystem read and write data rates to the Python modules namespace
    [r1.11,2007-05-25,waldron] Throttle double match phases
    [r1.10,2007-05-24,waldron] added pySetU64 for setting usigned_64 datatypes in the python modules namespace
  * CASTOR2/stager/stager_db_service.c:
    [r1.163,2007-05-24,itglp] Fix for GetNextStatus: in case of already staged files, they were not visible
    [r1.163,2007-05-24,itglp] with a GetNext-like query after a PrepareToGet

-- Sebastien Ponce <sponcec3@cern.ch>  Wed, 30 May 2007 11:10:00 +0100

castor (2.1.3-13) unstable; urgency=low

  * CASTOR2/CASTOR.spec:
  * CASTOR2/debian/castor-job.cron.hourly:
    [2007-05-23,waldron] removal of hourly cron job for cleaning stagerJob.sh tmp files
  * CASTOR2/castor/db/analyze/BugCleanup2_1_2.sql:
  * CASTOR2/castor/db/analyze/BugCleanup2_1_2.sqlplus:
    [2007-05-23,itglp] Added intermediate commits in the final long block
    [2007-05-22,itglp] Minor fixes and comments
    [2007-05-22,itglp] Fixed logging and made one cleanup block bulk
    [2007-05-21,itglp] Merged subRequest bulk cleanup + shrink tables from Nilo.
    [2007-05-21,itglp] Changed timing to be more aggressive during the cleanup and improved the logging.
  * CASTOR2/castor/db/ora/OraJobSvc.cpp:
    [r1.22,2007-05-23,sponcec3] Removed unused include and fixed initialization of nameserver error buffer
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.424,2007-05-18,waldron] reset the last filesystems used when no diskservers are selected in bestTapeCopyForStream
    [r1.423,2007-05-16,waldron] optimisation of bestTapeCopyForStream to distribute migrators more evenly across diskservers
    [r1.422,2007-05-15,sponcec3] Fixed typo : updateRecallerOpened -> updateFsRecallerOpened
    [r1.421,2007-05-15,sponcec3] Added new index (thanks to Nilo) + fixed typo : updateRecallerFileOpened -> updateRecallerOpened
  * CASTOR2/castor/monitoring/rmmaster/ora/OraRmMasterSvc.cpp:
    [r1.13,2007-05-18,sponcec3] Fixed update of ORACLE when a DELETED diskserver exists
  * CASTOR2/debian/castor-job.install.perm:
    [r 1.6,2007-05-23,waldron] removal of obsolete commands
  * CASTOR2/debian/castor-rmmaster-client.install.perm:
    [r 1.4,2007-05-23,waldron] removal of obsolete commands
  * CASTOR2/debian/castor-rmmaster-server.install.perm:
    [r 1.5,2007-05-23,waldron] removal of obsolete commands
  * CASTOR2/dlf/web/query.php:
    [r1.14,2007-05-18,waldron] provide option for specifying the ordering of results by timestamp
  * CASTOR2/dlf/web/results.php:
    [r1.20,2007-05-18,waldron] display in the summary information how the results are ordered
    [r1.19,2007-05-18,waldron] provide option for specifying the ordering of results by timestamp
  * CASTOR2/hsmtools/enterFileClass.c:
  * CASTOR2/hsmtools/enterSvcClass.c:
  * CASTOR2/hsmtools/modifyFileClass.c:
  * CASTOR2/hsmtools/modifySvcClass.c:
    [2007-05-16,waldron] fixed termination on unknown command line option
  * CASTOR2/job/Imakefile:
    [r1.26,2007-05-23,waldron] removed obsoleted programs and scripts
  * CASTOR2/job/postlsfmsg.c:
  * CASTOR2/job/readlsfmsg.c:
  * CASTOR2/job/stagerJob.shell:
  * CASTOR2/job/stagerJob.sysconfig:
  * CASTOR2/resourcemonitoring/rmadminnode.c:
  * CASTOR2/resourcemonitoring/rmenterjob.c:
  * CASTOR2/resourcemonitoring/rmgetnodes.c:
  * CASTOR2/resourcemonitoring/rmgettime.c:
    [2007-05-23,waldron] obsolete
  * CASTOR2/job/stagerJob.c:
    [r1.162,2007-05-23,waldron] modified to fetch final LSF decision from shared LSF resource
  * CASTOR2/resourcemonitoring/Crmd_checkpoint.c:
    [r 1.6,2007-05-23,waldron] functionality not required
  * CASTOR2/resourcemonitoring/Crmd_recv_from_maui.c:
  * CASTOR2/resourcemonitoring/Crmd_recv_from_rmnode.c:
  * CASTOR2/resourcemonitoring/Crmd_recv_from_users.c:
  * CASTOR2/resourcemonitoring/Crmd_survey.c:
  * CASTOR2/resourcemonitoring/rmmaster.c:
  * CASTOR2/resourcemonitoring/rmsendrep.c:
    [2007-05-23,waldron] Removal of PSUSP
    [2007-05-23,waldron] Removal of message posting to LSF
    [2007-05-23,waldron] Removal of support for rmadminnode, rmgetnodes, rmmodifyjob, rmgettime and rmgetjobs
    [2007-05-23,waldron] Removal of experimental functionality that never worked
    [2007-05-23,waldron] Removal of all but submission threads
    [2007-05-23,waldron] Added support for multiple queues
    [2007-05-23,waldron] Removed rerunnable option from jobs
    [2007-05-23,waldron] Removal of all compiler warnings
  * CASTOR2/resourcemonitoring/Imakefile:
    [r1.31,2007-05-23,waldron] removal of obsolete commands
  * CASTOR2/resourcemonitoring/rm_messages.c:
    [r 1.3,2007-05-23,waldron] removed PSUSP message from logging
* CASTOR2/scheduler/LSF/Imakefile:
    [r1.19,2007-05-23,waldron] modified to include libpython
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
  * CASTOR2/scheduler/LSF/schmod_castor.hpp:
    [2007-05-23,waldron] Added support for multiple pending codes (#26135)
    [2007-05-23,waldron] Removal of message boxs 0 and 4 in favour of using extsched (external scheduler) options set by the job at submission time
    [2007-05-23,waldron] Provided support for per svcclass externalised policies utilising an embedded python interpreter
    [2007-05-23,waldron] Improved logging and traceability by including fileid, requestid and subrequestid in all logging messages
    [2007-05-23,waldron] Fixed duplicate increase of readStreams in updateFileSystemForJob
    [2007-05-23,waldron] Added stream direction (read/write/readwrite) information to handler data, sent from rmmaster
    [2007-05-23,waldron] Improved recoverability on `badmin reconfig`
    [2007-05-16,sponcec3] Fixed diskserver summary when updating filesystem load
  * CASTOR2/stager/stager_db_service.c:
    [r1.162,2007-05-23,waldron] rmjob executable is now stagerJob not stagerJob.sh
    [r1.161,2007-05-22,sponcec3] Use ESTSEGNOACC instead of internal error when no tape copy can be found
  * CASTOR2/stager/stager_job_service.cpp:
    [r1.40,2007-05-18,sponcec3] Fixed stager memory leak in case of failure in prepareForMigration
  * CASTOR2/tape/mounttape.c:
  * CASTOR2/tape/posovl.c:
  * CASTOR2/tape/rlstape.c:
  * CASTOR2/tape/tpdaemon.c:
    [2007-05-23,wiebalck] Make use of the TPVID param of the tplogger/dlf interface.

-- Sebastien Ponce <sponcec3@cern.ch>  Wed, 23 May 2007 22:00:00 +0100

castor (2.1.3-12) unstable; urgency=low

  * CASTOR2/castor/monitoring/rmmaster/Imakefile:
    [r1.9,2007-05-15,sponcec3] Fixed compile time library dependencies for rmMaster
	
castor (2.1.3-11) unstable; urgency=low

  * Bug fix release on top of 3.10
  * CASTOR2/castor/Imakefile:
    [r1.146,2007-05-10,mmartins] Included rules for the C++ version of the stager db service
  * CASTOR2/castor/db/castor_oracle_create.sql:
  * CASTOR2/castor/db/castor_oracle_create.sqlplus:
    [2007-05-11,sponcec3] added lastFileSystemChange and lastFileSystemUsed to Stream object
  * CASTOR2/castor/db/cnv/DbDiskServerCnv.cpp:
    [r1.13,2007-05-07,sponcec3] droped load and added aggregated read/write rates, read, write, read/write, migrator and recaller number of streams
  * CASTOR2/castor/db/cnv/DbFileSystemCnv.cpp:
    [r1.17,2007-05-07,sponcec3] Added mnMigratorStreams and nbRecallerStreams
  * CASTOR2/castor/db/newora/OraCommonSvc.cpp:
    [r1.21,2007-05-10,waldron] corrected indentation
    [r1.20,2007-05-07,sponcec3] Adapted to changes in filesystem and diskserver objects
  * CASTOR2/castor/db/ora/OraJobSvc.cpp:
    [r1.21,2007-05-10,gtaur] fix for the putDone(bug 26177) and fix against the  accumulation of putDone requests
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.420,2007-05-14,sponcec3] Improved bestTapeCopyForStream by trying to reuse filesystems during 15mn when migrating from one
    [r1.419,2007-05-11,waldron] added on behalf of seb for new procedures updateFSMigratorOpened and updateFsRecallerOpened
    [r1.418,2007-05-10,waldron] fixed typos
    [r1.417,2007-05-10,waldron] fixed all FileSystemRate calls and fixed the storeClusterStatus procedure writing incorrect data to the diskserver table which caused transfers to fail
    [r1.416,2007-05-09,waldron] remove load from updateFsFileOpen and updateFsFileClosed
    [r1.415,2007-05-09,waldron] dropped load and added migrator and recaller streams + fix in storeClusterStatus procedure
    [r1.414,2007-05-07,sponcec3] Adapted to changes in filesystem and diskserver objects
    [r1.413,2007-05-03,itglp] Better fix for double job scheduling in PutStart: the job is failed only when
    [r1.413,2007-05-03,itglp] the new filesystem is different, so SRM Put cycle is properly accepted.
    [r1.412,2007-05-02,sponcec3] Fixed sign in filesystemrating. This had for consequence to always take the busiest filesystem for any scheduling :-((
    [r1.411,2007-05-02,itglp] Fixed stupid error in putStart (introduced when fixing the double job issue)
    [r1.411,2007-05-02,itglp] Changed GC timing + added comments, but a revision is needed
  * CASTOR2/castor/dlf/Param.hpp:
    [r 1.5,2007-05-03,waldron] added constructor for sub request uuids
  * CASTOR2/castor/gc/GcDaemon.cpp:
  * CASTOR2/castor/gc/GcDaemon.hpp:
  * CASTOR2/castor/gc/gcDaemon.man:
    [2007-05-14,waldron] implemented random delay at startup
  * CASTOR2/castor/io/StreamDiskServerMetricsReportCnv.cpp:
  * CASTOR2/castor/monitoring/DiskServerMetricsReport.cpp:
  * CASTOR2/castor/monitoring/DiskServerMetricsReport.hpp:
    [2007-05-07,sponcec3] Dropped load
  * CASTOR2/castor/monitoring/DiskServerStatus.cpp:
  * CASTOR2/castor/monitoring/DiskServerStatus.hpp:
    [r 1.4,2007-05-07,sponcec3] droped load and added aggregated read/write rates, read, write, read/write, migrator and recaller number of streams
  * CASTOR2/castor/io/StreamFileSystemCnv.cpp:
  * CASTOR2/castor/io/StreamFileSystemMetricsReportCnv.cpp:
  * CASTOR2/castor/monitoring/FileSystemMetricsReport.cpp:
  * CASTOR2/castor/monitoring/FileSystemMetricsReport.hpp:
  * CASTOR2/castor/monitoring/FileSystemStatus.cpp:
  * CASTOR2/castor/monitoring/FileSystemStatus.hpp:
    [2007-05-07,sponcec3] Added nbMigratorStreams and nbRecallerStreams
  * CASTOR2/castor/monitoring/RmGetNodes.cpp:
    [r 1.8,2007-05-09,waldron] fixed alignment problems in output caused by incorrect indentation
  * CASTOR2/castor/monitoring/rmmaster/ora/OraRmMasterSvc.cpp:
    [r1.12,2007-05-09,waldron] fixed incorrect fill of oracle buffers
    [r1.11,2007-05-07,sponcec3] Adapted to changes in filesystem and diskserver objects
  * CASTOR2/castor/monitoring/rmmaster/ora/StatusUpdateHelper.cpp:
    [r 1.6,2007-05-07,sponcec3] Adapted to changes in filesystem and diskserver objects
  * CASTOR2/castor/monitoring/rmnode/MetricsThread.cpp:
    [r1.16,2007-05-09,waldron] fixed write stream attribute
    [r1.15,2007-05-09,waldron] modifications to distinguish user streams from migrators and recallers
  * CASTOR2/castor/stager/DiskServer.cpp:
  * CASTOR2/castor/stager/DiskServer.h:
  * CASTOR2/castor/stager/DiskServer.hpp:
  * CASTOR2/castor/stager/DiskServerCInt.cpp:
    [2007-05-07,sponcec3] droped load and added aggregated read/write rates, read, write, read/write, migrator and recaller number of streams
  * CASTOR2/castor/stager/FileSystem.cpp:
  * CASTOR2/castor/stager/FileSystem.h:
  * CASTOR2/castor/stager/FileSystem.hpp:
  * CASTOR2/castor/stager/FileSystemCInt.cpp:
    [2007-05-07,sponcec3] Added mnMigratorStreams and nbRecallerStreams
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.153,2007-05-14,sponcec3] resurected lost inheritance from StreamReport to IObject
    [r1.152,2007-05-14,sponcec3] added lastButOneFileSystemUsed to Stream
    [r1.151,2007-05-11,sponcec3] added lastFileSystemChange and lastFileSystemUsed to Stream object
    [r1.150,2007-05-09,sponcec3] droped load and added aggregated read/write rates, read, write, read/write, migrator and recaller number of streams
    [r1.149,2007-05-07,sponcec3] added nbMigratorStreams nbRecallerStreams to FileSystemMetricsReport and dropped load from DiskServerMetricsReport
  * CASTOR2/config/Project.tmpl:
  * CASTOR2/config/site.def:
    [2007-05-10,mmartins] Included rules for the C++ version of the stager db service
  * CASTOR2/debian/castor.conf:
    [r1.50,2007-05-14,waldron] added MaxReadersWhileMigrating option
    [r1.49,2007-05-14,waldron] added restriction on the maximum number of streams per filesystem
    [r1.48,2007-05-09,waldron] added MaxWritersWhileMigrating option
    [r1.47,2007-05-09,waldron] removed load coefficients
    [r1.46,2007-05-08,wiebalck] Added new option TAPE CANCEL_ON_BADMIR [YES/NO] for the handling of tapes
    [r1.46,2007-05-08,wiebalck] with invalid MIRs.
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
    [2007-05-03,waldron] null the subreqid field before database insertion
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sqlplus:
    [2007-05-08,waldron] modified tape stats table and procedure
  * CASTOR2/dlf/web/results.php:
    [r1.18,2007-05-03,waldron] added title attribute to timestamp cell
  * CASTOR2/hsmtools/c2probe.c:
    [r 1.4,2007-05-07,waldron] fixed compiler warnings
  * CASTOR2/hsmtools/enterFileClass.c:
  * CASTOR2/hsmtools/enterSvcClass.c:
  * CASTOR2/hsmtools/modifyFileClass.c:
  * CASTOR2/hsmtools/modifySvcClass.c:
    [2007-05-07,waldron] terminate on unknown command line option
  * CASTOR2/hsmtools/reclaim.c:
  * CASTOR2/job/RemoteJobSvc.c:
  * CASTOR2/job/RemoteJobSvc.h:
    [2007-05-10,waldron] fixed compiler warnings
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.27,2007-05-11,obarring] Fix #23961: better handling of vmgr errors.
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r1.26,2007-05-14,waldron] added MaxReadersWhileMigrating option
    [r1.25,2007-05-14,waldron] added restriction on the maximum number of streams per filesystem
    [r1.24,2007-05-10,sponcec3] Fixed error in allowStream (read streams counted instead of write ones)
    [r1.23,2007-05-10,waldron] added random weight to filesystem selection
    [r1.22,2007-05-09,waldron] added support for restricting the number of writing jobs on a filesystem while migrations are happending
    [r1.21,2007-05-09,waldron] removed load coefficients
    [r1.20,2007-05-03,waldron] Improved traceability by including request and sub request ids in all logging messages wherever possible
  * CASTOR2/scheduler/LSF/schmod_castor.hpp:
    [r 1.7,2007-05-14,waldron] added MaxReadersWhileMigrating option
    [r 1.6,2007-05-09,waldron] added support for restricting the number of writing jobs on a filesystem while migrations are happending
  * CASTOR2/stager/stager_db_service.c:
    [r1.159,2007-05-10,gtaur] fix for the putDone(bug 26177) and fix against the  accumulation of putDone requests
    [r1.158,2007-05-08,gtaur] Fix against accumultion orphaned subrequest see bug report #26176
  * CASTOR2/tape/mounttape.c:
    [r1.51,2007-05-08,wiebalck] Bad MIR fix: take the operator out of the loop when handling a tape with
    [r1.51,2007-05-08,wiebalck] an invalid MIR. Rely on the healing capabilities of the drive during the
    [r1.51,2007-05-08,wiebalck] next access. (Controlled by new option TAPE CANCEL_ON_BADMIR [YES/NO])
  * CASTOR2/tape/rbtsubr.c:
    [r1.29,2007-05-09,wiebalck] Fixed a bogus function call of the tape logger interface.
    [r1.28,2007-05-09,wiebalck] Fixed a bug in the number of parameters passed to the variadic log function
    [r1.28,2007-05-09,wiebalck] of the tape logging interface.
  * CASTOR2/test/CASTORTESTCONFIG:
  * CASTOR2/test/CastorTestSuite.py:
  * CASTOR2/test/UtilityForCastorTest.py:
  * CASTOR2/test/rfio/RfioTest.py:
  * CASTOR2/test/stager/ClientTest.py:
    [2007-05-03,gtaur] small fix
    [2007-05-02,gtaur] New recall/migration tests added in the new TapeTest
    [2007-05-02,gtaur] File CASTORTESTCONFIG is not in /etc/castor but in the local dir
    [2007-05-02,gtaur] CASTORTESTCONFIG modified to be more user friendly
    [2007-05-02,gtaur] Added the UseEnv parameter to avoid to use castor 1 and to skip problems with castor.conf and castormap.conf
    [2007-05-02,gtaur] keyboard interrupt exceptions now handled properly
    [2007-05-02,gtaur] problems with runOnShell solved
    [2007-05-02,gtaur] Pre-requisites tests are now mandatory and a function in UtilityForCastorTest has been added to check basic functionality in Castor
  * CASTOR2/upgrades/dlf_2.1.2-x_to_2.1.3-x.sql:
  * CASTOR2/upgrades/dlf_2.1.2-x_to_2.1.3-x.sqlplus:
    [2007-05-10,waldron] updated to reflect latest changes
	
castor (2.1.3-10) unstable; urgency=low

  * Bug fix release on top of 3.9
  * CASTOR2/castor/db/DbBaseObj.cpp:
  * CASTOR2/castor/db/DbBaseObj.hpp:
  * CASTOR2/castor/db/DbCnvSvc.cpp:
  * CASTOR2/castor/db/DbCnvSvc.hpp:
  * CASTOR2/castor/db/cnv/DbBaseCnv.cpp:
    [2007-04-27,itglp] Fixed automatic renewal of the database connection for all hand-written services. Now the registration of db objects happens at the highest level (DbBaseObj).
  * CASTOR2/castor/db/mysql/MyCnvSvc.cpp:
    [r1.11,2007-04-30,waldron] newline characters are not permitted inside dlf messages
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.23,2007-04-30,waldron] newline characters are not permitted inside dlf messages
    [r1.22,2007-04-27,itglp] Yet another errorcode for dropConnection + better comments
  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
    [r1.41,2007-04-26,sponcec3] Fixed missing initialization of reservedSpace
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.409,2007-04-27,sponcec3] Fixed problem with spaceToBeFreed going negative
    [r1.408,2007-04-27,sponcec3] Fix insert statement in storeClusterStatus
    [r1.407,2007-04-27,sponcec3] Fixed typo
    [r1.406,2007-04-26,itglp] Fixed garbageCollectFS in the case no policy has to be applied (Disk1 pools)
    [r1.405,2007-04-25,itglp] Really fix putStart for double job scheduling
  * CASTOR2/castor/db/pgsql/PgCnvSvc.cpp:
    [r 1.2,2007-04-30,waldron] newline characters are not permitted inside dlf messages
  * CASTOR2/stager/stager_client_api_query.cpp:
    [2007-04-25,sponcec3] Reintroduced reservedSpace for backward compatibility
  * CASTOR2/castor/io/UDPSocket.cpp:
    [r 1.5,2007-04-27,sponcec3] Fix buffer shifting
    [r 1.4,2007-04-26,waldron] bind the udp socket in the UDPListenerThreadPool
    [r 1.3,2007-04-26,waldron] fixed expected number of bytes returned from sendto
  * CASTOR2/castor/io/UDPSocket.hpp:
    [r 1.3,2007-04-26,waldron] bind the udp socket in the UDPListenerThreadPool
  * CASTOR2/castor/monitoring/DiskServerStatus.cpp:
  * CASTOR2/castor/monitoring/FileSystemStatus.cpp:
    [2007-04-30,itglp] Print space metrics like df -h
  * CASTOR2/castor/monitoring/rmmaster/RmMasterDaemon.cpp:
    [r1.11,2007-04-30,waldron] switch to 3 listener threads
    [r1.10,2007-04-27,sponcec3] Only start 1 update thread, it's far enough
  * CASTOR2/castor/monitoring/rmnode/MetricsThread.cpp:
    [r1.14,2007-04-30,waldron] fixed segmentation fault when readlink fails
  * CASTOR2/castor/server/UDPListenerThreadPool.cpp:
    [r 1.3,2007-04-26,waldron] bind the udp socket in the UDPListenerThreadPool
  * CASTOR2/castor/stager/BaseTapeSvc.cpp:
    [r 1.3,2007-04-26,waldron] changed error message
  * CASTOR2/debian/castor.conf:
    [r1.45,2007-04-30,waldron] switch to 2 minutes heartbeat timeout
    [r1.44,2007-04-27,sponcec3] Added GC INTERVAL entry
    [r1.43,2007-04-26,sponcec3] Added coeff that gives an estimation of the expected average file size. This is used for estimate amount of data to be written by ongoing streams
  * CASTOR2/dlf/dlf_lib.c:
    [r1.16,2007-04-25,waldron] optimisation in the dlf_writep call
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sqlplus:
    [2007-04-30,waldron] added automatic generation of tape statistics
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sqlplus:
    [2007-04-30,waldron] ignore monitoring tables
    [2007-04-30,waldron] generic drop script for all database objects
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_grant.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_grant.sql:
  * CASTOR2/upgrades/dlf_2.1.2-x_to_2.1.3-x.sql:
  * CASTOR2/upgrades/dlf_2.1.2-x_to_2.1.3-x.sqlplus:
    [2007-04-30,waldron] added grant to dlf_tapestats
  * CASTOR2/dlf/web/config.php:
    [r 1.8,2007-04-30,waldron] version change
  * CASTOR2/dlf/web/results.php:
    [r1.17,2007-04-30,waldron] fixed versioning in footer
    [r1.16,2007-04-30,waldron] fixed facility lookup when fac_no = 0
  * CASTOR2/h/rtcpcld_messages.h:
    [r1.49,2007-04-30,waldron] changed stats message severity to MONITORING
  * CASTOR2/rtcopy/rtcpclientd.c:
    [r1.37,2007-04-30,waldron] fixed block signal handling in execv processes caused by inherited sigmask
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r1.19,2007-04-30,sponcec3] Changed computation of freeSpace from unsigned to signed so that we don't schedule on filesystems with 0% free space thinking there is 2^64-epsilon bytes free...
    [r1.18,2007-04-27,sponcec3] Let read only jobs go through whatever the space situation is
    [r1.17,2007-04-26,sponcec3] better estimation of the actual free space on a filesystem by taking into account running streams
  * CASTOR2/scheduler/LSF/schmod_castor.hpp:
    [r 1.5,2007-04-26,sponcec3] better estimation of the actual free space on a filesystem by taking into account running streams
  * CASTOR2/stager/stager_db_service.c:
    [r1.157,2007-04-30,sponcec3] Fixed memory leak in the stager. Credits to Marisa
  * CASTOR2/stager/stager_gc_service.cpp:
    [r1.13,2007-04-30,itglp] Reset pointer to 0 after free (Found by Giulia with insure some time ago)
  * CASTOR2/upgrades/2.1.3-*_to_2.1.3-8.sql:
  * CASTOR2/upgrades/2.1.3-*_to_2.1.3-8.sqlplus:
    [2007-04-26,itglp] Drop nullGCPolicy and update SvcClass.gcPolicy to '' where they were using it

castor (2.1.3-9) unstable; urgency=low

  * Bug fix release on top of 3.8
  * CASTOR2/castor/db/castor_oracle_create.sql:
  * CASTOR2/castor/db/castor_oracle_create.sqlplus:
  * CASTOR2/castor/db/castor_postgres_create.sql:
    [2007-04-24,sponcec3] Fixed too long index name
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.404,2007-04-24,sponcec3] Fixed too long index name
    [r1.403,2007-04-23,itglp] One more fix for PrepareToGet: don't schedule if diskcopies are available on the requested service class. Fix for PutStart in case LSF scheduled the job twice (see bug rep. #14358).
  * CASTOR2/castor/monitoring/rmmaster/CollectorThread.cpp:
    [r1.11,2007-04-20,sponcec3] Fixed missing return leading to segfault
  * CASTOR2/castor/monitoring/rmmaster/HeartbeatThread.cpp:
  * CASTOR2/castor/monitoring/rmmaster/HeartbeatThread.hpp:
    [2007-04-24,itglp] Read the timeout value only once in the constructor
  * CASTOR2/castor/monitoring/rmmaster/ora/OraRmMasterSvc.cpp:
    [r 1.9,2007-04-20,sponcec3] Avoid to send FileSystem when updating the DB for a Deleted DiskServer
    [r1.10,2007-04-24,itglp] Make sure an ADMIN_NONE status in db is provided as RELEASE when
    [r1.10,2007-04-24,itglp] resetting the shared memory at rmMasterDaemon startup
  * CASTOR2/castor/monitoring/rmmaster/ora/StatusUpdateHelper.cpp:
    [r 1.5,2007-04-24,sponcec3] enforced types on 64bits operations
  * CASTOR2/castor/monitoring/rmnode/MetricsThread.cpp:
    [r1.13,2007-04-23,waldron] fixed stream reporting
  * CASTOR2/codeGeneration/gencastor/umbrello/codegenerators/cppcppdbcnvwriter.cpp:
    [r1.17,2007-04-24,sponcec3] Fixed names of long indexes by truncating the table name
  * CASTOR2/debian/castor.conf:
    [r1.42,2007-04-24,waldron] bug fix: https://savannah.cern.ch/bugs/index.php?25801
  * CASTOR2/debian/dlfserver.init:
  * CASTOR2/debian/rmMasterDaemon.init:
  * CASTOR2/debian/rmNodeDaemon.init:
    [2007-04-24,waldron] check to see if process is already running when starting
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r1.16,2007-04-24,sponcec3] Fixed load estimation, enforced types on 64bits operations and use deltaFreeSpace instead of freeSpace
    [r1.15,2007-04-24,sponcec3] Raised level of message giving output of the scheduling from DEBUG to SYSTEM
  * CASTOR2/test/rfio/parallelFileAccess.c:
    [r1.14,2007-04-23,sponcec3] Fixed option parsing problem
    [r1.13,2007-04-23,sponcec3] Added a WriteOnly flag. If set, files are written to CASTOR and never read back

castor (2.1.3-8) unstable; urgency=low
  
  * Bug fix release on top of 3.7
  * General :
    + drop reservedSpace and freeSpace in the DB
    + added min/max/minAllowedFreeSpace in the monitoring part and update DB from there
  * CASTOR2/castor/Imakefile:
    [r1.145,2007-04-20,sponcec3] Added missing converter for StreamReport
  * CASTOR2/castor/db/analyze/admin.sql:
    [r 1.5,2007-04-20,itglp] Added query for getting the physical space used by a given table
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.199,2007-04-18,itglp] Check for segments to recall as soon as possible
  * CASTOR2/castor/db/oracleHeader_drop.sql:
    [r1.11,2007-04-20,itglp] Adapted for new GC job
    [r1.10,2007-04-19,waldron] added drop for GCInvalidDiskCopiesJob scheduler job
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.402,2007-04-20,sponcec3] Fixed garbageCollect and storeStatusCode for stupid errors
    [r1.398,2007-04-20,itglp] One more tiny fix to the GC
    [r1.397,2007-04-20,itglp] Dropped old GC jobs + FileSystem trigger (Miguel will dance!).
    [r1.397,2007-04-20,itglp] Created a new scheduled db job for all garbage collect activities.
    [r1.397,2007-04-20,itglp] Simplified defaultGCPolicy, doesn't look for INVALID diskcopies any longer.
    [r1.396,2007-04-19,sponcec3] Named unique constraints created by hand
    [r1.393,2007-04-19,itglp] Fix for disk-to-disk copy scheduling and refactoring of isSubRequestToSchedule
    [r1.393,2007-04-19,itglp] to handle PutDone in a separate section. Moreover, a PutDone is now accepted
    [r1.393,2007-04-19,itglp] on a disabled diskserver since there's no operation to be performed there.
  * CASTOR2/castor/monitoring/RmGetNodes.cpp:
    [r 1.7,2007-04-20,sponcec3] Fixed output in case no diskServer is registered
    [r 1.6,2007-04-18,waldron] do not display delete disk servers in output
  * CASTOR2/castor/monitoring/admin/RmAdminNode.cpp:
  * CASTOR2/castor/monitoring/admin/rmAdminNode.man:
    [r 1.4,2007-04-19,sponcec3] Changed rmAdminNode options according to Miguel's views. This simplified the code quite a lot
  * CASTOR2/castor/monitoring/rmmaster/RmMasterDaemon.cpp:
    [r 1.9,2007-04-18,waldron] update for heartbeat thread checks
  * CASTOR2/codeGeneration/gencastor/umbrello/codegenerators/cppcppdbcnvwriter.cpp:
    [r1.16,2007-04-19,sponcec3] Named all indexes created by primary key constraints
  * CASTOR2/debian/castor.conf:
    [r1.40,2007-04-18,waldron] added RmMaster HeartbeatTimeout configuration option
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
    [2007-04-19,waldron] resolve dlf facility names to ids in memory to prevent unnecessary calls to the database
  * CASTOR2/job/stagerJob.c:
    [r1.161,2007-04-19,itglp] Don't send a reply to clients for PrepareToXxx requests as the stager already answered
  * CASTOR2/maketar.sh:
    [r1.57,2007-04-19,waldron] removed config directive on non config files
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r1.14,2007-04-20,sponcec3] Takes minAllowedFreeSpace into account when scheduling
  * CASTOR2/stager/stager_db_service.c:
    [r1.156,2007-04-18,itglp] Fix for tape recall errors (in case of createRecallCandidate failures it was
    [r1.156,2007-04-18,itglp] segfaulting) plus some reindentation
  * CASTOR2/tape/rbtsubr.c:
    [r1.27,2007-04-18,wiebalck] Fixed a logging message and added logging calls to make the logging output
    [r1.27,2007-04-18,wiebalck] look the same as before the EBUSY logic.
  * CASTOR2/stage/Imakefile:
  * CASTOR2/job/Imakefile:
  * CASTOR2/ns/Imakefile:
  * CASTOR2/upv/Imakefile:
  * CASTOR2/vmgr/Imakefile:
    [2007-04-18,waldron] remove all generated files when clobbering
	
castor (2.1.3-7) unstable; urgency=low

  * Bug fix release on top of 3.6.
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.20,2007-04-16,itglp] Fully drop Oracle environment when dropping connection
  * CASTOR2/castor/db/newora/OraCommonSvc.cpp:
    [r1.17,2007-04-18,sponcec3] Removed unneeded FOR UPDATE in the selectFileSystem query in order to avoid dead locks. Now this was added in version 1.108 of OraStagerService on purpose so it used to have some utility but right now, I don't see any
  * CASTOR2/castor/db/ora/OraGCSvc.cpp:
    [r1.21,2007-04-17,sponcec3] Better fix : the malloc itself was wrong
    [r1.20,2007-04-17,sponcec3] Fixed wrong size in a malloc leading to segfaults
  * CASTOR2/castor/monitoring/RmGetNodes.cpp:
    [r 1.4,2007-04-17,sponcec3] Fixed -n flag and added some checks
    [r 1.3,2007-04-17,sponcec3] Added -h and -n flags. -n allows to ask for info for a single node
  * CASTOR2/castor/monitoring/admin/RmAdminNode.cpp:
    [r 1.6,2007-04-17,sponcec3] Fixed initialization of recursive flag. Due to this bug, rmAdminNode was always considering that -r was present
  * CASTOR2/clips/Cconstants.pm:
  * CASTOR2/clips/Cdiskserver.pm:
  * CASTOR2/clips/Cfilesystem.pm:
  * CASTOR2/clips/Cinterface.pm:
  * CASTOR2/clips/Cutils.pm:
  * CASTOR2/clips/bestfs.pl:
    [2007-04-17,sponcec3] Dropped perl version of bestfs policy
  * CASTOR2/clips/Imakefile:
  * CASTOR2/clips/bestfs.clp:
  * CASTOR2/clips/bestfs_test.clp:
  * CASTOR2/clips/castor.clp:
  * CASTOR2/clips/castorweight.clp:
  * CASTOR2/clips/fs_capabilities.clp:
  * CASTOR2/clips/fs_garbage.clp:
  * CASTOR2/debian/EXPCONFIG:
  * CASTOR2/debian/castor-policies.install.perm:
  * CASTOR2/debian/control:
    [2007-04-17,sponcec3] Dropped clips related stuff
  * CASTOR2/config/castor_paths.example:
  * CASTOR2/config/site.Win32.def:
  * CASTOR2/config/site.def:
  * CASTOR2/scheduler/LSF/Imakefile:
    [2007-04-17,sponcec3] Simplified compilation and linking of LSF stuff now that it is installed in the default places, i.e. /usr/lib and /usr/include
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
    [2007-04-18,waldron] reduce the database overhead of dlf initialisation calls by caching messages texts in memory
	
castor (2.1.3-6) unstable; urgency=low

  * Sixth test release with new LSF plugin and new monitoring
  * Since this is closer to production, here is a list of everything that changed since version v2.1.2-4
  * general
    - Dropped FSSvc, rmnode, rmgetnodes, rmnodeadmin, RMNODECONFIG, etc...
    - created rmNodeDaemon, rmMasterDaemon, RmMasterSvc and rmNodeAdmin as new monitoring tools, using only castor.conf as configuration file
    - dropped schmod_castor.c and rewrote it into schmod_castor.cpp, using shared memory with rmMasterDaemon.
    - Added a CastorVersion symbol in all executables and libraries
  * xroot support
    - Added xrootd configuration to castor.conf
    - Fixed end of stagerJob for xroot : especially don't call prepareForMigration for puts, xroot will do it
  * CASTOR2/CASTOR.spec:
    - Fixed LSF paths for LSF 7
    - added package castor-lib-monitor
    - Fixed rule to decide if we have oracle 
    - Added UDP sockets and ListenerThreadPool, also renamed ListenerThreadPool into TCPListenerThreadPool 
    - Putdone now is not scheduled anymore
    - Added infrasstructure for shared memory in the framework
    - Now compiling with -Wall -pedantic by default. A lot of compilation warnings have already been fixed, but a lot remain
  * cleaning Daemon
    - Fixed default values for time intervals
  * DB releated
    - Removed the Oracle specific database converters 
    - Fixed all calls to deleteStatement to avoid passing null pointers (this led to segfaults)
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    - Fixed handling of exception in createRecallCandidate that was leading to a segfault in stager_db_service. The point is that the link subrequest->diskCopy was not suppressed while the diskCopy was deleted.
    - reintroduced selectDiskPool and selectTapePool in IStagerSvc. They were wrongly placed in the FSSvc that went and are now wrongly placed in IStagerSvc
    - fix in the exception handling for createRecallCandidate
    - fixed retrieval of the subrequest ReqId in SubRequestToDo. The consequence was that subrequests were changing uuid at each restart
  * CASTOR2/castor/db/oracleTrailer.sql:
    - Fixed another leak of reservedSpace for failed Puts (thanks to Olof).
    - Fixed PrepareForMigration to call updateFSFileClosed after each Put.
    - Added hint to getUpdateStart to insure the right execution plan is choosen. Credits to Nilo.
    - Added more ORACLE hints to bestTapeCopyForStream so that ORACLE does things properly. Once more, many thanks to Nilo
    - Optimized bestTapeCopyForStream. This included changing 2 function based index and working on the main query inside the function. Big thanks to Nilo, aka superDBA
    - Added new index on segment and GCFile. Credits to Nilo
    - Fixed typo in internalStageQuery leading to strange behavior of the stager_qry command. See CT406333 in remedy
    - Optimized version of bestTapeCopyForStream with function-based indexes (credits to Nilo).
    - Putdone now is not scheduled anymore, the db schema is  changed
    - Fixed the problem of reservedSpace accumulation. Three cases were not covered properly, in the sense that the reserved space was not removed :
      + puts with no file size given. Fixed in prepareForMigration
      + disk2diskcopies. Fixed in disk2diskCopyDone
      + aborted disk2diskCopies in the case LSF scheudules the copy on a filesystem already having the file. Fixed in getUpdateStart.
    - Better version of the fix for the update requests, now canceling migrations before thay take place
    - Temporary hack to fix the behavior of update requests. They were basically not working and we could easily lose the modifications. The missing part was the conversion of the diskcopy to STAGEOUT status and the invalidation of the other DiskCopies on the first write. The temporary hack was to do this at the start in getUpdateStart and Disk2DiskCopyDone, leading to non optimal dropping of replicas
    - New, reoptimized version of internalStageQuery. Big thanks to Nilo.
    - Added code to recover gcDaemon failures: if disk copies are left in status 9 (BEINGDELETED) for too long, they are reselected for the next run.
    - Dropped unused index.
  * castor/sharedMemory
    - Added some debug tool for analyzing the shared memory content. Not compiled by default
  * repack
    - Fixed man for repack and repackserver as well as -h output
    - Removed the Z option which was not implemented 
    - Changed the logic of the parsing of arguments given to repackserver because it was creating coredump in case of not existing options.
    - extension of archiving command, check uid != root at the begining, added staged counter
    - thrown castor::castor::Exception instead of  castor::exception::Internal from DatabaseHelper, fix for monitoring to be able to deal with time out, bug fix in repack worker.
    - new features added in the repack -x
  * tape
    - Added the DOWN_ON_TPALERT option. Default value YES (same as if the config entry is missing).
    - increasing the scsi timeout for the volume tag command
    - Fix for the "stuck in START" case. The patch changes the code to not ignore consistency problems with the status of a tape in VMGR (thanks to Olof for the help tracking this down).
    - changing the compression handling for the NVC IBM mode in tapedrives 
    - Initial commit of the tplogger implementation.
    - Extension of tpdaemon and related programs to use the dlf-based tape logging interface (tplogger).
    - Extended error handling in case of a device or resource busy in smcmount(). This should now trigger a retry, instead of the attempt to unmount the non-mounted tape (which led to subsequent errors and ended in the drive being configured down).
    - Improved logging for errors from smcdismount().
    - Possible fix for the "device or resource busy" problem (which puts drives down in case of a busy RMC). The patch basically checks 'serrno' instead of smcdismount's return code.
    - First fix for the "stuck in UNKNOWN" case. The drive will be configured down in case of a tapealert by default. This is configurable by an option in castor.conf (TAPE DOWN_ON_TPALERT yes/no). This patch will not fix all cases of drives in UNKNOWN state, since there are different root causes.
    - Omit the configdown() in case of a tape alert (as this is suspected to leave the drive in an unknown state). Simply log a message and try to go on.
  * dlf
    - Closed socket on netconnect_timeout() to avoid socket losses
    - Statistics are now generated every 15 minutes not 5
    - Added rtcpd, RmMaster and RmNode facilities
    - Added dlf_settings table to control key parameters within the plsql procedures
    - Optimised dlf_stats_jobs procedure to reduce DB load/IO
    - Increase the prefetch size on oci queries to improve performance
    - Turned off automatic generation of request and job statistics by default. The jobs must be turned on use the dlf_settings table.
  * nameserver
    - changed the limit on name lengths in the nameserver to support POSIX 88, i.e. 255 characters
  * gc
    - use fully qualified domain name in selectFiles2Delete procedure call

castor (2.1.3-5) unstable; urgency=low

  * Fifth test release with new LSF plugin and new monitoring
  * Fixed a couple of bugs and included last tape fixes

castor (2.1.3-4) unstable; urgency=low

  * Fourth test release with new LSF plugin and new monitoring
  * Now from the main branch of CVS after the newLSFPlugin branch was merged
  * Many bug fixes included. Now the system works fine with several filesystems on c2test and load balancing works

castor (2.1.3-3) unstable; urgency=low

  * Third test release with new LSF plugin and new monitoring
  * done from the branch newLSFPlugin
  * 2 small changes done : fixed rmMasterDaemon default port and fixed trailing slashes handling in monitoring

castor (2.1.3-2) unstable; urgency=low

  * Second test release with new LSF plugin and new monitoring
  * done from the branch newLSFPlugin
  * also includes recent changes for the tape part

castor (2.1.3-1) unstable; urgency=low

  * First test release with new LSF plugin and new monitoring
  * done from the branch newLSFPlugin

castor (2.1.2-10) unstable; urgency=low

  * CASTOR2/rtcopy/MigHunter.c
    CASTOR2/rtcopy/rtcpclientd.c:
    back signal handler modifications from 2.1.3

  -- Rosa Maria Garcia Rioja <rosa.garcia@cern.ch>  Wen, 2 May 2007 14:51:00 +0200


castor (2.1.2-9) unstable; urgency=low

  * CASTOR2/job/stagerJob.c:
    Restored answer to clients for PutDone requests

  -- Giuseppe Lo Presti <itglp@cern.ch>  Mon, 23 Apr 2007 11:00:00 +0200

castor (2.1.2-8) unstable; urgency=low

  * CASTOR2/stager/stager_db_service.c:
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    Fixed disk-to-disk copy scheduling and prevented stager segfault when no tape copy is found for a tape recall

 -- Giuseppe Lo Presti <itglp@cern.ch>  Wed, 19 Apr 2007 12:00:00 +0200

castor (2.1.2-7) unstable; urgency=low

  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.189.6.2,2007-03-28,gtaur] Fixed handling of exception in createRecallCandidate that was leading to a segfault in stager_db_service
  * CASTOR2/hsmtools/modifySvcClass.c:
    [r1.9.4.1,2007-04-02,itglp] Backport fix to commit after the fillObj
  * CASTOR2/hsmtools/printSvcClass.cpp:
    [r1.1.14.1,2007-04-02,itglp] Backport fix to commit after the fillObj
  * CASTOR2/stager/stager_client_commandline.cpp:
    [r1.3.4.1,2007-04-04,gtaur] fix in the mapping
  * CASTOR2/stager/stager_gc_service.cpp:
    [r1.12.4.1,2007-03-28,gtaur] Proper cleanup of the request
  * Fixed another leak of reservedSpace for failed Puts + Puts coming from SRM

 -- Giuseppe Lo Presti <itglp@cern.ch>  Wed, 11 Apr 2007 18:00:00 +0100

castor (2.1.2-6) unstable; urgency=low

  * Two bug fixes in the prepare to get not-scheduled:
     - CreateRecallCandidate in stager_db_service now is doing errors check.
     - OraStagerSvc.cpp  bug fix in how the exceptions are thrown for createRecallCandidate.
   * Bug Fix for Repack:
     - castor::castor::Exception instead of castor::exception::Internal thrown by functions in the DatabaseHelper,
     - fix for monitoring to be able to deal with stager time out,
     - bug fix in repack worker. 
   * Fixed the socket leak in DLF client when the DLF server is not reachable
   * Fixed the stagerJob for xroot. We were calling prepareForMigration while xroot does it for us.
   * Modifications on the PL/SQL
     - optimized version of stage_qry
     - fixes for the processing of update requests
     - fixed the reservedSpace accumulation problem
     - fixed garbage collector job

 -- Rosa Garcia <rosa.garcia@cern.ch>  Thu, 27 Feb 2007 18:00:00 +0100

castor (2.1.2-5 Repack only) unstable; urgency=low
  *  thrown castor::castor::Exception instead of  castor::exception::Internal from DatabaseHelper, fix for monitoring to be able to deal with time out, bug fix in repack worker.

castor (2.1.2-4) unstable; urgency=low

  * Only changed PL/SQL code version

 -- Sebastien Ponce <sponce@cern.ch>  Mon, 15 Jan 2007 18:57:49 +0100

castor (2.1.2-3) unstable; urgency=low

  * CASTOR2/PACKAGING.howto:
    [r1.28,2007-01-11,itglp] Refactored instructions for internal and published releases
  * CASTOR2/castor/BaseCnvSvc.hpp:
    [r1.16,2006-12-20,itglp] Removed unused header (fixes warnings)
  * CASTOR2/castor/Constants.cpp:
    [r1.37,2007-01-10,sponcec3] Removed old Response converters
    [r1.36,2006-12-22,sponcec3] Added new objects for rmAdminNode
  * CASTOR2/castor/Constants.hpp:
    [r1.69,2007-01-10,sponcec3] Removed old Response converters
    [r1.68,2006-12-22,sponcec3] Added new objects for rmAdminNode
    [r1.67,2006-12-22,sponcec3] fixes an extra ',' that was found by gcc 4
  * CASTOR2/castor/Imakefile:
    [r1.138,2007-01-10,sponcec3] Removed old Response converters
    [r1.137,2006-12-22,sponcec3] now compile by default with -pedantic -ansi -Wall -Wno-long-long
  * CASTOR2/castor/MessageAck.hpp:
    [r1.10,2007-01-09,sponcec3] Fixed exception handling when committing/rollbacking
  * CASTOR2/castor/client/BaseClient.cpp:
    [r1.59,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/client/BaseClient.hpp:
    [r1.21,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/client/IResponseHandler.hpp:
    [r 1.3,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/db/IDbStatement.hpp:
    [r 1.6,2007-01-09,itglp] Fixed exception handling: SQL specific methods throw SQLError exceptions instead of the generic one
    [r 1.5,2006-12-20,itglp] Changed static definitions to const
  * CASTOR2/castor/db/cnv/Db*Cnv.cpp:
    [2007-01-09,sponcec3] Fixed exception handling when committing/rollbacking
  * CASTOR2/castor/db/cnv/DbFileSystemCnv.cpp:
    [r 1.9,2006-12-22,sponcec3] Fixed types of deltaFree and reservedSpace in FileSystem to 64 bits integers
  * CASTOR2/castor/db/cnv/Imakefile:
    [r 1.9,2007-01-11,itglp] Removed DbCommonSvc class as it is not really used
  * CASTOR2/castor/db/newora/OraStatement.cpp:
    [r 1.4,2007-01-09,itglp] Fixed exception handling: SQL specific methods throw SQLError exceptions instead of the generic one
  * CASTOR2/castor/db/newora/OraStatement.hpp:
    [r 1.4,2007-01-09,itglp] Fixed exception handling: SQL specific methods throw SQLError exceptions instead of the generic one
  * CASTOR2/castor/db/ora/OraFileSystemCnv.cpp:
    [r1.48,2006-12-22,sponcec3] Fixed types of deltaFree and reservedSpace in FileSystem to 64 bits integers
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.364,2007-01-11,itglp] Added a comment
    [r1.363,2007-01-10,itglp] Added an index and a constraint on SvcClass.name after suggestions from Nilo
    [r1.362,2006-12-22,sponcec3] Better error handling in fileRecallFailed
    [r1.361,2006-12-20,sponcec3] Added index on subReqId for SubRequest
    [r1.360,2006-12-20,sponcec3] Fixed query statement for cleanup of old, failed subrequests
    [r1.359,2006-12-19,itglp] Fixed cut&paste typo...
    [r1.358,2006-12-19,itglp] Fixed typo
    [r1.357,2006-12-19,itglp] Better timing for the new GC job.
    [r1.357,2006-12-19,itglp] Moved pure CREATE statements to the top to ease creation of upgrade scripts.
  * CASTOR2/castor/io/StreamFileSystemCnv.cpp:
    [r1.24,2006-12-22,sponcec3] Fixed types of deltaFree and reservedSpace in FileSystem to 64 bits integers
  * CASTOR2/castor/io/StreamOld*Cnv.cpp:
    [2007-01-10,sponcec3] Removed old Response converters
  * CASTOR2/castor/monitoring/ClusterStatus.cpp:
    [r 1.5,2006-12-21,sponcec3] Adapted to new shared memory implementation
  * CASTOR2/castor/monitoring/DiskServerStatus.cpp:
    [r 1.2,2006-12-21,sponcec3] Fixed details in output of print method
  * CASTOR2/castor/monitoring/FileSystemStatus.cpp:
    [r 1.2,2006-12-21,sponcec3] Fixed details in output of print method
  * CASTOR2/castor/monitoring/Imakefile:
    [r 1.6,2006-12-22,sponcec3] compilation of the new objects for rmAdminNode
    [r 1.5,2006-12-22,sponcec3] Rules to compile rmGetNodes and rmAdminNodes
    [r 1.4,2006-12-21,sponcec3] compile with -pedantic -ansi -Wall -Wno-long-long
  * CASTOR2/castor/monitoring/SharedMemoryAllocator.hpp:
    [r 1.6,2006-12-21,sponcec3] Adapted to new shared memory implementation
  * CASTOR2/castor/monitoring/rmmaster/CollectorThread.cpp:
    [r 1.2,2006-12-22,sponcec3] Deal with reports coming from rmAdminNode command
  * CASTOR2/castor/monitoring/rmmaster/CollectorThread.hpp:
    [r 1.2,2006-12-22,sponcec3] Deal with reports coming from rmAdminNode command
  * CASTOR2/castor/monitoring/rmmaster/Imakefile:
    [r 1.3,2006-12-21,sponcec3] compile with -pedantic -ansi -Wall -Wno-long-long
  * CASTOR2/castor/monitoring/rmnode/Imakefile:
    [r 1.2,2006-12-21,sponcec3] compile with -pedantic -ansi -Wall -Wno-long-long
  * CASTOR2/castor/monitoring/rmnode/MetricsThread.cpp:
    [r 1.4,2006-12-21,sponcec3] Fixed warnings due to -pedantic -ansi -Wall options
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
    [r1.20,2006-12-21,gtaur] Solved the problem of python to deal with the blockid stored in repack db, operations to retrieve that moved into the C++ part
  * CASTOR2/castor/repack/DatabaseHelper.hpp:
    [r1.14,2006-12-21,gtaur] Solved the problem of python to deal with the blockid stored in repack db, operations to retrieve that moved into the C++ part
  * CASTOR2/castor/repack/FileOrganizer.cpp:
    [r 1.8,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/FileOrganizer.hpp:
    [r 1.5,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/Imakefile:
    [r1.15,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/RepackDaemon.cpp:
    [r 1.2,2006-12-19,felixehm] removed not neccessary files
  * CASTOR2/castor/repack/RepackDaemon.hpp:
    [r 1.2,2006-12-19,felixehm] removed not neccessary files
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [r1.12,2006-12-18,felixehm] Updated the description in the header file
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.25,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/RepackServer.hpp:
    [r1.12,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/RepackSynchroniser.cpp:
    [r 1.3,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/RepackSynchroniser.hpp:
    [r 1.2,2006-12-19,felixehm] Removed not neccessary modules.
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.30,2006-12-17,felixehm] A non submitted repack request is directly put into FINISHED, if the
    [r1.30,2006-12-17,felixehm] user requests to remove it (before it went through a cleanup).
  * CASTOR2/castor/repack/repackUndo/WrapCns.cpp:
    [r 1.5,2006-12-21,gtaur] Solved the problem of python to deal with the blockid stored in repack db, operations to retrieve that moved into the C++ part
  * CASTOR2/castor/repack/repackUndo/repackUndo.py:
    [r 1.4,2006-12-21,gtaur] Solved the problem of python to deal with the blockid stored in repack db, operations to retrieve that moved into the C++ part
  * CASTOR2/castor/repack/repackUndo/wrapCSetup.py:
    [r 1.2,2006-12-21,gtaur] Now create the .so in the correct way and there is no need of extra make files. It uses the .o and the library straight.
  * CASTOR2/castor/replier/ClientConnection.cpp:
    [r1.11,2007-01-10,sponcec3] Adapted to gcc4 and -pedantic, -Wall, etc
  * CASTOR2/castor/replier/RequestReplier.cpp:
    [r1.31,2007-01-10,sponcec3] Adapted to gcc4 and -pedantic, -Wall, etc
  * CASTOR2/castor/server/BaseDaemon.cpp:
    [r1.11,2007-01-11,sponcec3] small fix to comply to pedantic, Wall, ansi and so on
  * CASTOR2/castor/server/IThread.hpp:
    [r 1.7,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/server/NotificationThread.cpp:
    [r 1.9,2007-01-11,sponcec3] small fix to comply to pedantic, Wall, ansi and so on
  * CASTOR2/castor/server/NotificationThread.hpp:
    [r 1.7,2006-12-22,sponcec3] Fixed missing virtual destructor
  * CASTOR2/castor/server/ServiceThread.cpp:
    [r 1.8,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/server/ServiceThread.hpp:
    [r 1.7,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/server/SignalThreadPool.cpp:
    [r1.13,2007-01-10,sponcec3] Fixes to be able to compile on gcc 4.1. Note that some were real bugs !
  * CASTOR2/castor/sharedMemory/Allocator.hpp:
    [r 1.9,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/BasicBlock.cpp:
    [r 1.2,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/BasicBlock.hpp:
    [r 1.2,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/Block.hpp:
    [r1.10,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/BlockDict.cpp:
    [r 1.2,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/BlockDict.hpp:
    [r 1.2,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/BlockKey.cpp:
    [r 1.2,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/DLFInit.cpp:
    [r 1.3,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/sharedMemory/IBlock.hpp:
    [r 1.2,2007-01-09,sponcec3] Adding missing virtual destructor
  * CASTOR2/castor/sharedMemory/SingletonBlock.hpp:
    [r 1.4,2006-12-21,sponcec3] Second version of the shared memory part
  * CASTOR2/castor/stager/FileSystem.h:
  * CASTOR2/castor/stager/FileSystem.hpp:
  * CASTOR2/castor/stager/FileSystemCInt.cpp:
    [2006-12-22,sponcec3] Fixed types of deltaFree and reservedSpace in FileSystem to 64 bits integers
  * CASTOR2/castor/stager/RemoteGCSvc.cpp:
  * CASTOR2/castor/stager/RemoteJobSvc.cpp:
    [r 1.7,2007-01-10,sponcec3] Fixed timeout setting, thanks to gcc4 and Wall, pedantic options
  * CASTOR2/client/src/rfio/rfio_copy.c:
    [r 1.2,2006-12-19,itglp] Include the new header stager_client_commandline.h
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.139,2007-01-09,sponcec3] Fixed (again, was lost) types of deltaFree and reservedSpace in FileSystem to 64 bits integers
    [r1.138,2007-01-09,sponcec3] Created objects used by rmAdminNode
    [r1.137,2006-12-22,sponcec3] Fixed types of deltaFree and reservedSpace in FileSystem to 64 bits integers
  * CASTOR2/dlf/dlf_lib.c:
    [r1.11,2006-12-15,waldron] check for file target before open()
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.9,2006-12-19,felixehm] Updated Repack documentation
    [r 1.8,2006-12-18,felixehm] updated Repack documentation
  * CASTOR2/hsmtools/upgradec2stgdb.csh:
    [r 1.6,2006-12-19,itglp] Updated scripts to automate some SQL operations
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [r1.20,2006-12-19,obarring] Add missing check on DiskCopy status (must be CANBEMIGR for a migration retry)
    [r1.19,2006-12-19,obarring] Protect against diskCopy with fileSystem==NULL
  * CASTOR2/stager/stager_rm.c:
    [r 1.4,2007-01-09,sponcec3] Fixed missing dereferencing. Thanks Olof for spotting it

 -- Giuseppe Lo Presti <itglp@cern.ch>  Thu, 11 Jan 2007 19:57:49 +0100

castor (2.1.2-2) unstable; urgency=low

  * CASTOR2/castor/repack/repackUndo/WrapCns.cpp:
    [r 1.4,2006-12-15,gtaur] side tape information hardcoded to 0
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.7,2006-12-14,felixehm] updated Repack documentation
  * CASTOR2/rtcopy/MigHunter.c:
  * CASTOR2/rtcopy/rtcpclientd.c:
    [2006-12-15,waldron] corrected return code check on Cthread_create_detached
  * CASTOR2/castor/cleaning/HouseKeeping.cpp:
  * CASTOR2/castor/cleaning/SpringCleaning.cpp:
  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/db/ora/OraCleanSvc.cpp:
    [r 1.9,2006-12-14,itglp] Renamed stager common header to hpp
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.356,2006-12-14,sponcec3] Added a warning in the head comment of filesDeletedProc
    [r1.355,2006-12-14,itglp] Fixed putDone without a put case in isSubRequestToSchedule.
    [r1.355,2006-12-14,itglp] Changed 'IN ()' -> 'MEMBER OF' in reqIdLastRecallsStageQuery.
    [r1.354,2006-12-13,sponcec3] Fixed the deadlock in filesDeletedProc. This is using the NOWAIT keyword, catching the exception afterwards
    [r1.353,2006-12-11,itglp] Small fix on deleteOutOfDateDiskCopies
    [r1.352,2006-12-11,itglp] Added the call to DBMS_SCHEDULER to create the regular job for INVALID diskcopies
    [r1.351,2006-12-11,itglp] New procedure deleteOutOfDateDiskCopies for the cleaningDaemon.
    [r1.351,2006-12-11,itglp] First implementation of a new GC job for regular cleanup of INVALID diskcopies:
    [r1.351,2006-12-11,itglp] Moved nullGCPolicy to the new GC job;
    [r1.351,2006-12-11,itglp] Refactored other policies to do only GC of staged files;
    [r1.351,2006-12-11,itglp] Restored GC trigger to trigger only on free space.
    [r1.350,2006-12-06,sponcec3] Nilo said :
    [r1.350,2006-12-06,sponcec3]
    [r1.350,2006-12-06,sponcec3] this has improved a lot the following query
    [r1.350,2006-12-06,sponcec3]
    [r1.350,2006-12-06,sponcec3] SELECT TapeCopy.id FROM TapeCopy, CastorFile
    [r1.350,2006-12-06,sponcec3] WHERE TapeCopy.castorFile = CastorFile.id
    [r1.350,2006-12-06,sponcec3] AND CastorFile.svcClass = :1 AND TapeCopy.status IN (0, 1)
    [r1.350,2006-12-06,sponcec3]
    [r1.350,2006-12-06,sponcec3] and therefore reducing enormously the time spent by the mighunter
    [r1.350,2006-12-06,sponcec3] process..
  * CASTOR2/castor/monitoring/rmnode/MetricsThread.cpp:
    [r 1.3,2006-12-12,sponcec3] Fixed a seg fault due to wrong reinitializaiton
  * CASTOR2/castor/repack/FileListHelper.cpp:
    [r1.23,2006-12-13,felixehm] Removed bug in conversion on blockid
  * CASTOR2/castor/repack/RepackCommonHeader.hpp:
    [r1.16,2006-12-14,itglp] Renamed stager common header to hpp
    [r1.15,2006-12-13,felixehm] Changed filequery to C++
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r1.31,2006-12-13,felixehm] Changed filequery to C++
    [r1.30,2006-12-06,felixehm] fixed bug : the submittime of a repacksubrequest wasn't set to new one, if restarted
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r1.16,2006-12-13,felixehm] Changed filequery to C++
  * CASTOR2/castor/repack/RepackMonitor.hpp:
    [r 1.4,2006-12-13,felixehm] Added some more comments and modified the getStats singature
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.24,2006-12-13,felixehm] cosmetic chanages in Message.
  * CASTOR2/castor/repack/repackUndo/repackCheck.py:
    [r 1.3,2006-12-12,gtaur] Cosmetic modifications in the output
    [r 1.2,2006-12-08,gtaur] used @#%@%! threads to recall the files chosen
  * CASTOR2/castor/repack/repackUndo/repackUndo.py:
    [r 1.3,2006-12-13,gtaur] in the query it is not used * but the fields are specified
  * CASTOR2/castor/repack/repack_oracle_create.sql:
    [r 1.5,2006-12-13,felixehm] Updated the SQL script for creating the Repack DB
  * CASTOR2/castor/stager/RequestHelper.cpp:
    [r 1.9,2006-12-14,itglp] Renamed stager common header to hpp
  * CASTOR2/castor/vdqm/OldProtocolInterpreter.cpp:
  * CASTOR2/castor/vdqm/VdqmServerSocket.cpp:
    [r1.14,2006-12-07,itglp] Fixed some includes, which broke the compilation using the common RFIO
  * CASTOR2/client/src/rfio/parse.c:
    [r 1.3,2006-12-14,itglp] getDefaultForGlobal moved to stager_client_commandline.h
    [r 1.2,2006-12-13,itglp] Removed getDefaultForGlobal(), will be part of the stager_client API
  * CASTOR2/config/site.def:
    [r1.93,2006-12-07,sponcec3] Moved RTCOPY from /var/tmp to /var
  * CASTOR2/dlf/dlf_lib.c:
    [r1.10,2006-12-13,waldron] fix for: http://savannah.cern.ch/bugs/?22382 and improved dlf_shutdown handling
  * CASTOR2/dlf/dlf_lib.h:
    [r 1.2,2006-12-13,waldron] decreased dlf read and write socket timeouts
  * CASTOR2/dlf/doc/man/dlf_shutdown.man:
    [r 1.4,2006-12-13,waldron] updated dlf_shutdown explanation
  * CASTOR2/dlf/web/results.php:
    [r1.12,2006-12-13,waldron] fixed for schema_version > 2 when looking up a single facility only
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.7,2006-12-14,felixehm] updated Repack documentation
  * CASTOR2/h/RfioTURL.h:
    [r 1.5,2006-12-14,itglp] Removed getDefaultForGlobal (now in stager_client_commandline)
  * CASTOR2/h/dlf_api.h:
    [r1.19,2006-12-13,waldron] updated dlf_shutdown explanation
  * CASTOR2/h/dmc.h:
    [r 1.3,2006-12-14,itglp] Fixed #include statements
  * CASTOR2/h/rfio.h:
  * CASTOR2/rfio/rfio_call64.c:
    [2006-12-08,fuji] Consult castor.conf tags for DIRECTIO and XFS_PREALLOC only at startup time.
  * CASTOR2/h/rfio_api.h:
    [r1.43,2006-12-14,itglp] rfio_access prototype changed (first param char* -> const char*), backport from common RFIO
  * CASTOR2/h/stager_api.h:
    [r 1.6,2006-12-14,itglp] Removed stager_service_api.h from the public API
  * CASTOR2/h/stager_client_api_common.h:
    [r 1.5,2006-12-14,itglp] Renamed header to hpp as it is an internal C++ header
  * CASTOR2/hsmtools/disknodeShutdown:
    [r 1.9,2006-12-06,reguero] Fixed status pattern to be checked. Also solved Perl problem with
    [r 1.9,2006-12-06,reguero] undefined file descriptors when files not in name server.
  * CASTOR2/ns/nslistclass.c:
  * CASTOR2/ns/nslisttape.c:
  * CASTOR2/ns/nsln.c:
  * CASTOR2/ns/nsmkdir.c:
  * CASTOR2/ns/nsmodifyclass.c:
  * CASTOR2/ns/nsrename.c:
  * CASTOR2/ns/nsrm.c:
  * CASTOR2/ns/nssetacl.c:
  * CASTOR2/ns/nsshutdown.c:
  * CASTOR2/ns/nstouch.c:
    [2006-12-06,riojac3] 64bit cleaned
  * CASTOR2/rfio/RfioTURL.c:
  * CASTOR2/rfio/parse.c:
    [r1.22,2006-12-14,itglp] Removed getDefaultForGlobal (now in stager_client_commandline)
  * CASTOR2/rfio/access.c:
    [r1.11,2006-12-14,itglp] Backported prototype modification (char* -> const char*)
  * CASTOR2/rfio/rfio_alignedbuf.c:
  * CASTOR2/rfio/rfio_xfsprealloc.c:
    [2006-12-08,fuji] Make log levels easily changeable at compile time.
  * CASTOR2/rtcopy/MigHunter.c:
  * CASTOR2/rtcopy/rtcpclientd.c:
    [2006-12-13,waldron] added thread safe signal handler
  * CASTOR2/stage/stagein.c:
    [r1.60,2006-12-14,itglp] Fixed rfio_access prototype due to modifications in rfio_api.h
  * CASTOR2/stager/Imakefile:
    [r1.55,2006-12-14,itglp] Added stager_client_commandline to the client objects' list
  * CASTOR2/stager/stage_api.c:
    [r 1.2,2006-12-13,itglp] Fixed prototype of external function
  * CASTOR2/stager/stager_client_api_common.cpp:
    [r1.26,2006-12-14,itglp] Renamed header to hpp, moved hardcoded defaults for stage_options to the header file
  * CASTOR2/castor/repack/RepackClient.hpp:
  * CASTOR2/stager/stager_client_api_get.cpp:
  * CASTOR2/stager/stager_client_api_next.cpp:
  * CASTOR2/stager/stager_client_api_put.cpp:
  * CASTOR2/stager/stager_client_api_query.cpp:
  * CASTOR2/stager/stager_client_api_rm.cpp:
  * CASTOR2/stager/stager_client_api_setFileGCWeight.cpp:
  * CASTOR2/stager/stager_client_api_update.cpp:
  * CASTOR2/stager/stager_put.c:
  * CASTOR2/stager/stager_putdone.c:
  * CASTOR2/stager/stager_qry.c:
    [2006-12-14,itglp] Renamed common header to hpp
  * CASTOR2/tape/rbtsubr.c:
  * CASTOR2/tape/rlstape.c:
  * CASTOR2/tape/smc.c:
  * CASTOR2/tape/smcsubr2.c:
    [2006-12-13,hcacote]
    [2006-12-13,hcacote] retry dismount on IBM libraries when receives EBUSY

 -- Felix Ehm <felix.ehm@cern.ch>  Thur, 14 Dez 2006 17:30:00 +0200


castor (2.1.2-1) unstable; urgency=low

  * CASTOR2/PACKAGING.howto:
    [r1.27,2006-12-05,felixehm] modfied upload procedure to add the castor-lib package for x86_64
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.189,2006-12-05,felixehm] fixed building the diskpath in StagerSvc for TapeRecall, a leading '0' was missing
    [r1.189,2006-12-05,felixehm] for directory numbers less than 10
  * CASTOR2/castor/repack/RepackClient.cpp:
    [r1.25,2006-12-05,felixehm] cosmetic changes for output
  * CASTOR2/castor/replier/RequestReplier.cpp:
    [r1.30,2006-12-05,felixehm] Rollback of previous changes for the mutex locking procedure, since this lead
    [r1.30,2006-12-05,felixehm] to a block of the request replier
    [r1.29,2006-12-05,itglp] empty log message ***
    [r1.28,2006-12-05,itglp] Catch and ignore (!) mutex exceptions instead of leaving them uncaught
  * CASTOR/castor/repack/RepackFileStager.cpp:
    [r1.30, 2006-12-06,felixehm] fixed bug : the submittime of a repacksubrequest wasn't set to new one, if restarted
  * CASTOR2/castor/replier/RequestReplier.hpp:
    [r 1.9,2006-12-05,felixehm] Rollback of previous changes for the mutex locking procedure, since this lead
    [r 1.9,2006-12-05,felixehm] to a block of the request replier
  * CASTOR2/ns/nschclass.c:
  * CASTOR2/ns/nschmod.c:
  * CASTOR2/ns/nschown.c:
  * CASTOR2/ns/nsdelcomment.c:
  * CASTOR2/ns/nsdeleteclass.c:
  * CASTOR2/ns/nsenterclass.c:
  * CASTOR2/ns/nsfind.c:
  * CASTOR2/ns/nsrm.c:
    [2006-12-05,riojac3] 64bits cleaning warning
  * CASTOR2/upv/Cupv_add.c:
  * CASTOR2/h/Cupv_api.h:
  * CASTOR2/h/Cupv_util.h:
  * CASTOR2/upv/Cupv_apiinit.c:
  * CASTOR2/upv/Cupv_check.c:
  * CASTOR2/upv/Cupv_delete.c:
  * CASTOR2/upv/Cupv_errmsg.c:
  * CASTOR2/upv/Cupv_modify.c:
  * CASTOR2/upv/Cupvadd.c:
  * CASTOR2/upv/Cupvdelete.c:
  * CASTOR2/upv/send2Cupv.c:
    [2006-12-05,riojac3] 64bits: warnings implicit declaration and default return type have been cleaned
  * CASTOR2/upv/Cupvcheck.c:
  * CASTOR2/upv/Cupvlist.c:
  * CASTOR2/upv/Cupvmodify.c:
  * CASTOR2/upv/Cupvshutdown.c:
    [2006-12-05,riojac3] 64 bits cleaned

 -- Felix Ehm <felix.ehm@cern.ch>  Wed, 06 Dez 2006 14:20:00 +0200

castor (2.1.2-0) unstable; urgency=low

  * CASTOR2/PACKAGING.howto:
    [r1.26,2006-11-30,itglp] Updated instructions with the new reference machines
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.11,2006-12-04,felixehm] Fixed selectTape: catching wrong exception led to incorrect handling of Tape inserts
  * CASTOR2/castor/db/newora/OraCommonSvc.cpp:
    [r1.12,2006-12-04,felixehm] Add workaround to check the oracle error. In case we got an ORA-00001 (unique contraint), we we have a special handling.
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.15,2006-11-14,itglp] Another error to catch to trigger the reconnection
  * CASTOR2/castor/db/ora/OraJobSvc.cpp:
  * CASTOR2/castor/db/ora/OraJobSvc.hpp:
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
  * CASTOR2/castor/db/ora/OraStagerSvc.hpp:
    [2006-11-30,felixehm] Removed scheduling from the JobService to StagerService
    [2006-11-30,felixehm]
    [2006-11-30,felixehm] created new createRecallCandidate method in StagerService which is
    [2006-11-30,felixehm] responsible for creating the TapeCopy, Segments and DiskCopy for a
    [2006-11-30,felixehm] recall and set the SubRequest to WAITTAPERECALL.
    [2006-11-30,felixehm]
    [2006-11-30,felixehm] removed mem leak in createTapeCopySegmentsForRecall, the NameServer segments
    [2006-11-30,felixehm] for a file weren't deleted.
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.349,2006-11-30,riojac3] Bug 21823, putDone failure properly handled if file does not exist on diskserver
    [r1.348,2006-11-30,riojac3] Bug 21824. catch the exception NO_DATA_FOUND
    [r1.347,2006-11-30,itglp] Removed handling of tape recall in getUpdateStart, now directly performed by the stager
    [r1.346,2006-11-27,itglp] Improved GC trigger for disk-only pools (running the nullGCPolicy)
    [r1.345,2006-11-24,itglp] Added missing COMMIT in the GC job to fix a deadlock
    [r1.344,2006-11-23,itglp] Stronger check in the GC trigger to verify that the GC job is actually running
    [r1.343,2006-11-23,sponcec3] Added missing index for TapeCopy
    [r1.342,2006-11-22,sponcec3] Added a comment on the nbTapeCopiesInFS workaround
    [r1.341,2006-11-21,gtaur] In internalStageQuery the behaviour in case of files without FS e DS has been fixed
    [r1.340,2006-11-20,itglp] Fixed garbageCollectFS, was leaking open cursors in case no candidate was found
    [r1.339,2006-11-20,sponcec3] Fixed filesystem trigger dealing with GC, was always sending NO_DATA_FOUND error
    [r1.338,2006-11-17,sponcec3] Avoid considering several policies if it's several times the same one
    [r1.337,2006-11-17,itglp] Better implementation of the GC trigger to detect if the GC job is running or not
    [r1.337,2006-11-17,itglp] Removed defGarbageCollectFS (already commented out)
  * CASTOR2/castor/gc/GcDaemon.cpp:
    [r1.33,2006-11-17,sponcec3] Log in SYSTEM the name of successfully deleted files, instead of debug
  * CASTOR2/castor/io/ServerSocket.cpp:
    [r1.15,2006-11-23,itglp] Throws exception if bind fails on the server side
  * CASTOR2/castor/io/StreamRepackSubRequestCnv.cpp:
  * CASTOR2/castor/repack/RepackSubRequest.hpp:
  * CASTOR2/castor/repack/RepackSubRequest.cpp:
  * CASTOR2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * CASTOR2/castor/db/ora/OraRepackSubRequestCnv.cpp:
    [2006-12-04,felixehm] added new field 'submitTime' which indicates the time, whenever the files
    [2006-12-04,felixehm] of this RepackSubRequest have been sent to the Stager
  * CASTOR2/castor/monitoring/ClusterStatus.cpp:
  * CASTOR2/castor/monitoring/SharedMemoryAllocator.hpp:
    [2006-11-10,sponcec3] fixed indentation and wrong comments
  * CASTOR2/castor/repack/FileListHelper.cpp:
    [r1.22,2006-11-30,felixehm] Changed the blockid order.
    [r1.22,2006-11-30,felixehm] blockid[0] is the smallest blockid number
    [r1.22,2006-11-30,felixehm] blockid[3] is the biggest
    [r1.22,2006-11-30,felixehm] according to the nameserver entry.
    [r1.21,2006-11-30,felixehm] Modified conversion of blockid from char to unsigned int 64 to more
    [r1.21,2006-11-30,felixehm] platform portable method.
    [r1.20,2006-11-28,felixehm] Fixed bug : initialisation of blockid value before use.
  * CASTOR2/castor/repack/RepackClient.cpp:
    [r1.24,2006-12-04,felixehm] added new field 'submitTime' which indicates the time, whenever the files
    [r1.24,2006-12-04,felixehm] of this RepackSubRequest have been sent to the Stager
    [r1.23,2006-12-04,felixehm] The sumbission time, whenever the request has been send to stager is reported
    [r1.23,2006-12-04,felixehm] now in the detail view.
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r1.29,2006-12-04,felixehm] If the stager reports all files in failed in a response, the repacksubrequest
    [r1.29,2006-12-04,felixehm] is set to failed.
    [r1.28,2006-12-04,felixehm] added new field 'submitTime' which indicates the time, whenever the files
    [r1.28,2006-12-04,felixehm] of this RepackSubRequest have been sent to the Stager
    [r1.27,2006-11-28,felixehm] Modified severity of Message which indicates an error during submit of Request
    [r1.27,2006-11-28,felixehm] to stager.
    [r1.27,2006-11-28,felixehm] Added the cuuid from the stager request to this message (instead of nullcuuid)
    [r1.26,2006-11-20,felixehm] fixed misbehaviour for a restarting repacksubrequest.
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r1.15,2006-12-04,felixehm] cosmetic changes (output message for tracing)
    [r1.14,2006-11-20,felixehm] Added Message to inform the user, that a stager query wasn't successesfull yet.
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.23,2006-11-20,felixehm] Added Message to inform the user, that a stager query wasn't successesfull yet.
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.29,2006-12-04,felixehm] restart is now available for tapes in failed status
  * CASTOR2/castor/repack/RepackRequest.hpp:
  * CASTOR2/castor/db/cnv/DbRepackRequestCnv.cpp:
  * CASTOR2/castor/db/ora/OraRepackRequestCnv.cpp:
  * CASTOR2/castor/io/StreamRepackRequestCnv.cpp:
    [r1.15,2006-12-04,felixehm] Changed creationTime type into u_signed64,
    [r1.15,2006-12-04,felixehm] changed group id and user id into u_signed64
  * CASTOR2/castor/replier/RequestReplier.cpp:
  * CASTOR2/castor/replier/RequestReplier.hpp:
    [2006-11-29,itglp] Replaced mutexes with the new Mutex class, which implements the fast ones
  * CASTOR2/castor/server/BaseDaemon.cpp:
  * CASTOR2/castor/server/BaseDaemon.hpp:
  * CASTOR2/castor/server/BaseServer.cpp:
  * CASTOR2/castor/server/BaseThreadPool.cpp:
  * CASTOR2/castor/server/NotificationThread.cpp:
    [2006-11-23,itglp] Finalized implementation of signal handling as from stager.c
  * CASTOR2/castor/server/ListenerThreadPool.cpp:
    [r 1.9,2006-11-27,itglp] Restored call to ancestor's init()
    [r 1.8,2006-11-27,itglp] Cosmetic changes, threadAssign() method made protected from private
    [r 1.7,2006-11-24,itglp] Renamed internal method
    [r 1.6,2006-11-23,itglp] Refactored to help derived classes to be more modular
  * CASTOR2/castor/server/ListenerThreadPool.hpp:
    [r 1.7,2006-11-27,itglp] empty log message ***
    [r 1.6,2006-11-27,itglp] Cosmetic changes, threadAssign() method made protected from private
    [r 1.5,2006-11-24,itglp] Renamed internal method
    [r 1.4,2006-11-23,itglp] Refactored to help derived classes to be more modular
  * CASTOR2/castor/sharedMemory/Block.hpp:
    [r 1.9,2006-11-10,sponcec3] fixed missing virtual keyword
  * CASTOR2/castor/sharedMemory/SingletonBlock.hpp:
    [r 1.3,2006-11-10,sponcec3] Fixed object creation (forgot to call constructor...)
  * CASTOR2/castor/stager/IJobSvc.h:
  * CASTOR2/castor/stager/IJobSvc.hpp:
    [2006-11-30,riojac3] Comments modified for putFailed in order to be consistent with the modifications done in oracleTrailer
  * CASTOR2/castor/stager/IStagerSvc.h:
  * CASTOR2/castor/stager/IStagerSvc.hpp:
  * CASTOR2/castor/stager/IStagerSvcCInt.cpp:
    [2006-11-30,felixehm] modified return value for isSubRequestToSchedule bool -> int.
    [2006-11-30,felixehm]
    [2006-11-30,felixehm] behavior of that method changed, returns now 0,1,3 in the C-part.
    [2006-11-30,felixehm] see description of c++ method)
    [2006-11-30,felixehm]
    [2006-11-30,felixehm] added new method createRecallCandidate, which creates all objects which
    [2006-11-30,felixehm] are neccessary for a recall.
  * CASTOR2/castor/stager/RemoteJobSvc.hpp:
    [r 1.5,2006-11-30,riojac3] Comments modified for putFailed in order to be consistent with the modifications done in oracleTrailer
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.136,2006-11-30,felixehm] updated documentation of handling recalls
  * CASTOR2/codeGeneration/Repack.xmi:
    [r 1.6,2006-12-01,sponcec3] Added submitTime to RepackSubrequest and changed creation time to u_signed64 in RepackRequest
  * CASTOR2/debian/castor-dlf-web.install.perm:
    [r 1.3,2006-11-29,waldron] added login.php
  * CASTOR2/debian/castor.conf:
    [r1.28,2006-11-16,riojac3] XROOT variable added
    [r1.27,2006-11-16,itglp] Fixed DIRECTIO tag and comment
    [r1.26,2006-11-10,sponcec3] Avoid to put O_DIRECT as a default
    [r1.25,2006-11-09,sponcec3] Added lines for O_DIRECT and XFS preallocation to default config
  * CASTOR2/debian/changelog:
    [r1.128,2006-12-01,felixehm] New changelog for v2_1_2_0 release
    [r1.127,2006-11-08,felixehm] Forgot to update the version number for v2.1.1-9
  * CASTOR2/debian/dlfserver.sysconfig:
    [r 1.8,2006-11-13,waldron] removed -n option
  * CASTOR2/dlf/Imakefile:
    [r1.15,2006-11-29,waldron] added -pedantic
    [r1.14,2006-11-16,riojac3] Include Oracle precompiled headers
  * CASTOR2/dlf/dlf_lib.c:
    [r 1.9,2006-11-29,waldron] support for security data types, fix for undefined server variable of Cns_fileid struct causing strange nshostnames to be inserted into dlf_nshost_map
    [r 1.8,2006-11-15,waldron] minor update, flag closure of socket in dlf_shutdown()
    [r 1.7,2006-11-09,waldron] fixed the length of Cuuid strings
  * CASTOR2/dlf/doc/index.html:
    [r1.11,2006-11-29,waldron] updated import procedure
    [r1.10,2006-11-13,waldron] removed -n option
  * CASTOR2/dlf/doc/man/dlf_write.man:
    [r 1.4,2006-11-29,waldron] added security parameter types
  * CASTOR2/dlf/doc/man/dlfserver.man:
    [r 1.4,2006-11-13,waldron] removed -n option
  * CASTOR2/dlf/hash.c:
    [r 1.7,2006-11-29,waldron] silenced pedantic warning messages
    [r 1.6,2006-11-14,waldron] release nelt mutex on memory allocation error
  * CASTOR2/dlf/mysql.c:
    [r1.12,2006-11-29,waldron] support for security data types and silencing of pedantic warning messages
    [r1.11,2006-11-22,waldron] merged table dlf_tape_ids into dlf_messages
    [r1.10,2006-11-14,waldron] removed depreciated db_stats function
  * CASTOR2/dlf/oracle.pc:
    [r1.19,2006-11-29,waldron] support for security data types and silencing of pedantic warning messages
    [r1.18,2006-11-21,waldron] added ORA-01003 to list of errors to reset connection on
    [r1.17,2006-11-21,waldron] merged table dlf_tape_ids into dlf_messages
    [r1.16,2006-11-10,waldron] fix dlf_monitoring
  * CASTOR2/dlf/process.c:
    [r 1.6,2006-11-29,waldron] support for security data types, fix for undefined server variable of Cns_fileid struct causing strange nshostnames to be inserted into dlf_nshost_map
    [r 1.5,2006-11-09,waldron] fixed the length of Cuuid strings
  * CASTOR2/dlf/queue.c:
  * CASTOR2/dlf/queue.h:
  * CASTOR2/dlf/hash.h:
    [2006-11-29,waldron] silenced pedantic warning messages
  * CASTOR2/dlf/scripts/mysql/dlf_mysql_create.sql:
    [r 1.7,2006-11-29,waldron] removed dlf_reqid_map table and support for security related information
    [r 1.6,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/scripts/mysql/dlf_mysql_drop.sql:
    [r 1.4,2006-11-29,waldron] remove table dlf_reqid_map
    [r 1.3,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
    [r 1.9,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
    [r1.10,2006-11-29,waldron] removed dlf_reqid_map table, support for security related information and fixed the plsql archiving procedure which was making local indexes unusable when historically compressed
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
    [r1.12,2006-11-29,waldron] removed dlf_reqid_map table, support for security related information and fixed the plsql archiving procedure which was making local indexes unusable when historically compressed
    [r1.11,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_grant.sql:
    [2006-11-29,waldron] remove table dlf_reqid_map
    [2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_grant.sql:
    [r 1.5,2006-11-29,waldron] removed grants to dlf_reqid_map
    [r 1.4,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sql:
    [r1.12,2006-11-29,waldron] removed dlf_reqid_map table, support for security related information and fixed the plsql archiving procedure which was making local indexes unusable when historically compressed
    [r1.11,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sqlplus:
    [r 1.6,2006-11-29,waldron] removed dlf_reqid_map table, support for security related information and fixed the plsql archiving procedure which was making local indexes unusable when historically compressed
    [r 1.5,2006-11-21,waldron] merging of dlf_tape_ids with dlf_messages table
  * CASTOR2/dlf/server.c:
    [r1.13,2006-11-29,waldron] silenced pedantic warning messages
  * CASTOR2/dlf/web/Imakefile:
    [r 1.3,2006-11-29,waldron] added login.php
  * CASTOR2/dlf/web/db/oracle.php:
    [r 1.6,2006-11-29,waldron] improved query optimisation, removal of timestamp checks, style support, backwards compatibility with versions < 2.1.1-10 and added pagination
    [r 1.5,2006-11-16,waldron] minor correction to OCI option
  * CASTOR2/dlf/web/dbview.php:
  * CASTOR2/dlf/web/index.php:
  * CASTOR2/dlf/web/site.css:
  * CASTOR2/dlf/web/db/mysql.php:
  * CASTOR2/dlf/web/utils.php:
  * CASTOR2/dlf/web/config.php:
    [2006-11-29,waldron] improved query optimisation, removal of timestamp checks, style support, backwards compatibility with versions < 2.1.1-10 and added pagination
  * CASTOR2/dlf/web/query.php:
    [r 1.9,2006-11-21,waldron] removed future date check on date fields
    [r 1.8,2006-11-16,waldron] make the futuristic date check a little less sensitive
    [r1.12,2006-11-30,waldron] Auto fill the 'To:' timetamp field
    [r1.11,2006-11-29,waldron] fixed lookup by message text and/or tapevid (INNER vs LEFT join)
    [r1.10,2006-11-29,waldron] improved query optimisation, removal of timestamp checks, style support, backwards compatibility with versions < 2.1.1-10 and added pagination
  * CASTOR2/dlf/web/results.php:
    [r 1.9,2006-11-29,waldron] fixed time order sequence of results
    [r 1.8,2006-11-29,waldron] minor update
    [r 1.7,2006-11-29,waldron] improved query optimisation, removal of timestamp checks, style support, backwards compatibility with versions < 2.1.1-10 and added pagination
    [r1.11,2006-11-30,waldron] add 2 minutes to the SYSDATE for parameter lookup. The additional 2 minutes is required as the elapsed time of previous queries can mean that parameters are not diaplyed for messages on the boundary of the timestamp condition
    [r1.10,2006-11-29,waldron] fixed lookup by message text and/or tapevid (INNER vs LEFT join)
  * CASTOR2/h/Castor_limits.h:
    [r1.12,2006-11-09,itglp] Moved CA_MAXDENNUM to Ctape_constants.h
  * CASTOR2/h/Csec_api.h:
  * CASTOR2/h/Csec_constants.h:
    [2006-11-24,gcancio] synchronized with LCG-DM
  * CASTOR2/h/Ctape_constants.h:
    [r 1.2,2006-11-09,itglp] Moved CA_MAXDENNUM to Ctape_constants.h
  * CASTOR2/h/Cuuid.h:
    [r 1.9,2006-11-29,waldron] silence -pedantic warning message
  * CASTOR2/h/dlf_api.h:
    [r1.18,2006-11-29,waldron] added security parameter types
  * CASTOR2/hsmtools/enterSvcClass.c:
    [r 1.5,2006-11-27,sponcec3] Set properly defaultGCPolicy if not given
  * CASTOR2/hsmtools/modifySvcClass.c:
    [r 1.9,2006-11-14,sponcec3] Fixed modifySvcClass for default file sizes > 2G
  * CASTOR2/job/stagerJob.shell:
    [r1.42,2006-11-17,jveldik] minor cleanup
  * CASTOR2/maketar.sh:
    [r1.51,2006-11-29,waldron] flag dlf configuration file as noreplace in rpm specfile
  * CASTOR2/rfio/rfio_call64.c:
    [r1.13,2006-11-10,riojac3] change O_DIRECT loglevel from DEBUG to INFO
  * CASTOR2/security/Csec_api.c:
  * CASTOR2/security/Csec_api.man:
  * CASTOR2/security/Csec_protocol_policy.c:
    [2006-11-23,gcancio] synchronized with DPM sources
  * CASTOR2/stager/stager_db_service.c:
    [r1.152,2006-11-30,felixehm] new behaviour for recall of files. An new Stager Service function is called to
    [r1.152,2006-11-30,felixehm] do the neccessary DB operations. Therefore the recall is not scheduled and
    [r1.152,2006-11-30,felixehm] handled anymore by the Job Service.
  * CASTOR2/tape/smcsubr.c:
    [r 1.9,2006-12-01,hcacote]
    [r 1.9,2006-12-01,hcacote] adding support to ibm library pause mode
  * CASTOR2/test/CASTORTESTCONFIG:
  * CASTOR2/test/CastorTestSuite.py:
  * CASTOR2/test/rfio/RfioTest.py:
  * CASTOR2/test/stager/ClientTest.py:
    [2006-11-16,gtaur] moved all the config information in a unique config file and added as parameters the local and remote directory name
    [2006-11-10,gtaur] new rfio cmd added and fixes concerning the file naming convension.
  * CASTOR2/test/dlf/dlftest.c:
    [r1.13,2006-11-21,waldron] corrected number of params in dlf_write
  * CASTOR2/test/security/Csec_client.c:
    [r 1.6,2006-11-23,gcancio] sending now VOMS data via Csec_client_setVOMS_data()
  * CASTOR2/test/security/Csec_server.c:
    [r 1.4,2006-11-23,gcancio] minimal fixes
  * CASTOR2/tools/installOnAFS.py:
    [r 1.5,2006-11-17,riojac3] Remove ia64 architecture
    [r 1.4,2006-11-17,riojac3] Modified the version of castor-compact  to 2.0.2-11
    [r 1.3,2006-11-17,riojac3] Modification SCL4 platform name for consistent reasons

 -- Felix Ehm <felix.ehm@cern.ch>  Mon, 04 Dez 2006 15:20:00 +0200

castor (2.1.1-9) unstable; urgency=low

  * CASTOR2/castor/Imakefile:
    [r1.136,2006-11-03,sponcec3] next iteration again...
    [r1.135,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/Services.cpp:
  * CASTOR2/castor/Services.h:
  * CASTOR2/castor/Services.hpp:
  * CASTOR2/castor/ServicesCInt.cpp:
    [2006-11-06,sponcec3] Added an autocommit flag to fillObj
  * CASTOR2/castor/db/castor_oracle_create.sql:
    [r1.72,2006-11-08,felixehm] fixed bug in fileRecalled : an else was missing, so the setting of the
    [r1.72,2006-11-08,felixehm] Subrequest status to 12 in the repack part was overrided by the last
    [r1.72,2006-11-08,felixehm] update.
  * CASTOR2/castor/db/newora/OraCommonSvc.cpp:
  * CASTOR2/castor/db/ora/OraCommonSvc.cpp:
    [2006-11-08,sponcec3] Fixed retrieval of minAllowedFreeSapce in selectFileSystem
  * CASTOR2/castor/db/ora/OraTapeSvc.cpp:
    [r1.17,2006-11-06,itglp] Changed selectTapeCopiesForMigration: moved the update part to PL/SQL
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.335,2006-11-08,felixehm] fixed logic error in fileRecalled PL/SQL for handling repack candidates.
    [r1.334,2006-11-06,itglp] Refactored selectTapeCopiesForMigration: now it updates the status
    [r1.334,2006-11-06,itglp] and performs a commit afterwards to release the lock on TapeCopy.
  * CASTOR2/castor/monitoring/ClusterStatus.cpp:
    [r 1.3,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/monitoring/Imakefile:
    [r 1.3,2006-11-06,sponcec3] Forgot to compile converters !
  * CASTOR2/castor/monitoring/SharedMemoryAllocator.hpp:
    [r 1.4,2006-11-03,sponcec3] next iteration again...
    [r 1.3,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/monitoring/rmnode/MetricsThread.cpp:
    [r 1.2,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/monitoring/rmnode/RmNodeDaemon.cpp:
    [r 1.2,2006-11-06,sponcec3] Use getconfent properly
  * CASTOR2/castor/monitoring/rmnode/StateThread.cpp:
    [r 1.3,2006-11-06,sponcec3] Fixed some initialization
    [r 1.2,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/repack/RepackCleaner.cpp:
    [r1.12,2006-11-08,felixehm] The Stager options are now set correctly to the information found in the RepackRequest
  * CASTOR2/castor/repack/RepackClient.cpp:
    [r1.22,2006-11-08,felixehm] setting the Stager information in the Request was missing.
    [r1.22,2006-11-08,felixehm] it is also now printed in the detailed view of a process
  * CASTOR2/castor/repack/RepackCommonHeader.hpp:
    [r1.14,2006-11-08,felixehm] introduction of a new state : FAILED.
    [r1.14,2006-11-08,felixehm]
    [r1.14,2006-11-08,felixehm] A RepackSubRequest is set to FAILED if a initial submit of a StageRepackRequest was not successfull (Stager not available,etc)
  * CASTOR2/castor/repack/RepackFileChecker.cpp:
    [r 1.4,2006-11-08,felixehm] speed up of setting the number staging files by using the segment (not the file) information.
    [r 1.4,2006-11-08,felixehm]
    [r 1.4,2006-11-08,felixehm] we ignore, if the result from the queried stager returns ENOENT (invalid argument), because it means that the requested file is not in Stager and can be send to be repacked again.
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r1.25,2006-11-08,felixehm] Errors during submit of the StagerRepackRequest are now catched and handles in a higher level (error handling is done more generally).
    [r1.25,2006-11-08,felixehm]
    [r1.25,2006-11-08,felixehm] removed bug in restart logic
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r1.13,2006-11-08,felixehm] distinguishing the response of a stager_fileqry:
    [r1.13,2006-11-08,felixehm] if case of 1 response, we assume it is a general error in the stager and
    [r1.13,2006-11-08,felixehm] forward the message in the created exception,
    [r1.13,2006-11-08,felixehm] otherwise the text from sstrerror(serrno) is taken
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.28,2006-11-08,felixehm] logic missing : A Request should be able to be restarted, if in FINISHED, when files are left in staging/migrating (e.g. in case the request was aborted with -R )
  * CASTOR2/castor/repack/Tools.cpp:
  * CASTOR2/castor/repack/Tools.hpp:
    [2006-11-08,felixehm] getStagerOpts now also sets the stager port to contact.
  * CASTOR2/castor/sharedMemory/Allocator.hpp:
    [r 1.8,2006-11-03,sponcec3] Fixed templated constructor
    [r 1.7,2006-11-03,sponcec3] Register blocks in the right place in the central block dictionnary
    [r 1.6,2006-11-03,sponcec3] Fixed stupud mistake in the previous commit
    [r 1.5,2006-11-03,sponcec3] next iteration again...
    [r 1.4,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/sharedMemory/Block.cpp:
    [r 1.5,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/sharedMemory/Block.hpp:
    [r 1.8,2006-11-06,sponcec3] Fixed comment
    [r 1.7,2006-11-06,sponcec3] Fixed problem of the garbage collection in case we use the map of libstdc++-5
    [r 1.6,2006-11-03,sponcec3] Register blocks in the right place in the central block dictionnary
    [r 1.5,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/castor/sharedMemory/BlockKey.hpp:
    [r 1.2,2006-11-03,sponcec3] next iteration again...
  * CASTOR2/castor/sharedMemory/SingletonBlock.hpp:
    [r 1.2,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
  * CASTOR2/debian/castor.conf:
    [r1.24,2006-11-06,waldron] added LOGMONITORING lines
  * CASTOR2/dlf/dlf_lib.c:
    [r 1.6,2006-11-06,waldron] fix: bug #21093 overview: Strange files created in local spool when DLF is not able to log?
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sql:
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sqlplus:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sql:
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sqlplus:
    [2006-11-08,waldron] added procedure dlf_stats_requests
  * CASTOR2/dlf/web/db/oracle.php:
    [r 1.4,2006-11-08,waldron] fixed bug in db_partition_count()
  * CASTOR2/dlf/web/site.css:
    [r 1.5,2006-11-06,waldron] corrected dlf_monitoring severity colour
  * CASTOR2/doc/ug/overview.tex:
    [r 1.4,2006-11-06,obarring] Add some \smallsize around examples
  * CASTOR2/h/Castor_limits.h:
    [r1.11,2006-11-07,hcacote]
    [r1.11,2006-11-07,hcacote] adding support to the 700GB tape
  * CASTOR2/h/Ctape.h:
    [r1.48,2006-11-07,hcacote]
    [r1.48,2006-11-07,hcacote] adding support to the 700GB tape
  * CASTOR2/hsmtools/modifySvcClass.c:
    [r 1.8,2006-11-07,sponcec3] Fixed calls to fillObj adapting to the new API
  * CASTOR2/rtcopy/MigHunter.c:
    [r1.37,2006-11-06,sponcec3] Adapted to the new fillObj interface
    [r1.36,2006-11-06,obarring] Add rollbacks in main loop just to make sure hidden locks are not kept for
    [r1.36,2006-11-06,obarring] next iteration. Try to restart streams in WAITSPACE.
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [r1.18,2006-11-06,sponcec3] Adapted to the new fillObj interface
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.156,2006-11-06,sponcec3] Adapted to the new fillObj interface
  * CASTOR2/stager/stager_db_service.c:
    [r1.151,2006-11-06,sponcec3] Fixed call to fillObj, using the new API
  * CASTOR2/tape/Ctape_dmpfil.c:
    [r1.26,2006-11-07,hcacote]
    [r1.26,2006-11-07,hcacote] adding support to 700GB tape
  * CASTOR2/tape/cvtden.c:
    [r1.11,2006-11-07,hcacote]
    [r1.11,2006-11-07,hcacote] adding support to 700GB tape
  * CASTOR2/test/UtilityForCastorTest.py:
  * CASTOR2/test/stager/CLIENTTESTCONFIG:
  * CASTOR2/test/stager/ClientTest.py:
    [2006-11-03,gtaur] fix for enviroment variables for Client test

 -- Felix Ehm <felix.ehm@cern.ch>  Wed, 08 Nov 2006 18:20:00 +0200

castor (2.1.1-8) unstable; urgency=low

  * CASTOR2/PACKAGING.howto:
    [r1.25,2006-10-26,felixehm] Added command for putting files into swrep
  * CASTOR2/castor/Constants.cpp:
  * CASTOR2/castor/Constants.hpp:
    [2006-10-26,felixehm] New constants for monitoring objects
  * CASTOR2/castor/Imakefile:
    [r1.135,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
    [r1.134,2006-10-26,felixehm] Compilation of the sharead memory part and of the new monitoring
  * CASTOR2/castor/client/BaseClient.cpp:
    [r1.57,2006-11-03,gtaur] to avoid weird behaviour of the listen and the bind, it is not possible anymore for the client recycle a hot-port and the srand is in all constructors
  * CASTOR2/castor/db/castor_oracle_create.sql:
  * CASTOR2/castor/db/castor_oracle_create.sqlplus:
  * CASTOR2/castor/db/castor_oracle_drop.sql:
    [2006-10-31,itglp] Regenerated with latest schema and PL/SQL code
  * CASTOR2/castor/db/cnv/DbRepackRequestCnv.cpp:
    [r1.10,2006-11-02,felixehm] Added new field to RepackRequest for keeping the uid and gid from the
    [r1.10,2006-11-02,felixehm] submitting user. This is neccessary for the later createment and submitment
    [r1.10,2006-11-02,felixehm] of the StagerRepackRequest as the original user.
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.14,2006-11-01,itglp] One more error code to look for db reconnection
    [r1.13,2006-10-31,felixehm] assigned and comparison was mixed
    [r1.12,2006-10-30,itglp] Added checks for many Oracle errors that can be fixed by resetting the connection
  * CASTOR2/castor/db/ora/OraRepackRequestCnv.cpp:
    [r1.11,2006-11-02,felixehm] Added new field to RepackRequest for keeping the uid and gid from the
    [r1.11,2006-11-02,felixehm] submitting user. This is neccessary for the later createment and submitment
    [r1.11,2006-11-02,felixehm] of the StagerRepackRequest as the original user.
    [r1.10,2006-10-30,felixehm] Added new field to RepackRequest object to store the stager name, which was
    [r1.10,2006-10-30,felixehm] used for sending the initial request. This is the preparation for the next
    [r1.10,2006-10-30,felixehm] feature in repack (dealing with >1 stager)
  * CASTOR2/castor/db/oracleHeader_drop.sql:
    [r 1.7,2006-10-31,itglp] Added missing DROP statement
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.333,2006-11-02,itglp] Better select in delete[Archived,Outofdate]Requests
    [r1.333,2006-11-02,itglp] A new index for diskcopies in status 8 (adviced by Nilo)
    [r1.332,2006-10-31,itglp] Moved putFailedProc after filesDeletedProc because 2nd is used by 1st
    [r1.331,2006-10-30,itglp] Removed triggers that are not used anymore (already commented out)
    [r1.330,2006-10-25,sponcec3] Fixed deletion of SubRequests linked to recalls in case of stageRm
  * CASTOR2/castor/io/ServerSocket.cpp:
    [r1.14,2006-11-03,gtaur] to avoid weird behaviour of the listen and the bind, it is not possible anymore for the client recycle a hot-port and the srand is in all constructors
    [r1.13,2006-11-01,gtaur] put the missing sdrand in all the costructors where it was missing
  * CASTOR2/castor/io/StreamRepackRequestCnv.cpp:
    [r 1.9,2006-11-02,felixehm] Added new field to RepackRequest for keeping the uid and gid from the
    [r 1.9,2006-11-02,felixehm] submitting user. This is neccessary for the later createment and submitment
    [r 1.9,2006-11-02,felixehm] of the StagerRepackRequest as the original user.
    [r 1.8,2006-10-30,felixehm] Added new field to RepackRequest object to store the stager name, which was
    [r 1.8,2006-10-30,felixehm] used for sending the initial request. This is the preparation for the next
    [r 1.8,2006-10-30,felixehm] feature in repack (dealing with >1 stager)
  * CASTOR2/castor/monitoring/rmmaster/Imakefile:
  * CASTOR2/castor/monitoring/rmmaster/RmMasterDaemon.cpp:
  * CASTOR2/castor/monitoring/rmmaster/RmMasterDaemon.hpp:
    [2006-10-26,felixehm] First compiling version of the new monitoring
  * CASTOR2/castor/repack/RepackCleaner.cpp:
    [r1.11,2006-11-02,felixehm] the RepackCleaner now sends the removal Request for the found files as the user, who submitted the repackrequest.
    [r1.10,2006-10-30,felixehm] Added server side ability for make difference between request for >1 stagers.
    [r1.10,2006-10-30,felixehm] This enables the server to distinguish between the requests send to different
    [r1.10,2006-10-30,felixehm] stagers. It further avoids finishing a repacksubrequest in case the wrong stager
    [r1.10,2006-10-30,felixehm] is contacted and no information about a request is returned.
  * CASTOR2/castor/repack/RepackClient.cpp:
  * CASTOR2/castor/repack/RepackClient.hpp:
    [2006-11-03,felixehm] changed option 'S' to Stager, which can be specified.
    [2006-11-03,felixehm] new option 'x' for getting details about a repack process
    [2006-11-03,felixehm] in the details : the name of the user, who submitted the Request is
    [2006-11-03,felixehm] retrieved by the user id field in the RepackRequest and Cgetpwuid.
  * CASTOR2/castor/repack/RepackFileChecker.cpp:
    [r 1.3,2006-10-31,felixehm] getServiceClass method was replaced by getStageOpts
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r1.24,2006-11-02,felixehm] The uid and guid from the user who submitted the RepackRequest is now set in the StageRepackRequest
    [r1.23,2006-10-30,felixehm] Added server side ability for make difference between request for >1 stagers.
    [r1.23,2006-10-30,felixehm] This enables the server to distinguish between the requests send to different
    [r1.23,2006-10-30,felixehm] stagers. It further avoids finishing a repacksubrequest in case the wrong stager
    [r1.23,2006-10-30,felixehm] is contacted and no information about a request is returned.
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r1.12,2006-11-03,felixehm] RepackMonitor now considers stager answers with diskcopies in
    [r1.12,2006-11-03,felixehm] BEINGMIGR.
    [r1.11,2006-10-30,felixehm] Added server side ability for make difference between request for >1 stagers.
    [r1.11,2006-10-30,felixehm] This enables the server to distinguish between the requests send to different
    [r1.11,2006-10-30,felixehm] stagers. It further avoids finishing a repacksubrequest in case the wrong stager
    [r1.11,2006-10-30,felixehm] is contacted and no information about a request is returned.
  * CASTOR2/castor/repack/RepackRequest.cpp:
  * CASTOR2/castor/repack/RepackRequest.hpp:
    [2006-11-02,felixehm] Added new field to RepackRequest for keeping the uid and gid from the
    [2006-11-02,felixehm] submitting user. This is neccessary for the later createment and submitment
    [2006-11-02,felixehm] of the StagerRepackRequest as the original user.
    [2006-10-30,felixehm] Added new field to RepackRequest object to store the stager name, which was
    [2006-10-30,felixehm] used for sending the initial request. This is the preparation for the next
    [2006-10-30,felixehm] feature in repack (dealing with >1 stager)
  * CASTOR2/castor/repack/RepackWorker.cpp:
  * CASTOR2/castor/repack/Tools.cpp:
  * CASTOR2/castor/repack/Tools.hpp:
    [2006-10-30,felixehm] Added server side ability for make difference between request for >1 stagers.
    [2006-10-30,felixehm] This enables the server to distinguish between the requests send to different
    [2006-10-30,felixehm] stagers. It further avoids finishing a repacksubrequest in case the wrong stager
    [2006-10-30,felixehm] is contacted and no information about a request is returned.
  * CASTOR2/castor/repack/repack.man:
    [r 1.5,2006-11-03,felixehm] added more information for the usage of the repack client
    [r 1.4,2006-11-02,felixehm] Added new options :
    [r 1.4,2006-11-02,felixehm] x (former -S)
    [r 1.4,2006-11-02,felixehm] S specifying the Stager to use for repack
  * CASTOR2/castor/repack/repack_oracle_create.sql:
    [r 1.4,2006-11-02,felixehm] the uid and gid from the original user, who submitted the RepackRequest is stored with the request
    [r 1.3,2006-10-30,felixehm] Added new field to RepackRequest object to store the stager name, which was
    [r 1.3,2006-10-30,felixehm] used for sending the initial request. This is the preparation for the next
    [r 1.3,2006-10-30,felixehm] feature in repack (dealing with >1 stager)
  * CASTOR2/castor/rh/RHThread.cpp:
    [r 1.9,2006-10-30,itglp] Added missing include, added DiskPoolQuery among the cases where we want to wake up a Query thread in the stager
    [r 1.8,2006-10-30,itglp] Added processing time to "Reply sent" log message
    [r 1.7,2006-10-27,itglp] Refactored logging messages for monitoring according to bug report #21069
    [r 1.6,2006-10-27,cvscasto] Upgraded msg 8 (Processing Request) to SYSTEM level for monitoring purposes
    [r1.10,2006-10-31,itglp] Fixed DLF messages, and moved "Reply sent to client" to MONITORING level
  * CASTOR2/castor/rh/RHThread.hpp:
    [r 1.4,2006-10-31,itglp] Fixed DLF messages, and moved "Reply sent to client" to MONITORING level
    [r 1.3,2006-10-27,itglp] Refactored logging messages for monitoring according to bug report #21069
  * CASTOR2/castor/rh/Server.cpp:
    [r1.48,2006-10-30,itglp] Changed "Sending reply" -> "Reply sent" DLF message
  * CASTOR2/castor/sharedMemory/Allocator.hpp:
    [r 1.4,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
    [r 1.3,2006-10-27,sponcec3] Fixes some inconstitencies of the shared memory part architecture
    [r 1.2,2006-10-26,felixehm] Improve version of the shared memory code. Now fully independent of monitoring and much cleaner
  * CASTOR2/castor/sharedMemory/Block.cpp:
    [r 1.5,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
    [r 1.4,2006-10-27,sponcec3] Fixes some inconstitencies of the shared memory part architecture
    [r 1.3,2006-10-26,felixehm] Improve version of the shared memory code. Now fully independent of monitoring and much cleaner
  * CASTOR2/castor/sharedMemory/Block.hpp:
    [r 1.5,2006-11-03,sponcec3] Next iteration of the shared memory saga. Should now compile, even on gcc 4.1
    [r 1.4,2006-10-27,sponcec3] Fixes some inconstitencies of the shared memory part architecture
    [r 1.3,2006-10-26,felixehm] Improve version of the shared memory code. Now fully independent of monitoring and much cleaner
  * CASTOR2/castor/sharedMemory/Helper.cpp:
  * CASTOR2/castor/sharedMemory/Helper.hpp:
  * CASTOR2/castor/sharedMemory/string:
    [2006-10-26,felixehm] Improved version of the shared memory code. Now fully independent of monitoring and much cleaner
  * CASTOR2/castor/stager/DiskCopy.cpp:
  * CASTOR2/castor/stager/DiskServer.cpp:
  * CASTOR2/castor/stager/FileSystem.cpp:
    [2006-10-26,felixehm] Some fixes in the list of includes, thanks to some fix in the code generator
  * CASTOR2/castor/stager/ITapeSvcCInt.cpp:
    [r 1.8,2006-11-02,felixehm] Removed debug statement
  * CASTOR2/castor/stager/QueryParameter.cpp:
  * CASTOR2/castor/stager/Segment.cpp:
  * CASTOR2/castor/stager/Stream.cpp:
  * CASTOR2/castor/stager/SubRequest.cpp:
  * CASTOR2/castor/stager/Tape.cpp:
  * CASTOR2/castor/stager/TapeCopy.cpp:
  * CASTOR2/castor/vdqm/TapeDrive.cpp:
  * CASTOR2/castor/vdqm/TapeServer.cpp:
    [2006-10-26,felixehm] Some fixes in the list of includes, thanks to some fix in the code generator
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.135,2006-10-26,felixehm] Last changes to the monitoring objects
  * CASTOR2/config/Library.tmpl:
  * CASTOR2/config/Project.tmpl:
  * CASTOR2/config/site.def:
    [2006-10-26,felixehm] infrastructure for compiling new rmNode and ne rmMaster
  * CASTOR2/debian/changelog:
    [r1.124,2006-10-26,cvscasto] Added entry for 2.1.1-6
  * CASTOR2/debian/if.has_oracle:
    [r 1.7,2006-10-26,felixehm] the repack Client is currently not build on 64bit architectures
  * CASTOR2/disksrv/src/gridftp2/external/dsi_CASTOR2ext.h:
    [r 1.2,2006-10-26,kotlyar] changed name from CASTOR2 to CASTOR2ext inside of sources
    [r 1.2,2006-10-26,kotlyar] because DSI module name should be the same for gridftp server
  * CASTOR2/disksrv/src/gridftp2/external/globus_gridftp_server_CASTOR2ext.c:
    [r 1.2,2006-10-26,kotlyar] changed name from CASTOR2 to CASTOR2ext inside of sources
    [r 1.2,2006-10-26,kotlyar] because DSI module name should be the same for gridftp server
  * CASTOR2/dlf/Imakefile:
    [r1.13,2006-10-27,waldron] changed to reflect name change of lib to dlf_lib
  * CASTOR2/dlf/common.c:
  * CASTOR2/dlf/common.h:
    [2006-11-01,waldron] strip newline characters returned by pro*c oracle errors
  * CASTOR2/dlf/dbi.h:
    [r 1.6,2006-10-27,waldron] removed db_stats call
  * CASTOR2/dlf/lib.c:
  * CASTOR2/dlf/lib.h:
    [2006-10-27,waldron] renamed
  * CASTOR2/dlf/oracle.pc:
    [r1.15,2006-11-01,waldron] strip newline characters returned by pro*c oracle errors
    [r1.14,2006-10-27,waldron] removal of db_stats in favour of plsql procedure
  * CASTOR2/dlf/scripts/mysql/dlf_mysql_create.sql:
    [r 1.5,2006-10-27,waldron] additional indexes and DLF_MONITORING log level entry for dlf_severities
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
    [r 1.7,2006-11-01,waldron] minor updates
    [r 1.6,2006-10-31,waldron] added dlf_stats_requests procedure
    [r 1.5,2006-10-27,waldron] additional indexes and DLF_MONITORING log level entry for dlf_severities
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sqlplus:
    [r 1.9,2006-11-01,waldron] added DLF_MONITORING severity
    [r 1.8,2006-11-01,waldron] minor updates
    [r 1.7,2006-10-31,waldron] added dlf_stats_requests procedure
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_drop.sql:
    [r 1.5,2006-11-01,waldron] minor updates
    [r 1.4,2006-10-31,waldron] added dlf_stats_requests procedure
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_grant.sql:
    [r 1.3,2006-10-31,waldron] added dlf_stats_requests procedure
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_create.sql:
    [r 1.9,2006-11-01,waldron] minor updates
    [r 1.8,2006-11-01,waldron] minor updates
    [r 1.7,2006-10-31,waldron] added dlf_stats_requests procedure
    [r 1.6,2006-10-27,waldron] additional indexes and DLF_MONITORING log level entry for dlf_severities
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_drop.sql:
    [r 1.4,2006-11-01,waldron] minor updates
    [r 1.3,2006-10-31,waldron] added dlf_stats_requests procedure
  * CASTOR2/dlf/scripts/oracle/express/dlf_oracle_grant.sql:
    [r 1.3,2006-10-31,waldron] added dlf_stats_requests procedure
  * CASTOR2/dlf/server.c:
    [r1.12,2006-10-27,waldron] removed db_stats call
  * CASTOR2/dlf/web/config.php:
  * CASTOR2/dlf/web/dbview.php:
  * CASTOR2/dlf/web/query.php:
    [2006-11-01,waldron] support to deal with really long parameter lines and instance id in banner
  * CASTOR2/dlf/web/results.php:
    [r 1.6,2006-11-01,waldron] fixes to:
    [r 1.6,2006-11-01,waldron] urldecode input parameters
    [r 1.6,2006-11-01,waldron] not search dlf_num_param_values with non numeric values
    [r 1.5,2006-11-01,waldron] support to deal with really long parameter lines and instance id in banner
    [r 1.4,2006-10-27,waldron] trim leading and trailing whitespace from user input fields
  * CASTOR2/dlf/web/site.css:
    [r 1.4,2006-11-01,waldron] support to deal with really long parameter lines and instance id in banner
    [r 1.3,2006-10-27,waldron] aded DLF_MONITORING severity style
  * CASTOR2/doc/ug/advanced.tex:
    [r 1.2,2006-10-25,obarring] Add RFIO TURL section
  * CASTOR2/doc/ug/overview.tex:
    [r 1.3,2006-10-25,obarring] Add missing label
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.6,2006-10-26,felixehm] updated the Repack documentation with activity diagram and Stager
    [r 1.6,2006-10-26,felixehm] TapeCopy/DiskCopy/SubRequest simplified state diagrams.
  * CASTOR2/h/Cns_api.h:
    [r 1.6,2006-11-02,felixehm] Added new function Cns_accessUser
  * CASTOR2/h/dlf_api.h:
    [r1.17,2006-10-27,waldron] added DLF_MONITORING lvl
    [r1.16,2006-10-26,felixehm] First attempt to define ranges in DLf
  * CASTOR2/h/stager_catalogInterface.h:
    [r1.22,2006-10-26,cvscasto] Extracted getRemJobAndSvc() and moved to RemoteJobSvc.c for the upcoming refactoring
  * CASTOR2/hsmtools/Imakefile:
    [r1.30,2006-11-03,felixehm] Added pthread compiler flag. Without it, the initialisation of thread save
    [r1.30,2006-11-03,felixehm] variables failed.
  * CASTOR2/hsmtools/upgradec2stgdb.csh:
    [r 1.5,2006-10-30,itglp] Updated castor instances' names
  * CASTOR2/job/Imakefile:
  * CASTOR2/job/stagerJob.c:
  * CASTOR2/rfio/Imakefile:
  * CASTOR2/rfio/rfio_callhandlers.c:
    [2006-10-26,cvscasto] Extracted getRemJobAndSvc() and moved to RemoteJobSvc.c for the upcoming refactoring
  * CASTOR2/lib/Imakefile:
    [r1.21,2006-10-26,felixehm] infrastructure for compiling new rmNode and new rmMaster
  * CASTOR2/ns/Cns_access.c:
    [r 1.3,2006-11-02,felixehm] added new access check function Cns_accessUser which is common with
    [r 1.3,2006-11-02,felixehm] Cns_access, but it takes a user id and group id as parameter.
    [r 1.3,2006-11-02,felixehm]
    [r 1.3,2006-11-02,felixehm] factorised common part for Cns_access and new function Cns_accessUser
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r 1.3,2006-10-26,felixehm] new version of the new LSF plugin, using the new monitoring
  * CASTOR2/shlib/Imakefile:
    [r1.50,2006-10-26,felixehm] Modifications for compiling libcastorMonitor and removal of tank related code
  * CASTOR2/stager/stager_catalogInterface.c:
    [r 1.7,2006-10-26,cvscasto] Extracted getRemJobAndSvc() and moved to RemoteJobSvc.c for the upcoming refactoring
  * CASTOR2/stager/stager_db_service.c:
    [r1.150,2006-11-02,felixehm] Modified check of accessing a file. Nameserver is now queried via
    [r1.150,2006-11-02,felixehm] Cns_accessUser function. This considers ACLs and the Cupv rights.
    [r1.150,2006-11-02,felixehm]
    [r1.150,2006-11-02,felixehm] Removed obsolete stager_db_service_access function
  * CASTOR2/test/UtilityForCastorTest.py:
    [r 1.5,2006-10-31,gtaur] small fixed related to directories for tests output
  * CASTOR2/test/dlf/dlftest.c:
    [r1.12,2006-10-27,waldron] test for DLF_MONITORING severity log level
  * CASTOR2/test/rfio/RfioTest.py:
    [r 1.2,2006-10-31,gtaur] small fixed related to directories for tests output
  * CASTOR2/test/stager/ClientTest.py:
    [r 1.5,2006-10-31,gtaur] implemented options that were not before and corrected the putdone-without-a-put asserts
  * CASTOR2/tools/castorStart.sh:
    [r 1.3,2006-10-31,itglp] Removed few \n
  * CASTOR2/upgrades/2.1.1-4_to_2.1.1-6.sql:
    [r 1.2,2006-10-30,itglp] Added latest SQL hotfixes to be run on top of version 2.1.1

 -- Felix Ehm <felix.ehm@cern.ch>  Wed, 25 Oct 2006 17:20:00 +0200

castor (2.1.1-7) unstable; urgency=low

  * CASTOR2/CASTOR.spec:
    [r1.52,2006-10-16,sponcec3] Do not generate this package castor-allservicesbuttapeservers anymore
  * CASTOR2/castor/db/analyze/currentStatus.sql:
    [r 1.4,2006-10-19,itglp] Added useful queries to check the status of the GC
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r1.11,2006-10-16,sponcec3] Force reloading of connection string for each single reconnection to the DB
  * CASTOR2/castor/db/ora/OraJobSvc.cpp:
    [r1.16,2006-10-18,sponcec3] Avoid to create FAILED diskcopies in case of 'no valid copy on tape' error. Rather delete the diskcopy
  * CASTOR2/castor/db/ora/OraTapeSvc.cpp:
    [r1.16,2006-10-19,felixehm] shifted selectTapeCopiesForMigration SQL Statement to a PL/SQL Procedure
    [r1.16,2006-10-19,felixehm] in the DB and adapted the fetch of the results in the c++ method.
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.329,2006-10-24,felixehm] removed 'commit' statement in checkFileForRepack
    [r1.328,2006-10-23,felixehm] removed 'cvs diff' Indicators
    [r1.327,2006-10-23,felixehm] added missing END IF in selectTapeCopiesForMigration
    [r1.326,2006-10-23,felixehm] modified selectTapeCopiesFor Migration:
    [r1.326,2006-10-23,felixehm] SELECT into a cursor does not throw an exception in case northin has been
    [r1.326,2006-10-23,felixehm] found. Instead we now have to check the cursor rowcount varible
    [r1.325,2006-10-20,itglp] Rolled back the select statement in garbageCollect()
    [r1.325,2006-10-20,itglp] In fileRecalled(), drop FAILED diskcopies for the same castorfile that
    [r1.325,2006-10-20,itglp] has been successfully recalled
    [r1.324,2006-10-19,felixehm] Added new result type for fetching only ids within a cursor
    [r1.324,2006-10-19,felixehm] Added new PL/SQL procedure, which retrieves the migration candidates
    [r1.324,2006-10-19,felixehm] TapeCopies) for a specified ServiceClass
    [r1.323,2006-10-19,itglp] One more fix to GC
    [r1.322,2006-10-19,itglp] Fixed the garbageCollect() job, previous fix leads to an infinite loop!
    [r1.321,2006-10-18,sponcec3] Handling of existing STAGED DiskCopy when a recall takes place. This can happend if a diskServer is disabled and comes back during the tape recall is queuing
    [r1.320,2006-10-16,itglp] Better GC job, atomically deletes completed FSs from the queue; minor fix
    [r1.320,2006-10-16,itglp] in the GC trigger.
    [r1.319,2006-10-16,itglp] internalStageQuery rewritten to use a materialized view for some joins
    [r1.319,2006-10-16,itglp] credits to Nilo) and a subquery to prevent O(n^2) results for files with
    [r1.319,2006-10-16,itglp] many failed diskcopies/subrequests - only O(n) will be returned
    [r1.318,2006-10-16,felixehm] The SubRequest is not started in a new job, when another diskcopy is waiting.
    [r1.318,2006-10-16,felixehm] Instead, the fileRecalled PL/SQL sets the diskcopy id, creates the TapeCopies
    [r1.318,2006-10-16,felixehm] and sets the status of the SubRequest into 12 (SUBREQUEST_REPACK).
    [r1.318,2006-10-16,felixehm]
    [r1.318,2006-10-16,felixehm] Therefore the archiveSubRequest is not anymore scheduled and executed in case of
    [r1.318,2006-10-16,felixehm] a Repack process by the stagerJob. This part has now been reversed to the
    [r1.318,2006-10-16,felixehm] original version.
    [r1.318,2006-10-16,felixehm] independend from the subrequest it is set to 8 (SUBREQUEST_FINISHED).
  * CASTOR2/castor/io/ClientSocket.cpp:
    [r 1.6,2006-10-24,sponcec3] reset the m_socket to -1 and not 0
  * CASTOR2/castor/io/ServerSocket.cpp:
    [r1.12,2006-10-25,itglp] Made bind() and listen() process- and thread-safe
    [r1.12,2006-10-25,itglp] Fixed initialization in one constructor
    [r1.11,2006-10-24,sponcec3] reset the m_socket to -1 and not 0
  * CASTOR2/castor/io/ServerSocket.hpp:
    [r 1.5,2006-10-25,itglp] Made bind() and listen() process- and thread-safe
    [r 1.5,2006-10-25,itglp] Fixed initialization in one constructor
  * CASTOR2/castor/monitoring/rmmaster/Collector.cpp:
  * CASTOR2/castor/monitoring/rmmaster/Collector.hpp:
    [2006-10-18,sponcec3] End of this temporary files
  * CASTOR2/castor/monitoring/rmmaster/DiskServerStatus.cpp:
  * CASTOR2/castor/monitoring/rmmaster/DiskServerStatus.hpp:
    [2006-10-17,sponcec3] renames machine into diskServer to be coherent
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
    [r1.19,2006-10-20,felixehm] A removal of a RepackSubRequest will put the status into FINISHED.
    [r1.19,2006-10-20,felixehm] Removed a possible deadlock
  * CASTOR2/castor/repack/Imakefile:
    [r1.14,2006-10-23,felixehm] Added install part for man pages
  * CASTOR2/castor/repack/RepackFileStager.cpp:
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [2006-10-20,felixehm] Seperating sending the StageRepackRequest through the BaseClient class:
    [2006-10-20,felixehm] 1.The Request is send and the returned CUUID immedialty stored with the
    [2006-10-20,felixehm] RepackSubRequest.
    [2006-10-20,felixehm] 2. The answers from the stager for the submitted request are then polled.
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r1.10,2006-10-20,felixehm] special handling if the requestid wasn't found on the stager. Repack assumes that the Request is then over.
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.26,2006-10-20,felixehm] fixed little nasty bug: if only one tape is submitted for a repack the repackserver looped an never answered.
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.134,2006-10-20,sponcec3] Next round of fixes/changes in the monitoring objects
    [r1.133,2006-10-19,sponcec3] new improvements for the monitoring objects
    [r1.132,2006-10-17,sponcec3] fixed monitoring objects by adding a missing member and a missing link
    [r1.131,2006-10-13,sponcec3] Fixed missing multiplicities
  * CASTOR2/codeGeneration/gencastor/Makefile:
    [r1.14,2006-10-19,sponcec3] Small improvements so that it's quick and does not ask dummy questions
  * CASTOR2/codeGeneration/gencastor/umbrello/codegenerators/cppcppclasswriter.cpp:
    [r1.19,2006-10-24,sponcec3] Fixed missing namespace when initializing enums
  * CASTOR2/debian/castor-allservicesbuttapeservers-config.install.perm:
  * CASTOR2/debian/castor-allservicesbuttapeservers.conf:
    [2006-10-16,sponcec3] Do not generate this package anymore
  * CASTOR2/debian/castor-hsmtools.install.perm:
  * CASTOR2/debian/castor-hsmtools.manpages:
    [2006-10-20,itglp] Don't install old repack anymore and install correct man pages for the new one
  * CASTOR2/debian/control:
    [r1.43,2006-10-16,sponcec3] Do not generate this package castor-allservicesbuttapeservers anymore
  * CASTOR2/debian/repackserver.init:
    [r 1.4,2006-10-20,felixehm] Converted file into unix format (formerly DOS)
  * CASTOR2/debian/rmmaster.init:
    [r 1.4,2006-10-25,sponcec3] Fix in the restart target. We need to wait after the stop before the start is issued
  * CASTOR2/debian/rules:
    [r1.39,2006-10-16,sponcec3] Do not generate this package castor-allservicesbuttapeservers anymore
  * CASTOR2/dlf/doc/index.html:
    [r 1.9,2006-10-19,waldron] changed dlf_idx to dlf_indx
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
    [2006-10-19,waldron] added missing '\n' in db_open() - invalid connect string message
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
    [r 1.4,2006-10-19,waldron] changed dlf_idx to dlf_indx
  * CASTOR2/dlf/server.c:
    [r1.11,2006-10-20,waldron] Initialise the db layer prior to creating listener threads. This prevents new clients from trying to initialise their api's on the db interface which is not ready to answer them
  * CASTOR2/dlf/server.h:
    [r 1.5,2006-10-20,waldron] increase the max clients per thread to 300
  * CASTOR2/dlf/web/query.php:
    [r 1.6,2006-10-16,waldron] minor correction to javascript logic
    [r 1.5,2006-10-16,waldron] added additional 'lines per page' options, set default to 200
    [r 1.4,2006-10-16,waldron] auto set the 'from' date when the 'to' date is populated
  * CASTOR2/hsmtools/Imakefile:
    [r1.29,2006-10-20,itglp] Don't compile repack by default
  * CASTOR2/hsmtools/disknodeShutdown:
    [r 1.8,2006-10-20,aearl] new version with bug fixes
  * CASTOR2/job/stagerJob.c:
    [r1.157,2006-10-25,kotlyar] increased select timeout for gsiftp to 15min
    [r1.157,2006-10-25,kotlyar] changed the name for dsi module for GridFTP server from CASTOR2 to CASTOR2int
    [r1.156,2006-10-25,sponcec3] increased select timeout for gsiftp to 15min
    [r1.156,2006-10-25,sponcec3] changed the name for dsi module for GridFTP server from CASTOR2 to CASTOR2int
  * CASTOR2/rfio/rfio_callhandlers.c:
    [r1.10,2006-10-18,gtaur] Special case of internal_context NULL now taken into account.
  * CASTOR2/rtcopy/rtcpcldNsInterface.c:
    [r1.38,2006-10-19,felixehm] Changed DLF parameter for logging the checksum of a segment.
    [r1.38,2006-10-19,felixehm] By definition it is unsigned long, but was formerly logged as INT. Changed
    [r1.38,2006-10-19,felixehm] now to INT64
  * CASTOR2/stager/stager_mapper.c:
    [r1.10,2006-10-16,gtaur] valgrind error about variable not initialized corrected
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.50,2006-10-16,sponcec3] minor improvements for returned messages
    [r1.49,2006-10-16,sponcec3] Added another missing check (this time for Cns_getpath) and avoid checking for directory query when regexp
    [r1.48,2006-10-16,sponcec3] Added missing check on the result of Cns_stat leading to random behavior under certain circumstances
  * CASTOR2/test/CASTORTESTCONFIG:
  * CASTOR2/test/CastorTestSuite.py:
    [2006-10-24,gtaur] added test for rfcp in different scenarium and with different TURL

 -- Felix Ehm <felix.ehm@cern.ch>  Wed, 25 Oct 2006 17:20:00 +0200

castor (2.1.1-6) unstable; urgency=low

  * Failed attempt to make the release

 -- Felix Ehm <felix.ehm@cern.ch>  Wed, 25 Oct 2006 12:00:00 +0200

castor (2.1.1-5) unstable; urgency=low

  * CASTOR2/castor/Imakefile:
    [r1.133,2006-10-13,itglp] Added System.cpp to the main library
  * CASTOR2/castor/System.cpp:
    [r1.1,2006-10-13,itglp] Class with system-level static methods (only one so far)
  * CASTOR2/castor/client/BaseClient.hpp:
  * CASTOR2/castor/client/BaseClient.cpp:
    [r1.56,2006-10-13,itglp] Use the new System class
    [2006-10-13,felixehm] Refactoring of the BaseClient. functional parts were seperated like getting the (client) host information, sending the request and polling the stager answers.
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.316,2006-10-11,itglp] Restrict internalStageQuery to DiskCopies not GCCANDIDATE or BEINGDELETED
    [r1.315,2006-10-09,itglp] Fixed a SELECT FOR UPDATE in stageRm that could select more than one row
    [r1.314,2006-10-05,gtaur] added a lock on the table NbCopiesInFS by the trigger Tr_stream2tapecopy_delete, Tr_stream2tapecopy_insert and Tr_diskcopy_update.
    [r1.314,2006-10-05,gtaur] removed the Tr_stream2tapecopy_stream.
    [r1.314,2006-10-05,gtaur] Due to several copies on different filesystem called from different stream, we had deadlock concerning  stream and NbTapecopiesInFs,
    [r1.314,2006-10-05,gtaur] this modification should avoid that.
  * CASTOR2/castor/monitoring/rmmaster/ClusterStatus.cpp:
    [r 1.2,2006-10-09,sponcec3] Debugged working version
  * CASTOR2/castor/monitoring/rmmaster/RmMasterDaemon.cpp:
    [r 1.2,2006-10-09,sponcec3] Debugged working version
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r1.21,2006-10-11,felixehm] fixed the update of a RepackSubRequest took place, even if it was not restarted.
    [r1.21,2006-10-11,felixehm] now this is done after the new request was sent to the stager.
    [r1.21,2006-10-11,felixehm]
    [r1.21,2006-10-11,felixehm] The RepackWorker checks now if a RepackSubRequets can be set to restart.
    [r1.21,2006-10-11,felixehm] This is forbidden, if there are still files in staging or migrating status.
    [r1.21,2006-10-11,felixehm] We must not restart it, because we loose the cuuid from the unfinished
    [r1.21,2006-10-11,felixehm] files.
    [r1.20,2006-10-09,felixehm] forgot to remove a line
    [r1.19,2006-10-09,felixehm] modified restart process :
    [r1.19,2006-10-09,felixehm] If the user restarts a repack request, only the files in invalid will be send
    [r1.19,2006-10-09,felixehm] again.
    [r1.19,2006-10-09,felixehm] Otherwise, if no answer for the cuuid is given by tge stager, the remaining files on the tape are send again as a new Request to the stager.
  * CASTOR2/castor/repack/RepackMonitor.cpp:
  * CASTOR2/castor/repack/RepackMonitor.hpp:
    [2006-10-09,felixehm] thrown Exception caused seg fault (wrong type was declared ), fixed
    [2006-10-09,felixehm]
    [2006-10-09,felixehm] if a cuuid is not known anymore by the stager during monitoring, it is taken as granted that the request is over. The state of the repacksubrequest is then set to ready_forcleanup.
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.22,2006-10-11,felixehm] fixed stupid bug : instead of initialising the RepackFileChecker
    [r1.22,2006-10-11,felixehm] the Cleaner was created
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.25,2006-10-11,felixehm] fixed the update of a RepackSubRequest took place, even if it was not restarted.
    [r1.25,2006-10-11,felixehm] now this is done after the new request was sent to the stager.
    [r1.25,2006-10-11,felixehm]
    [r1.25,2006-10-11,felixehm] The RepackWorker checks now if a RepackSubRequets can be set to restart.
    [r1.25,2006-10-11,felixehm] This is forbidden, if there are still files in staging or migrating status.
    [r1.25,2006-10-11,felixehm] We must not restart it, because we loose the cuuid from the unfinished
    [r1.25,2006-10-11,felixehm] files.
  * CASTOR2/castor/repack/repack_oracle_create.sql:
    [r 1.2,2006-10-06,felixehm] Added missing statement for creating a sequence
  * CASTOR2/castor/sharedMemory/Block.cpp:
  * CASTOR2/castor/sharedMemory/Block.hpp:
  * CASTOR2/castor/sharedMemory/DLFInit.cpp:
  * CASTOR2/castor/sharedMemory/Helper.cpp:
    [r 1.2,2006-10-09,sponcec3] Debugged working version
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.130,2006-10-12,sponcec3] Included objects for the new monitoring framework
  * CASTOR2/common/serror.c:
    [r1.14,2006-10-06,gtaur] specific serrno added for svc class not found and modification done to be compatible for dpm merge.
  * CASTOR2/dlf/dbi.h:
  * CASTOR2/dlf/doc/index.html:
  * CASTOR2/dlf/mysql.c:
  * CASTOR2/dlf/oracle.pc:
  * CASTOR2/dlf/server.c:
    [2006-10-10,waldron] added db_reset() function
  * CASTOR2/dlf/web/query.php:
    [r 1.3,2006-10-06,waldron] trim newline characters from msgtexts to prevent javascript errors
  * CASTOR2/doc/ug/overview.tex:
    [r 1.2,2006-10-10,obarring] Various changes after feedback from Veronique
  * CASTOR2/doc/ug/ug.tex:
    [r 1.2,2006-10-10,obarring] url package already included
  * CASTOR2/h/serrno.h:
    [r1.16,2006-10-06,gtaur] specific serrno added for svc class not found and modification done to be compatible for dpm merge.
  * CASTOR2/h/stager_client_api.h:
    [r1.34,2006-10-09,kotlyar] added  known mover protocols
    [r1.34,2006-10-09,kotlyar] define MOVER_PROTOCOL_XROOT "xroot"
    [r1.34,2006-10-09,kotlyar] define MOVER_PROTOCOL_GSIFTP "gsiftp"
  * CASTOR2/hsmtools/diskServer_qry:
    [r 1.4,2006-10-12,sponcec3] Fixed case where there is no lastKnownFileNameForTheFile. ORACLE was returning null instead of '' and perl was complaining that the variable was not initialized
  * CASTOR2/hsmtools/disknodeShutdown:
    [r 1.7,2006-10-12,aearl] removal of tr for user email and removal of \ in caster ops email address
    [r 1.6,2006-10-11,aearl] improved version
  * CASTOR2/job/stagerJob.c:
    [r1.155,2006-10-09,kotlyar] added support for gsiftp mover protocol:
    [r1.155,2006-10-09,kotlyar] stagerJob exec gridftp-server in inetd mode under stager:st privileges (like root section);
    [r1.155,2006-10-09,kotlyar] in castor.conf following variable can be used:
    [r1.155,2006-10-09,kotlyar] GSIFTP GLOBUS_LOCATION - main globus variable, default /opt/globus;
    [r1.155,2006-10-09,kotlyar] GSIFTP GRIDMAP - grid-mapfile for disk server, default /etc/grid-security/grid-mapfile;
    [r1.155,2006-10-09,kotlyar] GSIFTP LOGFILE - server log file, default /var/spool/gridftp/log;
    [r1.155,2006-10-09,kotlyar] GSIFTP NETLOGFILE - log file in net logger format, default /var/spool/gridftp/netlog;
    [r1.155,2006-10-09,kotlyar] in debug mode for job gridftp-server also is started with debug level loginfo;
    [r1.155,2006-10-09,kotlyar] stagerJob sets environment UUID, FULLDESTPATH, ACCESS_MODE to specify destpath and mode
    [r1.155,2006-10-09,kotlyar] to access file inside gridftp-server by DSI CASTOR2 module.
  * CASTOR2/rfio/rfio_call64.c:
    [r1.12,2006-10-10,gtaur] returned an error code if the prepareForMigration failed instead saying that it is ok
  * CASTOR2/rfio/rfio_callhandlers.c:
    [r 1.9,2006-10-10,gtaur] returned an error code if the prepareForMigration failed instead saying that it is ok
  * CASTOR2/rfio/rfio_calls.c:
    [r1.16,2006-10-10,gtaur] returned an error code if the prepareForMigration failed instead saying that it is ok
  * CASTOR2/rtcopy/MigHunter.c:
    [r1.35,2006-10-10,obarring] Forward port from v2_1_0_1: fix second place where initialSizeToTransfer is set
  * CASTOR2/stager/stager_db_service.c:
    [r1.149,2006-10-06,gtaur] specific serrno added for svc class not found and modification done to be compatible for dpm merge.
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.47,2006-10-11,itglp] Enhanced answer to stager_qry: it's 'file not in given svcClass' when a svcClass is provided
  * CASTOR2/tape/readlbl.c:
    [r1.12,2006-10-10,hcacote]
    [r1.12,2006-10-10,hcacote] with the removal of the patch tape_ansi_eof in kernel 2.6 the end of data has to
    [r1.12,2006-10-10,hcacote] be determined via st device driver.
  * CASTOR2/tape/skiptape.c:
    [r1.11,2006-10-10,hcacote]
    [r1.11,2006-10-10,hcacote] with the removal of the patch tape_ansi_eof in kernel 2.6 the end of data has to
    [r1.11,2006-10-10,hcacote] be determined via st device driver.

 -- Giuseppe Lo Presti <giuseppe.lopresti@cern.ch>  Fri, 13 Oct 2006 17:00:54 +0200

castor (2.1.1-4) unstable; urgency=low

  * CASTOR2/castor/cleaning/CleaningDaemon.cpp:
    [r1.11,2006-09-29,gtaur] new parameters added to say the periodicity of the cleaning operations
  * CASTOR2/castor/cleaning/cleaningDaemon.man:
    [r 1.3,2006-09-29,gtaur] new parameters added to say the periodicity of the cleaning operations
    [r 1.2,2006-09-29,gtaur] explained config parameters
  * CASTOR2/castor/db/cnv/Imakefile:
    [r 1.8,2006-09-28,itglp] Added missing converter for stager_qry -s
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.313,2006-10-05,gtaur] fix against deadlock in filesDeletedProcedure
    [r1.312,2006-10-05,itglp] Improved cleaning procedures: now the timeout applies to the most recent
    [r1.312,2006-10-05,itglp] subrequest of any given request
    [r1.311,2006-10-04,sponcec3] Fixed putStart so that the optimization of the update of the lastKnownFileName is OK in ORACLE. This includes using an index and making sure that all lastKnownFileNames are distinct, even the unknown ones
    [r1.310,2006-10-03,itglp] Improved GC trigger, to resurrect the GC job if it previously died
  * CASTOR2/castor/repack/FileListHelper.cpp:
    [r1.19,2006-10-03,felixehm] added DLF message for same file on same tape check
  * CASTOR2/castor/repack/RepackClient.cpp:
    [r1.20,2006-10-05,felixehm] Added two missing status codes for RepackSubRequest
    [r1.20,2006-10-05,felixehm] RESTART , TOBESTAGED
    [r1.19,2006-09-28,felixehm] Modified error Message in case of wrong VID
    [r1.19,2006-09-28,felixehm] setRemoteHost and setRemotePort exceptions are caught and message printed
  * CASTOR2/castor/repack/RepackCommonHeader.hpp:
    [r1.13,2006-10-05,felixehm] Added new Module: RepackFileChecker.
    [r1.13,2006-10-05,felixehm] It retrieves the filenames from NS, checks for multicopy, sets a new status
    [r1.13,2006-10-05,felixehm] to the RepackSubRequest (TOBESTGAED) and stores it. This was done before in
    [r1.13,2006-10-05,felixehm] the RepackFileStager, but there was a risk that the insertion and update of
    [r1.13,2006-10-05,felixehm] the segments slows down the RepackFileStager.
  * CASTOR2/castor/repack/RepackFileChecker.cpp:
    [r 1.2,2006-10-05,felixehm] RepackFileChecker does not set the number of files staging anymore
    [r 1.2,2006-10-05,felixehm] now done by the RepackFileStager)
    [r 1.2,2006-10-05,felixehm] fixed bug in logic for checking a files availability on the Stager, before
    [r 1.2,2006-10-05,felixehm] sending a new one.
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r1.18,2006-10-05,felixehm] forgot the return statement for failed files.
    [r1.17,2006-10-05,felixehm] fixed bug in if clause (caused the wrong handle for a SubRequest in TOBESTAGED)
    [r1.17,2006-10-05,felixehm] if files failed during the submit to the stager, it is now announces in the
    [r1.17,2006-10-05,felixehm] RepackSubRequest stats.
    [r1.16,2006-10-05,felixehm] RepackFileStager is querying now for RepackSubRequests in TOBESTAGED
    [r1.16,2006-10-05,felixehm] Removed storing segment infromation since this took to long time and the chance of loosing the cuuid information which we got back from stager is lost due to RepackDB problems (and a possible restart
    [r1.16,2006-10-05,felixehm] in case of restart, only the files in invalid status are send again.
    [r1.15,2006-10-03,felixehm] restart also resets the stats of a repacksubrequest
    [r1.15,2006-10-03,felixehm] fixed two DLF messages (wrong text)
    [r1.15,2006-10-03,felixehm] checkMultiRepack: existing diskcopy must be in stagein or invalid to resend another request.
    [r1.14,2006-10-02,felixehm] RepackFileStager handles now the restarted processes.
    [r1.14,2006-10-02,felixehm] DLF Messaging for failed files after sending request  to Stager
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [r1.10,2006-10-05,felixehm] Modfied sendStagerRequest method signature, its returning the failed files
    [r1.10,2006-10-05,felixehm] during a submit
    [r 1.9,2006-10-05,felixehm] RepackFileStager is querying now for RepackSubRequests in TOBESTAGED
    [r 1.9,2006-10-05,felixehm] Removed storing segment infromation since this took to long time and the chance of loosing the cuuid information which we got back from stager is lost due to RepackDB problems (and a possible restart
    [r 1.9,2006-10-05,felixehm] in case of restart, only the files in invalid status are send again.
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r 1.8,2006-10-05,felixehm] Refactoring of some parts in the RepackMonitor.
    [r 1.8,2006-10-05,felixehm] new method updateTape: evaluates the responses from getStats
    [r 1.7,2006-10-03,felixehm] fixed wrong DLF Message
    [r 1.7,2006-10-03,felixehm] the repacksubrequest is updated, even any other number except invalid status haven't changed
  * CASTOR2/castor/repack/RepackMonitor.hpp:
    [r 1.2,2006-10-05,felixehm] Refactoring of some parts in the RepackMonitor.
    [r 1.2,2006-10-05,felixehm] new method updateTape: evaluates the responses from getStats
  * CASTOR2/castor/repack/RepackServer.cpp:
  * CASTOR2/castor/repack/RepackServer.hpp:
    [r1.21,2006-10-05,felixehm] Added new Module: RepackFileChecker.
    [r1.21,2006-10-05,felixehm] It retrieves the filenames from NS, checks for multicopy, sets a new status
    [r1.21,2006-10-05,felixehm] to the RepackSubRequest (TOBESTGAED) and stores it. This was done before in
    [r1.21,2006-10-05,felixehm] the RepackFileStager, but there was a risk that the insertion and update of
    [r1.21,2006-10-05,felixehm] the segments slows down the RepackFileStager.
    [r1.20,2006-10-03,felixehm] fixed DLF Messages
    [r1.20,2006-10-03,felixehm]
    [r1.20,2006-10-03,felixehm] added overriding of parseCommandLine of BaseServer, since we want the
    [r1.20,2006-10-03,felixehm] repackserver to run in a synchronised mode. This is necessary, after a
    [r1.20,2006-10-03,felixehm] crash while storing Segments into DB, because this will cause the
    [r1.20,2006-10-03,felixehm] repackserver to send the request again when restarted. Since this causes
    [r1.20,2006-10-03,felixehm] the Stager to create another TapeCopy, this has to be avoided.
    [r1.20,2006-10-03,felixehm] The synchronising mode allows the user only to retrieve the segment
    [r1.20,2006-10-03,felixehm] information from NS and update the DB without sending the request.
    [r1.20,2006-10-03,felixehm]
    [r1.20,2006-10-03,felixehm] added new Thread : RepackSynchroniser
    [r1.19,2006-10-02,felixehm] added new Messages
    [r1.19,2006-10-02,felixehm] environment varibale changed from STAGER_HOST to RH_HOST
  * CASTOR2/castor/repack/RepackSynchroniser.cpp:
    [r 1.2,2006-10-05,felixehm] The Synchronising part doen't retrieve the segment information because
    [r 1.2,2006-10-05,felixehm] it will allow to change the cuuid from the RepackSubrequests in TOBESTAGED.
    [r 1.2,2006-10-05,felixehm] RepackFileChecker fill the RepackSegments already)
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.24,2006-10-03,felixehm] removed checkMultiRepack method, this is done in the RepackFileStager
    [r1.23,2006-10-02,felixehm] tape pool handling improved:
    [r1.23,2006-10-02,felixehm] the request is not anymore rejected, if empty tapes are in the tapepool
    [r1.22,2006-09-28,felixehm] Modified error Message in case of wrong VID
    [r1.22,2006-09-28,felixehm] setRemoteHost and setRemotePort exceptions are caught and message printed
  * CASTOR2/castor/repack/RepackWorker.hpp:
    [r1.18,2006-10-03,felixehm] removed checkMultiRepack method, this is done in the RepackFileStager
  * CASTOR2/castor/server/SignalThreadPool.cpp:
    [r1.12,2006-10-03,felixehm] Fixed creation of threads. if 0 threads are supposed to be created, the server
    [r1.12,2006-10-03,felixehm] crashed with an error.
  * CASTOR2/debian/Cmonitd.init:
    [r 1.4,2006-09-28,felixehm] correction of the monitoring logging directory
  * CASTOR2/debian/castor-job.cron.hourly:
    [r 1.6,2006-10-02,jveldik] quiesce cron job
  * CASTOR2/debian/castor-dlf-server.logrotate:
  * CASTOR2/debian/castor-expert-server.logrotate:
  * CASTOR2/debian/castor-gc-server.logrotate:
  * CASTOR2/debian/castor-job.logrotate:
  * CASTOR2/debian/castor-lsf-plugin.logrotate:
  * CASTOR2/debian/castor-monitor-server.logrotate:
  * CASTOR2/debian/castor-ns-server.logrotate:
  * CASTOR2/debian/castor-rfio-server.logrotate:
  * CASTOR2/debian/castor-rh-server.logrotate:
  * CASTOR2/debian/castor-rmc-server.logrotate:
  * CASTOR2/debian/castor-rmmaster-server.logrotate:
  * CASTOR2/debian/castor-rmnode-server.logrotate:
  * CASTOR2/debian/castor-rtcopy-server.logrotate:
  * CASTOR2/debian/castor-stager-server.logrotate:
  * CASTOR2/debian/castor-tape-server.logrotate:
  * CASTOR2/debian/castor-vdqm-server.logrotate:
  * CASTOR2/debian/castor-vdqm2-server.logrotate:
  * CASTOR2/debian/castor-vmgr-server.logrotate:
    [2006-09-29,jveldik] more minor cleanups
  * CASTOR2/debian/castor-upv-server.logrotate:
    [r 1.4,2006-09-29,jveldik] minor cleanup
    [r 1.3,2006-09-28,felixehm] added missing rotate entry for /var/spool/upv/log
  * CASTOR2/debian/castor.conf:
    [r1.23,2006-09-29,gtaur] new parameters added to say the periodicity of the cleaning operations
    [r1.22,2006-09-29,gtaur] configuration file compatible with the cleaning daemon code.
  * CASTOR2/debian/repackserver.init:
    [r 1.3,2006-09-28,felixehm] missing mycheckpid added for proper start
  * CASTOR2/dlf/lib.c:
    [r1.10,2006-10-04,waldron] insure fixes
  * CASTOR2/dlf/web/config.php:
  * CASTOR2/dlf/web/dbview.php:
  * CASTOR2/dlf/web/results.php:
    [2006-09-29,waldron] added additional timestamp predicates to sql select queries to prevent full table scans
  * CASTOR2/h/rtcpcld.h:
    [r1.49,2006-10-04,obarring] Two new prototypes
  * CASTOR2/h/rtcpcld_messages.h:
    [r1.47,2006-10-04,obarring] New message for the service class statistics in the migrator
  * CASTOR2/job/stagerJob.shell:
    [r1.41,2006-10-05,jveldik] do not wait longer than 600 seconds for msgbox 4
  * CASTOR2/rtcopy/MigHunter.c:
    [r1.34,2006-10-04,obarring] Fix spelling error SIZECIELING -> SIZECEILING
    [r1.33,2006-09-28,obarring] Backport from v2_1_0_1: Better calculation of initialSizeToTransfer and
    [r1.33,2006-09-28,obarring] support for ceiling
  * CASTOR2/rtcopy/migrator.c:
    [r1.49,2006-10-04,obarring] Added service class and tape pool specific logging messages to be used by
    [r1.49,2006-10-04,obarring] the monitoring
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.155,2006-10-04,obarring] Added service class and tape pool specific logging messages to be used by
    [r1.155,2006-10-04,obarring] the monitoring
  * CASTOR2/rtcopy/rtcpcldNsInterface.c:
    [r1.37,2006-10-02,felixehm] fixed double free operation if only one file is in the migration cue.
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.25,2006-10-04,obarring] Added service class and tape pool specific logging messages to be used by
    [r1.25,2006-10-04,obarring] the monitoring
  * CASTOR2/rtcopy/rtcpcldcommon.c:
    [r1.34,2006-10-02,felixehm] fixed wrong number of parameters for DLF logging
  * CASTOR2/stager/stager_gc_service.cpp:
    [r1.12,2006-09-29,gtaur] return -1 and log an error message instead of segfault if the service cannot be created/located
  * CASTOR2/stager/stager_job_service.cpp:
    [r1.36,2006-09-29,gtaur] return -1 and log an error message instead of segfault if the service cannot be created/located
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.46,2006-10-04,sponcec3] fixed stupid bug due to bad cut and paste. stager_qry was always returning STAGED in case 2 DiskCopies were found and the second status took precedence over the first one
    [r1.45,2006-09-29,gtaur] return -1 and log an error message instead of segfault if the service cannot be created/located
  * CASTOR2/test/dlf/dlftest.c:
    [r1.11,2006-10-04,waldron] corrected length variable for genstring
  * CASTOR2/test/stager/ClientTest.py:
    [r 1.4,2006-09-29,gtaur] added the test to see if stager_qry gives Error

 -- Giuseppe Lo Presti <giuseppe.lopresti@cern.ch>  Wed,  5 Oct 2006 17:30:00 +0200

castor (2.1.1-3) unstable; urgency=low

  * CASTOR2/debian/repackserver.init:
    [r 1.2,2006-09-27,itglp] Removed duplicated line
  * CASTOR2/rfio/rfio_HsmIf.c:
    [r1.19,2006-09-27,gtaur] fix in use_castor2_api()
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.154,2006-09-27,felixehm] commented retrievement of segment information for future tape-optimised
    [r1.154,2006-09-27,felixehm] reading order, since the Ctape_sort(..) hasn't been implemented.
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.24,2006-09-27,felixehm] fixed strcmp bug. logic was therefore not working correctly
  * CASTOR2/stager/stager_db_service.c:
    [r1.148,2006-09-27,sponcec3] Fixed some messages by adding the file name

 -- Giuseppe Lo Presti <giuseppe.lopresti@cern.ch>  Wed, 27 Sep 2006 16:32:32 +0200

castor (2.1.1-2) unstable; urgency=low

  * <Packaging>: Repack2 is now fully included
  * CASTOR2/castor/cleaning/CleaningDaemon.cpp:
    [r1.10,2006-09-25,sponcec3] Fixed typo in a comment
  * CASTOR2/castor/db/IDbResultSet.hpp:
    [r 1.3,2006-09-21,felixehm] Fixed bug: Destructor of concrete Resultset and Statement was never called
    [r 1.3,2006-09-21,felixehm] therefore the connection not closed.
  * CASTOR2/castor/db/IDbStatement.hpp:
    [r 1.4,2006-09-21,felixehm] Fixed bug: Destructor of concrete Resultset and Statement was never called
    [r 1.4,2006-09-21,felixehm] therefore the connection not closed.
  * CASTOR2/castor/db/analyze/cleanDiskCopyReplicas.sql:
    [r 1.7,2006-09-25,sponcec3] Take status of DiskServer and FileSystems into account
  * CASTOR2/castor/db/cnv/DbRepackSegmentCnv.cpp:
    [r 1.9,2006-09-22,felixehm] Added new fields for storing location on old tape for recovering.
  * CASTOR2/castor/db/cnv/DbRepackSegmentCnv.hpp:
    [r 1.9,2006-09-22,felixehm] Added new fields for storing location on old tape for recovering.
  * CASTOR2/castor/db/newora/OraCnvSvc.hpp:
    [r 1.6,2006-09-22,itglp] Fixed wrong signature
  * CASTOR2/castor/db/ora/OraGCSvc.cpp:
    [r1.15,2006-09-21,itglp] Fixed' selectFiles2Delete to meet latest SQL code
  * CASTOR2/castor/db/ora/OraRepackSegmentCnv.cpp:
    [r 1.9,2006-09-22,felixehm] Added new fields for storing location on old tape for recovering.
  * CASTOR2/castor/db/ora/OraRepackSegmentCnv.hpp:
    [r 1.8,2006-09-22,felixehm] Added new fields for storing location on old tape for recovering.
  * CASTOR2/castor/db/ora/OraTapeSvc.cpp:
    [r1.15,2006-09-21,felixehm] removed not necessary ResultSet
    [r1.15,2006-09-21,felixehm] fixed setting of the output parameter
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.309,2006-09-26,sponcec3] Fixed a missing delete from id2type in resetStream
    [r1.308,2006-09-26,gtaur] to avoid that PutDone waits on the prepareToPut
    [r1.307,2006-09-26,sponcec3] Fixed the cleaning of PutDone requests in case of ORACLE error in the PutDoneStart
    [r1.306,2006-09-26,sponcec3] Removing a deadlock in the updateFsFileOpen/Close methods
    [r1.305,2006-09-25,itglp] Added PrepareTo{Put,Update} to the set of requests checked in internalStageQuery
    [r1.305,2006-09-25,itglp] Fixed declaration of checkFileForRepack
    [r1.304,2006-09-21,felixehm] Fixed checkFileForRepack PL/SQL: the old repackvid wasn't returned correctly.
    [r1.303,2006-09-21,itglp] Fixed selectFiles2Delete to match the cursor in OraGCSvc.cpp.
    [r1.302,2006-09-21,itglp] Let get requests go through even when the diskpool is full over the hard limit.
    [r1.302,2006-09-21,itglp] Added ROW MOVEMENT to SubRequest.
  * CASTOR2/castor/dlf/Dlf.cpp:
    [r 1.4,2006-09-25,sponcec3] Adapted the C++ API of DLF to Dennis' improvments concerning additions of new messages on the fly
  * CASTOR2/castor/dlf/Dlf.hpp:
    [r 1.3,2006-09-25,sponcec3] Adapted the C++ API of DLF to Dennis' improvments concerning additions of new messages on the fly
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
    [r1.18,2006-09-22,felixehm] Cleaned code
    [r1.18,2006-09-22,felixehm] Segment information is kept, even if the tape is archived
  * CASTOR2/castor/repack/FileListHelper.cpp:
    [r1.18,2006-09-22,felixehm] Segment Information is stored with the RepackSegment to keep recover information
    [r1.18,2006-09-22,felixehm] in case the old tape has to be restored.
  * CASTOR2/castor/repack/RepackCleaner.cpp:
    [r 1.9,2006-09-26,felixehm] RepackFileStager is now restarting a repack process (moved from RepackCleaner)
    [r 1.9,2006-09-26,felixehm] fixed mem leak in RepackFileStager : after sending the stager request the
    [r 1.9,2006-09-26,felixehm] subrequest weren't deleted.
  * CASTOR2/castor/repack/RepackCleaner.hpp:
    [r 1.4,2006-09-26,felixehm] RepackFileStager is now restarting a repack process (moved from RepackCleaner)
    [r 1.4,2006-09-26,felixehm] fixed mem leak in RepackFileStager : after sending the stager request the
    [r 1.4,2006-09-26,felixehm] subrequest weren't deleted.
  * CASTOR2/castor/repack/RepackClient.cpp:
  * CASTOR2/castor/repack/RepackClient.hpp:
    [2006-09-22,felixehm] Modified output, now the total filesize of a tape is shown
  * CASTOR2/castor/repack/RepackFileStager.cpp:
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [2006-09-26,felixehm] RepackFileStager is now restarting a repack process (moved from RepackCleaner)
    [2006-09-26,felixehm] fixed mem leak in RepackFileStager : after sending the stager request the
    [2006-09-26,felixehm] subrequest weren't deleted.
  * CASTOR2/castor/repack/RepackMonitor.cpp:
    [r 1.6,2006-09-25,felixehm] fixed clear after deletion of pointer.
  * CASTOR2/castor/repack/RepackSegment.cpp:
  * CASTOR2/castor/repack/RepackSegment.hpp:
    [r1.11,2006-09-22,felixehm] Added new fields for storing location on old tape for recovering.
  * CASTOR2/castor/repack/repack.man:
    [r 1.3,2006-09-22,felixehm] fixed mistakes
    [r 1.2,2006-09-19,felixehm] Corrected some mistakes
  * CASTOR2/castor/repack/repack.sysconfig:
    [r 1.2,2006-09-22,itglp] Renamed sysconfig for repack
  * CASTOR2/castor/rh/RHThread.cpp:
    [r 1.5,2006-09-25,felixehm] Added StageRepackRequest for repack request handling
  * CASTOR2/castor/server/BaseDaemon.cpp:
    [r 1.9,2006-09-25,sponcec3] Removing unneeded include
  * CASTOR2/castor/stager/ITapeSvc.h:
  * CASTOR2/castor/stager/ITapeSvcCInt.cpp:
    [r 1.7,2006-09-21,felixehm] Changed passing parameter of checkFileForRepack
    [r 1.7,2006-09-21,felixehm] considering char-array memory allocation error
  * CASTOR2/codeGeneration/Repack.xmi:
    [r 1.5,2006-09-22,felixehm] Added new fields blockid and fseq for emergency recovering
  * CASTOR2/config/Project.tmpl:
    [r1.57,2006-09-25,sponcec3] Build target for the new rmmaster
  * CASTOR2/config/site.def:
    [r1.91,2006-09-25,itglp] Use new Oracle API by default
  * CASTOR2/debian/castor-lib-oracle.install.perm:
    [r 1.2,2006-09-25,itglp] Use new Oracle API by default
  * CASTOR2/debian/castor-stager-server.postinst:
    [r 1.8,2006-09-18,sponcec3] Fixed non starting cleaning daemon
  * CASTOR2/dlf/doc/index.html:
    [r 1.7,2006-09-25,waldron] added instructions for importing partitions into the DLF schema
  * CASTOR2/dlf/scripts/oracle/dlf_oracle_create.sql:
    [r 1.3,2006-09-25,waldron] support for exporting partitions using oracle data pump
    [r 1.2,2006-09-21,waldron] replaced 'exec dlf_partition;' for non sqlplus safe alternative
  * CASTOR2/dlf/web/config.php:
    [r 1.4,2006-09-25,waldron] minor alteration to partition count display to take into account that partitions aren't dropped but truncated
  * CASTOR2/dlf/web/db/oracle.php:
    [r 1.3,2006-09-25,waldron] minor alteration to partition count display to take into account that partitions aren't dropped but truncated
  * CASTOR2/h/rtcpcld_messages.h:
    [r1.46,2006-09-21,felixehm] Added new Message for migration. If the written file was in a repack process
    [r1.46,2006-09-21,felixehm] and the old vid for replacing segment information was sucessfully
    [r1.46,2006-09-21,felixehm] retrieved, it is shown as a system message.
  * CASTOR2/job/stagerJob.c:
    [r1.154,2006-09-26,riojac3] Modification to invoke xrootd script in the child process
  * CASTOR2/maketar.sh:
    [r1.50,2006-09-22,itglp] Compile Repack2 too by default
  * CASTOR2/rfio/RfioTURL.c:
    [r1.21,2006-09-25,gtaur] weird behaviour with svcclass not set fixed
    [r1.20,2006-09-21,gtaur] fixed problem to retrieve castor version from stagetype.conf
  * CASTOR2/rfio/rfio_HsmIf.c:
    [r1.18,2006-09-21,gtaur] fixed problem to retrieve castor version from stagetype.conf
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.153,2006-09-25,felixehm] Readded segment adding passage for sorting, which was removed by mistake.
    [r1.152,2006-09-21,felixehm] changed signature of rtcpcld_checkFileForRepack function
    [r1.152,2006-09-21,felixehm] activated repack ability
    [r1.152,2006-09-21,felixehm] removed retrievement of full Subrequest, now (in case of a repack file
    [r1.152,2006-09-21,felixehm] the old vid from the stager catalogue is returned)
  * CASTOR2/rtcopy/rtcpcldNsInterface.c:
    [r1.36,2006-09-26,hcacote] changing compression factor for IBM3592 in order to activate NVC bit
    [r1.35,2006-09-21,felixehm] changed signature of rtcpcld_checkFileForRepack function
    [r1.35,2006-09-21,felixehm] activated repack ability
    [r1.35,2006-09-21,felixehm] removed retrievement of full Subrequest, now (in case of a repack file
    [r1.35,2006-09-21,felixehm] the old vid from the stager catalogue is returned)
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.23,2006-09-26,hcacote] changing compression factor for IBM3592 in order to activate NVC bit
  * CASTOR2/scheduler/LSF/schmod_castor.cpp:
    [r 1.2,2006-09-25,sponcec3] Adapted implementation to new shared memory code
  * CASTOR2/stager/stager_client_api_common.cpp:
    [r1.25,2006-09-25,felixehm] commented function call of free_subrequestquery_resp, since
    [r1.25,2006-09-25,felixehm] the stage_requestquery_resp struct don't contain any fields to free extra.
    [r1.24,2006-09-25,felixehm] fixed mem leaks in :
    [r1.24,2006-09-25,felixehm] free_filequery_resp : stage_filequery_resp
    [r1.24,2006-09-25,felixehm] free_requestquery_resp : stage_requestquery_resp
  * CASTOR2/stager/stager_db_service.c:
    [r1.147,2006-09-26,riojac3] fill the fileIF in the IOResponse for xrootd
    [r1.146,2006-09-21,itglp] Fixed leaking of stageRm request left in READY. Now they're archived
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.44,2006-09-26,riojac3] add fileID to the response so client will receive this field filled (xrootd)
    [r1.43,2006-09-25,itglp] Take svcClassName = '*' as wildcard (the same as '') for stager_qry
  * CASTOR2/test/UtilityForCastorTest.py:
    [r 1.4,2006-09-26,gtaur] new way to use the threads

 -- Giuseppe Lo Presti <giuseppe.lopresti@cern.ch>  Mon, 26 Sep 2006 17:45:00 +0200

castor (2.1.1-1) unstable; urgency=low

  * CASTOR2/dlf/server.c:
    [r 1.9,2006-09-19,waldron] use MAX_CLIENTS definition instead of hardcoded value
  * CASTOR2/dlf/web/config.php:
    [r 1.3,2006-09-19,waldron] update of statuses
  * CASTOR2/dlf/web/dbview.php:
    [r 1.2,2006-09-19,waldron] fixed positioning of results table under firefox

 -- Giuseppe Lo Presti <giuseppe.lopresti@cern.ch>  Tue, 19 Sep 2006 15:15:00 +0200

castor (2.1.1-0) unstable; urgency=low

  * <Packaging>: in this release Repack2 and VDQM2 are not packaged, but their changelog is here.
  * CASTOR2/Imakefile:
    [r1.20,2006-08-01,sponcec3] Dropped the (very) old C gc code
  * CASTOR2/PACKAGING.howto:
    [r1.21,2006-08-24,riojac3] create directories on savannah
    [r1.20,2006-08-08,riojac3] How to create the volume in afs
    [r1.19,2006-07-10,itglp] Modified installation to AFS
    [r1.18,2006-07-08,itglp] Few more fixes for packaging out of a branch
    [r1.17,2006-06-21,sponcec3] Added some comments and the part on installing on AFS
    [r1.16,2006-06-12,itglp] Added procedure to make a release out of a bug fix branch (to be tested)
    [r1.15,2006-06-12,itglp] Modified usage of CASTOR.cvslogs and updated instructions accordingly
    [r1.14,2006-06-01,riojac3] Modification of minor issue (name of a directory, place to copy the SRPMs)
    [r1.13,2006-05-09,sponcec3] Added the list of ref platforms
    [r1.12,2006-05-09,sponcec3] Removed old stuff + added hints on how to make RPMS without being root
  * CASTOR2/castor/BaseCnvSvc.cpp:
    [r1.19,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/BaseCnvSvc.hpp:
    [r1.15,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/Constants.cpp:
    [r1.34,2006-08-18,gtaur] added object type for new response
  * CASTOR2/castor/Constants.hpp:
    [r1.64,2006-08-25,felixehm] Added new Stager Request : StageRepackRequest
    [r1.63,2006-08-22,felixehm] Removed entry OldSubRequest Converter from Imakefile and the converter
    [r1.63,2006-08-22,felixehm] itself
    [r1.62,2006-08-18,gtaur] added object type for new response
    [r1.61,2006-05-11,felixehm] Added new Stream converter for old SubRequests
    [r1.61,2006-05-11,felixehm] changed sql Procedure filerecalled:
    [r1.61,2006-05-11,felixehm] whenever a file is staged in as a repack request (the new subrequest field
    [r1.61,2006-05-11,felixehm] repackvid is set with the origin tape), the diskcopy status is
    [r1.61,2006-05-11,felixehm] directly put into CANBEMIGRATED.
  * CASTOR2/castor/IAddress.h:
    [r 1.8,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/IAddress.hpp:
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/ICnvSvc.hpp:
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/IConverter.hpp:
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/IObject.h:
    [r1.11,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/IObject.hpp:
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/IObjectCInt.cpp:
  * CASTOR2/castor/Imakefile:
    [r1.132,2006-08-25,felixehm] Added new Stager Request : StageRepackRequest
    [r1.131,2006-08-18,gtaur] new Response
    [r1.130,2006-07-21,sponcec3] Added new error code SegmentNotAccessible
    [r1.129,2006-05-11,felixehm] Added new Stream converter for old SubRequests
    [r1.129,2006-05-11,felixehm] changed sql Procedure filerecalled:
    [r1.129,2006-05-11,felixehm] whenever a file is staged in as a repack request (the new subrequest field
    [r1.129,2006-05-11,felixehm] repackvid is set with the origin tape), the diskcopy status is
    [r1.129,2006-05-11,felixehm] directly put into CANBEMIGRATED.
  * CASTOR2/castor/MessageAck.cpp:
  * CASTOR2/castor/MessageAck.h:
  * CASTOR2/castor/MessageAck.hpp:
  * CASTOR2/castor/MessageAckCInt.cpp:
  * CASTOR2/castor/cleaning/CleaningDaemon.cpp:
    [r 1.9,2006-05-02,itglp] Fixed call to addThreadPool due to changes in BaseServer.
  * CASTOR2/castor/db/DbCnvSvc.cpp:
    [r 1.3,2006-08-03,itglp] handleException() has finally found his place in ... OraCnvSvc
  * CASTOR2/castor/db/DbCnvSvc.hpp:
    [r 1.3,2006-08-03,itglp] Dropped 'generic' handleException
    [r 1.2,2006-08-02,itglp] Added a virtual handleException method - see OraCnvSvc
  * CASTOR2/castor/db/analyze/admin.sql:
    [r 1.3,2006-07-17,itglp] Added link to Oracle session handling (not SQL but admin related...)
  * CASTOR2/castor/db/analyze/cleanDiskCopyReplicas.sql:
    [r 1.6,2006-07-13,sponcec3] undo previous commit
    [r 1.5,2006-07-13,sponcec3] Fixed nullGCPolicy so that Invalid files are deleted
  * CASTOR2/castor/db/analyze/config.sql:
    [r 1.3,2006-05-09,itglp] Enhanced query on the file systems
  * CASTOR2/castor/db/castor_oracle_drop.sql:
    [r1.25,2006-08-18,gtaur] try for response modifications
    [r1.22,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.21,2006-07-13,sponcec3] Fixed nullGCPolicy so that Invalid files are deleted
    [r1.20,2006-06-12,itglp] Imported latest fixes in the SQL code (oracleTrailer.sql rev 1.274)
    [r1.19,2006-05-29,itglp] Removed a DROP INDEX statement leading to errors
    [r1.18,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/castor/db/castor_postgres_create.sql:
    [r1.15,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.14,2006-07-13,sponcec3] Fixed nullGCPolicy so that Invalid files are deleted
    [r1.13,2006-05-29,itglp] Imported modifications in oracleTrailer.sql up to version 1.267
    [r1.12,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/castor/db/castor_postgres_drop.sql:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-07-13,sponcec3] Fixed nullGCPolicy so that Invalid files are deleted
  * CASTOR2/castor/db/cnv/DbBaseAddressCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbBaseAddressCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbCastorFileCnv.cpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbCastorFileCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbClientCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbClientCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbClientIdentificationCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbClientIdentificationCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDeviceGroupNameCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDeviceGroupNameCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDisk2DiskCopyDoneRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDisk2DiskCopyDoneRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskCopyCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskCopyCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskPoolCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskPoolCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskPoolQueryCnv.cpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskPoolQueryCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskServerCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbDiskServerCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbErrorHistoryCnv.cpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbErrorHistoryCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFileClassCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFileClassCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFileSystemCnv.cpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFileSystemCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFiles2DeleteCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFiles2DeleteCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFilesDeletedCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFilesDeletedCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFilesDeletionFailedCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbFilesDeletionFailedCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGCFileCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGCFileCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGCLocalFileCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGCLocalFileCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGetUpdateDoneCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGetUpdateDoneCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGetUpdateFailedCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGetUpdateFailedCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGetUpdateStartRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbGetUpdateStartRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbMoverCloseRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbMoverCloseRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbPutDoneStartCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbPutDoneStartCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbPutFailedCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbPutFailedCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbPutStartRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbPutStartRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbQueryParameterCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbQueryParameterCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbRepackRequestCnv.cpp:
    [r 1.9,2006-09-06,felixehm] added pool name for repacking tape pools
    [r 1.8,2006-08-18,gtaur] try for response modifications
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.5,2006-05-29,felixehm] 
    [r 1.5,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.5,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.5,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.5,2006-05-29,felixehm] 
    [r 1.5,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.5,2006-05-29,felixehm] service class specified in the castor config file.
  * CASTOR2/castor/db/cnv/DbRepackRequestCnv.hpp:
    [r 1.8,2006-08-18,gtaur] try for response modifications
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.5,2006-05-29,felixehm] 
    [r 1.5,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.5,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.5,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.5,2006-05-29,felixehm] 
    [r 1.5,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.5,2006-05-29,felixehm] service class specified in the castor config file.
  * CASTOR2/castor/db/cnv/DbRepackSegmentCnv.cpp:
    [r 1.8,2006-08-18,gtaur] try for response modifications
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-22,felixehm] Added new attribute : copyno
    [r 1.5,2006-05-22,felixehm] This is important for repacking 1 file with two different tapecopy at one time
    [r 1.5,2006-05-22,felixehm] The copyno is also part of an index with the fileid in the repack DB.
  * CASTOR2/castor/db/cnv/DbRepackSegmentCnv.hpp:
    [r 1.8,2006-08-18,gtaur] try for response modifications
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-22,felixehm] Added new attribute : copyno
    [r 1.5,2006-05-22,felixehm] This is important for repacking 1 file with two different tapecopy at one time
    [r 1.5,2006-05-22,felixehm] The copyno is also part of an index with the fileid in the repack DB.
  * CASTOR2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
    [r 1.9,2006-08-18,gtaur] try for response modifications
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-22,felixehm] Added new fields for statistics. The Repacking process is monitored by the Repack Monitor
    [r 1.6,2006-05-22,felixehm] and the numbers of staging and migrating files are stored with the RepackSubRequest.
    [r 1.6,2006-05-22,felixehm] The User (and Repack itself) is now able to check the status of a repack process.
  * CASTOR2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
    [r 1.9,2006-08-18,gtaur] try for response modifications
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-22,felixehm] Added new fields for statistics. The Repacking process is monitored by the Repack Monitor
    [r 1.6,2006-05-22,felixehm] and the numbers of staging and migrating files are stored with the RepackSubRequest.
    [r 1.6,2006-05-22,felixehm] The User (and Repack itself) is now able to check the status of a repack process.
  * CASTOR2/castor/db/cnv/DbSegmentCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbSegmentCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbSetFileGCWeightCnv.cpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbSetFileGCWeightCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageAbortRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageAbortRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageFileQueryRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageFileQueryRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageFindRequestRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageFindRequestRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageGetNextRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageGetNextRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageGetRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageGetRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePrepareToGetRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePrepareToGetRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePrepareToPutRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePrepareToPutRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePrepareToUpdateRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePrepareToUpdateRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePutDoneRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePutDoneRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePutNextRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePutNextRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePutRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStagePutRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageReleaseFilesRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageReleaseFilesRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageRequestQueryRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageRequestQueryRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageRmRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageRmRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageUpdateNextRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageUpdateNextRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageUpdateRequestCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStageUpdateRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStreamCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbStreamCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbSubRequestCnv.cpp:
    [r 1.9,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.8,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r 1.7,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.11,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.11,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
  * CASTOR2/castor/db/cnv/DbSubRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbSvcClassCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbSvcClassCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeAccessSpecificationCnv.cpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeAccessSpecificationCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeCnv.hpp:
    [r 1.4,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.3,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeCopyCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeCopyCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeDriveCnv.cpp:
    [r 1.9,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.8,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeDriveCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeDriveCompatibilityCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeDriveCompatibilityCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeDriveDedicationCnv.cpp:
    [r 1.9,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.10,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/cnv/DbTapeDriveDedicationCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapePoolCnv.cpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapePoolCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeRequestCnv.cpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeRequestCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeServerCnv.cpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/DbTapeServerCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/cnv/Imakefile:
    [r 1.7,2006-08-25,felixehm] Added new Stager Request : StageRepackRequest
  * CASTOR2/castor/db/newora/OraCnvSvc.cpp:
    [r 1.9,2006-08-03,itglp] Moved handleException() to OraCommonSvc
    [r 1.8,2006-08-02,itglp] One more fix for handleException
    [r 1.7,2006-08-02,itglp] Imported modifications to recover after a dropped db connection
    [r1.10,2006-08-03,itglp] handleException() has finally found his place in ... OraCnvSvc
  * CASTOR2/castor/db/newora/OraCnvSvc.hpp:
    [r 1.5,2006-08-03,itglp] handleException() has finally found his place in ... OraCnvSvc
    [r 1.4,2006-08-03,itglp] Moved handleException() to OraCommonSvc
    [r 1.3,2006-08-02,itglp] One more fix for handleException
    [r 1.2,2006-08-02,itglp] Imported modifications to recover after a dropped db connection
  * CASTOR2/castor/db/newora/OraCommonSvc.cpp:
    [r 1.9,2006-08-03,itglp] handleException() has finally found his place in ... OraCnvSvc
    [r 1.8,2006-08-03,itglp] Moved handleException() to OraCommonSvc
    [r 1.7,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-02,itglp] Imported modifications to recover after a dropped db connection
  * CASTOR2/castor/db/newora/OraCommonSvc.hpp:
    [r 1.8,2006-08-03,itglp] handleException() has finally found his place in ... OraCnvSvc
    [r 1.7,2006-08-03,itglp] Moved handleException() to OraCommonSvc
    [r 1.6,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-02,itglp] Imported modifications to recover after a dropped db connection
  * CASTOR2/castor/db/newora/OraResultSet.cpp:
    [r 1.2,2006-08-02,itglp] Imported modifications to recover after a dropped db connection
  * CASTOR2/castor/db/newora/OraStatement.cpp:
    [r 1.3,2006-08-02,itglp] Imported modifications to recover after a dropped db connection
  * CASTOR2/castor/db/ora/Imakefile:
    [r1.60,2006-08-25,felixehm] Added new Stager Request : StageRepackRequest
  * CASTOR2/castor/db/ora/OraBaseAddressCnv.cpp:
    [r 1.9,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.13,2006-08-02,itglp] One more fix for handleException
    [r1.10,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraBaseAddressCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraBaseObj.cpp:
    [r 1.9,2006-08-03,gtaur] now it compiles also without new ora
    [r 1.8,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraBaseObj.hpp:
    [r 1.8,2006-08-03,gtaur] now it compiles also without new ora
    [r 1.7,2006-08-02,gtaur] solved conflict with giuseppe ...
    [r 1.6,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraCastorFileCnv.cpp:
    [r1.45,2006-08-02,itglp] One more fix for handleException
    [r1.42,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.41,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraCastorFileCnv.hpp:
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraCleanSvc.cpp:
    [r 1.7,2006-08-02,gtaur] solved conflict with giuseppe ...
    [r 1.6,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraCleanSvc.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraClientCnv.cpp:
    [r1.36,2006-08-02,itglp] One more fix for handleException
    [r1.33,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.32,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraClientCnv.hpp:
    [r1.18,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.17,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraClientIdentificationCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraClientIdentificationCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraCnvSvc.cpp:
    [r1.59,2006-08-03,gtaur] now it compiles also without new ora
    [r1.58,2006-08-03,gtaur] back to the previous one
    [r1.57,2006-08-02,itglp] One more fix for handleException
    [r1.56,2006-08-02,gtaur] solved conflict with giuseppe ...
    [r1.55,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
    [r1.54,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraCnvSvc.hpp:
    [r1.26,2006-08-03,itglp] Once again removed handleException...
    [r1.25,2006-08-03,gtaur] double declaration of handleException removed
    [r1.24,2006-08-02,itglp] One more fix for handleException
    [r1.23,2006-08-02,gtaur] solved conflict with giuseppe ...
    [r1.22,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
    [r1.21,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraCommonSvc.cpp:
    [r 1.9,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
  * CASTOR2/castor/db/ora/OraDeviceGroupNameCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDeviceGroupNameCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDisk2DiskCopyDoneRequestCnv.cpp:
    [r1.16,2006-08-02,itglp] One more fix for handleException
    [r1.13,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.12,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDisk2DiskCopyDoneRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskCopyCnv.cpp:
    [r1.46,2006-08-02,itglp] One more fix for handleException
    [r1.43,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.42,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskCopyCnv.hpp:
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskPoolCnv.cpp:
    [r1.41,2006-08-02,itglp] One more fix for handleException
    [r1.38,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.37,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskPoolCnv.hpp:
    [r1.18,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.17,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskPoolQueryCnv.cpp:
    [r 1.6,2006-08-02,itglp] One more fix for handleException
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskPoolQueryCnv.hpp:
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskServerCnv.cpp:
    [r1.38,2006-08-02,itglp] One more fix for handleException
    [r1.35,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.34,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraDiskServerCnv.hpp:
    [r1.16,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.15,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraErrorHistoryCnv.cpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.11,2006-08-02,itglp] One more fix for handleException
  * CASTOR2/castor/db/ora/OraErrorHistoryCnv.hpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFSSvc.cpp:
    [r 1.5,2006-08-02,gtaur] handle Exception now in OraCnvSvc
    [r 1.4,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraFileClassCnv.cpp:
    [r1.32,2006-08-02,itglp] One more fix for handleException
    [r1.29,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.28,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFileClassCnv.hpp:
    [r1.18,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.17,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFileSystemCnv.cpp:
    [r1.45,2006-08-02,itglp] One more fix for handleException
    [r1.42,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.41,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFileSystemCnv.hpp:
    [r1.17,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.16,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFiles2DeleteCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFiles2DeleteCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFilesDeletedCnv.cpp:
    [r 1.9,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.8,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.12,2006-08-02,itglp] One more fix for handleException
  * CASTOR2/castor/db/ora/OraFilesDeletedCnv.hpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFilesDeletionFailedCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraFilesDeletionFailedCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGCFileCnv.cpp:
    [r 1.8,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGCFileCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGCLocalFileCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGCLocalFileCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGetUpdateDoneCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGetUpdateDoneCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGetUpdateFailedCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGetUpdateFailedCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGetUpdateStartRequestCnv.cpp:
    [r1.18,2006-08-02,itglp] One more fix for handleException
    [r1.15,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraGetUpdateStartRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraJobSvc.cpp:
    [r 1.9,2006-07-13,sponcec3] Fixed nullGCPolicy so that Invalid files are deleted
    [r1.14,2006-08-02,gtaur] handle Exception now in OraCnvSvc
    [r1.13,2006-08-02,itglp] Moved handleException() from OraBaseObj to OraCnvSvc
    [r1.12,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.11,2006-07-21,sponcec3] Used new error code SegmentNotAccessible
    [r1.10,2006-07-13,sponcec3] undo previous commit
  * CASTOR2/castor/db/ora/OraMoverCloseRequestCnv.cpp:
    [r1.18,2006-08-02,itglp] One more fix for handleException
    [r1.15,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraMoverCloseRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraPutDoneStartCnv.cpp:
    [r 1.8,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraPutDoneStartCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraPutFailedCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraPutFailedCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraPutStartRequestCnv.cpp:
    [r1.18,2006-08-02,itglp] One more fix for handleException
    [r1.15,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraPutStartRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraQueryParameterCnv.cpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.11,2006-08-02,itglp] One more fix for handleException
  * CASTOR2/castor/db/ora/OraQueryParameterCnv.hpp:
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
    [r1.37,2006-08-02,gtaur] handle Exception now in OraCnvSvc
    [r1.36,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.35,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraRepackRequestCnv.cpp:
    [r 1.9,2006-09-06,felixehm] added pool name for repacking tape pools
    [r 1.7,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.4,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.4,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.4,2006-05-29,felixehm] service class specified in the castor config file.
  * CASTOR2/castor/db/ora/OraRepackRequestCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.4,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.4,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.4,2006-05-29,felixehm] service class specified in the castor config file.
  * CASTOR2/castor/db/ora/OraRepackSegmentCnv.cpp:
    [r 1.7,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-22,felixehm] Added new attribute : copyno
    [r 1.4,2006-05-22,felixehm] This is important for repacking 1 file with two different tapecopy at one time
    [r 1.4,2006-05-22,felixehm] The copyno is also part of an index with the fileid in the repack DB.
  * CASTOR2/castor/db/ora/OraRepackSegmentCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-22,felixehm] Added new attribute : copyno
    [r 1.4,2006-05-22,felixehm] This is important for repacking 1 file with two different tapecopy at one time
    [r 1.4,2006-05-22,felixehm] The copyno is also part of an index with the fileid in the repack DB.
  * CASTOR2/castor/db/ora/OraRepackSubRequestCnv.cpp:
    [r 1.9,2006-08-02,itglp] One more fix for handleException
    [r 1.7,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.6,2006-05-22,felixehm] Added new fields for statistics. The Repacking process is monitored by the Repack Monitor
    [r 1.6,2006-05-22,felixehm] and the numbers of staging and migrating files are stored with the RepackSubRequest.
    [r 1.6,2006-05-22,felixehm] The User (and Repack itself) is now able to check the status of a repack process.
  * CASTOR2/castor/db/ora/OraRepackSubRequestCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-22,felixehm] Added new fields for statistics. The Repacking process is monitored by the Repack Monitor
    [r 1.5,2006-05-22,felixehm] and the numbers of staging and migrating files are stored with the RepackSubRequest.
    [r 1.5,2006-05-22,felixehm] The User (and Repack itself) is now able to check the status of a repack process.
  * CASTOR2/castor/db/ora/OraSegmentCnv.cpp:
    [r1.39,2006-08-02,itglp] One more fix for handleException
    [r1.36,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.35,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSegmentCnv.hpp:
    [r1.15,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSetFileGCWeightCnv.cpp:
    [r 1.6,2006-08-02,itglp] One more fix for handleException
    [r 1.3,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.2,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSetFileGCWeightCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageAbortRequestCnv.cpp:
    [r1.26,2006-08-02,itglp] One more fix for handleException
    [r1.23,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.22,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageAbortRequestCnv.hpp:
    [r 1.9,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.10,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraStageFileQueryRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageFileQueryRequestCnv.hpp:
    [r1.12,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.11,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageFindRequestRequestCnv.cpp:
    [r1.29,2006-08-02,itglp] One more fix for handleException
    [r1.26,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.25,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageFindRequestRequestCnv.hpp:
    [r1.12,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.11,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageGetNextRequestCnv.cpp:
    [r1.31,2006-08-02,itglp] One more fix for handleException
    [r1.28,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.27,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageGetNextRequestCnv.hpp:
    [r1.15,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageGetRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageGetRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePrepareToGetRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePrepareToGetRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePrepareToPutRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePrepareToPutRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePrepareToUpdateRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePrepareToUpdateRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePutDoneRequestCnv.cpp:
    [r1.32,2006-08-02,itglp] One more fix for handleException
    [r1.29,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.28,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePutDoneRequestCnv.hpp:
    [r1.12,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.11,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePutNextRequestCnv.cpp:
    [r1.22,2006-08-02,itglp] One more fix for handleException
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePutNextRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePutRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagePutRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageReleaseFilesRequestCnv.cpp:
    [r1.24,2006-08-02,itglp] One more fix for handleException
    [r1.21,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.20,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageReleaseFilesRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageRequestQueryRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageRequestQueryRequestCnv.hpp:
    [r1.12,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.11,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageRmRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageRmRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageUpdateNextRequestCnv.cpp:
    [r1.22,2006-08-02,itglp] One more fix for handleException
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageUpdateNextRequestCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageUpdateRequestCnv.cpp:
    [r1.30,2006-08-02,itglp] One more fix for handleException
    [r1.27,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.26,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStageUpdateRequestCnv.hpp:
    [r1.11,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStagerSvc.cpp:
    [r1.187,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.187,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.185,2006-08-02,gtaur] handle Exception now in OraCnvSvc
    [r1.184,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.183,2006-05-11,felixehm] Added new Stream converter for old SubRequests
    [r1.183,2006-05-11,felixehm] changed sql Procedure filerecalled:
    [r1.183,2006-05-11,felixehm] whenever a file is staged in as a repack request (the new subrequest field
    [r1.183,2006-05-11,felixehm] repackvid is set with the origin tape), the diskcopy status is
    [r1.183,2006-05-11,felixehm] directly put into CANBEMIGRATED.
  * CASTOR2/castor/db/ora/OraStreamCnv.cpp:
    [r1.53,2006-08-02,itglp] One more fix for handleException
    [r1.50,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.49,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraStreamCnv.hpp:
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSubRequestCnv.cpp:
    [r1.49,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.49,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.47,2006-08-02,itglp] One more fix for handleException
    [r1.44,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.43,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.42,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
    [r1.41,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSubRequestCnv.hpp:
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSvcClassCnv.cpp:
    [r1.45,2006-08-02,itglp] One more fix for handleException
    [r1.42,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.41,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraSvcClassCnv.hpp:
    [r1.18,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.17,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeAccessSpecificationCnv.cpp:
    [r 1.8,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeAccessSpecificationCnv.hpp:
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeCnv.cpp:
    [r1.49,2006-08-02,itglp] One more fix for handleException
    [r1.46,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.45,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeCnv.hpp:
    [r1.22,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.21,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeCopyCnv.cpp:
    [r1.51,2006-08-02,itglp] One more fix for handleException
    [r1.48,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.47,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeCopyCnv.hpp:
    [r1.18,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.17,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeDriveCnv.cpp:
    [r1.25,2006-08-02,itglp] One more fix for handleException
    [r1.22,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.21,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeDriveCnv.hpp:
    [r1.16,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.15,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeDriveCompatibilityCnv.cpp:
    [r 1.8,2006-08-02,itglp] One more fix for handleException
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeDriveCompatibilityCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
    [r 1.9,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.8,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.12,2006-08-02,itglp] One more fix for handleException
  * CASTOR2/castor/db/ora/OraTapeDriveDedicationCnv.hpp:
    [r 1.5,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.4,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapePoolCnv.cpp:
    [r1.44,2006-08-02,itglp] One more fix for handleException
    [r1.41,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.40,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapePoolCnv.hpp:
    [r1.19,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.18,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeRequestCnv.cpp:
    [r1.16,2006-08-02,itglp] One more fix for handleException
    [r1.13,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r1.12,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeRequestCnv.hpp:
    [r 1.9,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.10,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/ora/OraTapeServerCnv.cpp:
    [r 1.9,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.8,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
    [r1.12,2006-08-02,itglp] One more fix for handleException
  * CASTOR2/castor/db/ora/OraTapeServerCnv.hpp:
    [r 1.6,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.5,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/db/ora/OraTapeSvc.cpp:
    [r 1.9,2006-08-02,gtaur] handle Exception now in OraCnvSvc
    [r 1.8,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
    [r 1.7,2006-05-15,felixehm] Altered error message in checkFileforRepack() if more than one candidate
    [r 1.7,2006-05-15,felixehm] is found. This should never(!) happen.
    [r 1.7,2006-05-15,felixehm] The maximum number of files for repack purpose in the stager catalogue, which
    [r 1.7,2006-05-15,felixehm] have a diskcopy in CANBEMIGRATED is 1!
    [r 1.6,2006-05-11,felixehm] sql Statement corrected, the subrequest.repackvid has to be null, so
    [r 1.6,2006-05-11,felixehm] normal" files can be staged.
    [r 1.5,2006-05-11,felixehm] Added new function to retrieve a subrequest, which belongs to a "repack" file.
    [r 1.5,2006-05-11,felixehm] This is needed for the rtcpclientd (rtcpcldCatalogueInterface.c) to check during
    [r 1.5,2006-05-11,felixehm] a migration, if the written segments have to replace or to be added in the NS.
    [r1.13,2006-08-18,felixehm] Commented checkFileForRepack code,now returning always NULL.
    [r1.13,2006-08-18,felixehm] This is temporariliy due to HEAD release of CVS code !!!
    [r1.13,2006-08-18,felixehm] new solution: no repackvid field in future
    [r1.12,2006-08-11,felixehm] removed method checkExistingTapeCopy
    [r1.11,2006-08-07,felixehm] modified checkFileForRepack SQL Statement: the subrequest is archived when
    [r1.11,2006-08-07,felixehm] statement was successfull.
    [r1.11,2006-08-07,felixehm] 
    [r1.11,2006-08-07,felixehm] added method checkExistingTapeCopy:
    [r1.11,2006-08-07,felixehm] used in migration part (MigHunter), when TapeCopies are added to Streams
    [r1.11,2006-08-07,felixehm] to ensure to have 2 TapeCopies on one tape.
  * CASTOR2/castor/db/ora/OraTapeSvc.hpp:
    [r 1.6,2006-08-11,felixehm] removed method checkExistingTapeCopy
    [r 1.5,2006-08-07,felixehm] modified checkFileForRepack SQL Statement: the subrequest is archived when
    [r 1.5,2006-08-07,felixehm] statement was successfull.
    [r 1.5,2006-08-07,felixehm] 
    [r 1.5,2006-08-07,felixehm] added method checkExistingTapeCopy:
    [r 1.5,2006-08-07,felixehm] used in migration part (MigHunter), when TapeCopies are added to Streams
    [r 1.5,2006-08-07,felixehm] to ensure to have 2 TapeCopies on one tape.
    [r 1.4,2006-05-11,felixehm] Added new function to retrieve a subrequest, which belongs to a "repack" file.
    [r 1.4,2006-05-11,felixehm] This is needed for the rtcpclientd (rtcpcldCatalogueInterface.c) to check during
    [r 1.4,2006-05-11,felixehm] a migration, if the written segments have to replace or to be added in the NS.
  * CASTOR2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.44,2006-08-18,gtaur] try for response modifications
    [r1.42,2006-08-02,gtaur] handle Exception now in OraCnvSvc
    [r1.41,2006-08-02,gtaur] solved conflict with giuseppe ...
    [r1.40,2006-08-01,gtaur] new way to handle exceptions to recove the db connection
  * CASTOR2/castor/db/oracleHeader_drop.sql:
    [r 1.6,2006-05-29,itglp] Removed a DROP INDEX statement leading to errors
    [r 1.5,2006-05-09,itglp] First release of an improved garbage collector, with a single db job and
    [r 1.5,2006-05-09,itglp] a queue of FileSystems to be garbage collected stored in the db.
  * CASTOR2/castor/dlf/Dlf.cpp:
    [r 1.3,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/castor/dlf/Dlf.hpp:
    [r 1.2,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/castor/dlf/Param.hpp:
    [r 1.4,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/castor/dlfbuf.h:
    [r1.12,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/castor/gc/GcDaemon.cpp:
    [r1.32,2006-07-18,waldron] dlf api integration
  * CASTOR2/castor/io/StreamAbortResponseCnv.cpp:
    [r 1.8,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamBaseCnv.cpp:
    [r1.14,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/io/StreamBaseCnv.hpp:
    [r1.10,2006-05-02,itglp] Implemented fillObj() with autocommit parameter as in fillRep()
  * CASTOR2/castor/io/StreamBasicResponseCnv.cpp:
    [r 1.7,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamDiskPoolQueryResponseCnv.cpp:
    [r 1.4,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamEndResponseCnv.cpp:
    [r1.18,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamFileQryResponseCnv.cpp:
    [r 1.5,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamFileResponseCnv.cpp:
    [r1.21,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamFindReqResponseCnv.cpp:
    [r 1.8,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamGCFilesResponseCnv.cpp:
    [r 1.7,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamGetUpdateStartResponseCnv.cpp:
    [r1.10,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamGetUpdateStartResponseCnv.hpp:
  * CASTOR2/castor/io/StreamIOResponseCnv.cpp:
    [r 1.9,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamRepackAckCnv.cpp:
    [r 1.3,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamRepackAckCnv.hpp:
    [r 1.3,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamRepackRequestCnv.cpp:
    [r 1.7,2006-09-06,felixehm] added pool name for repacking tape pools
    [r 1.6,2006-08-18,gtaur] modifications done to deal with the new response.
    [r 1.4,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.4,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.4,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.4,2006-05-29,felixehm] service class specified in the castor config file.
  * CASTOR2/castor/io/StreamRepackRequestCnv.hpp:
    [r 1.6,2006-08-18,gtaur] modifications done to deal with the new response.
    [r 1.4,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.4,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.4,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.4,2006-05-29,felixehm] 
    [r 1.4,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.4,2006-05-29,felixehm] service class specified in the castor config file.
  * CASTOR2/castor/io/StreamRepackSubRequestCnv.cpp:
    [r 1.7,2006-08-18,gtaur] modifications done to deal with the new response.
    [r 1.5,2006-05-22,felixehm] Added new attributes for Streaming part.
  * CASTOR2/castor/io/StreamRepackSubRequestCnv.hpp:
    [r 1.5,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamRequestQueryResponseCnv.cpp:
    [r 1.8,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamStartResponseCnv.cpp:
    [r 1.8,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamStringResponseCnv.cpp:
    [r1.18,2006-08-18,gtaur] modifications done to deal with the new response.
  * CASTOR2/castor/io/StreamSubRequestCnv.cpp:
    [r1.27,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.27,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.24,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.23,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/castor/query/DiskPoolQueryResponse.cpp:
    [r 1.6,2006-08-18,gtaur] try for response modifications
    [r 1.5,2006-08-07,itglp] Revert these classes back to previous version, and make gencastor generate
    [r 1.5,2006-08-07,itglp] the class with the correct clone() by adding the custom implementation in
    [r 1.5,2006-08-07,itglp] the .cpp_clone files.
  * CASTOR2/castor/query/DiskPoolQueryResponse.h:
    [r 1.4,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/query/DiskPoolQueryResponseCInt.cpp:
    [r 1.4,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/query/DiskServerDescription.cpp:
    [r 1.6,2006-08-18,gtaur] try for response modifications
    [r 1.5,2006-08-07,itglp] Revert these classes back to previous version, and make gencastor generate
    [r 1.5,2006-08-07,itglp] the class with the correct clone() by adding the custom implementation in
    [r 1.5,2006-08-07,itglp] the .cpp_clone files.
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
    [r1.17,2006-08-14,felixehm] removed requestToDo (not needed any more)
    [r1.17,2006-08-14,felixehm] fixed getTapeCopy method
    [r1.17,2006-08-14,felixehm] added commits (try to solve Oracle error 'Too many cursors open')
    [r1.16,2006-06-20,felixehm] The FOR UPDATE Statements however block other select statements, although
    [r1.16,2006-06-20,felixehm] the method used the FOR UPDATE did a already a commit. A new try for CC is the new
    [r1.16,2006-06-20,felixehm] lock und unlock method.
    [r1.15,2006-06-02,felixehm] New functionality:
    [r1.15,2006-06-02,felixehm] method to retrieve all SubRequests in a certain status at once.
    [r1.15,2006-06-02,felixehm] method to put subrequests in archived state
    [r1.15,2006-06-02,felixehm] method which is used internally by getSubRequests and getSubRequestsStatus
    [r1.15,2006-06-02,felixehm] avoid of redundant code)
    [r1.15,2006-06-02,felixehm] 
    [r1.15,2006-06-02,felixehm] changed sql statements:
    [r1.15,2006-06-02,felixehm] Added locking whenever a request or subrequest is to be
    [r1.15,2006-06-02,felixehm] fetched due to complete crashes of the server.
    [r1.15,2006-06-02,felixehm] 
    [r1.15,2006-06-02,felixehm] getSubRequest returns now a full Object
    [r1.15,2006-06-02,felixehm] filled with RepackRequest and Segments)
    [r1.15,2006-06-02,felixehm] 
    [r1.15,2006-06-02,felixehm] fixed some mem leaks
    [r1.15,2006-06-02,felixehm] 
    [r1.15,2006-06-02,felixehm] future use: added method for checking a specific TapeCopy
    [r1.15,2006-06-02,felixehm] used, to avoid double entry for same tapecopy. (repacking one
    [r1.15,2006-06-02,felixehm] file is allowed as long as it is another tapecopy)
    [r1.14,2006-05-22,felixehm] fixed storing of segments
    [r1.14,2006-05-22,felixehm] added new function: getTapeCopy which checks, if a tapecopy of a file
    [r1.14,2006-05-22,felixehm] is already in the repack process (no double recall).
    [r1.13,2006-05-04,felixehm] removed the stage_abortRequest from DB Helper.
    [r1.13,2006-05-04,felixehm] This is shifted to the caller of the remove method.
    [r1.13,2006-05-04,felixehm] RepackWorker::removeRequest(.)
  * CASTOR2/castor/repack/DatabaseHelper.hpp:
    [r1.13,2006-08-14,felixehm] removed requestToDo (not needed any more)
    [r1.13,2006-08-14,felixehm] fixed getTapeCopy method
    [r1.13,2006-08-14,felixehm] added commits (try to solve Oracle error 'Too many cursors open')
    [r1.12,2006-06-20,felixehm] The FOR UPDATE Statements however block other select statements, although
    [r1.12,2006-06-20,felixehm] the method used the FOR UPDATE did a already a commit. A new try for CC is the new
    [r1.12,2006-06-20,felixehm] lock und unlock method.
    [r1.11,2006-06-02,felixehm] New functionality:
    [r1.11,2006-06-02,felixehm] method to retrieve all SubRequests in a certain status at once.
    [r1.11,2006-06-02,felixehm] method to put subrequests in archived state
    [r1.11,2006-06-02,felixehm] method which is used internally by getSubRequests and getSubRequestsStatus
    [r1.11,2006-06-02,felixehm] avoid of redundant code)
    [r1.11,2006-06-02,felixehm] 
    [r1.11,2006-06-02,felixehm] changed sql statements:
    [r1.11,2006-06-02,felixehm] Added locking whenever a request or subrequest is to be
    [r1.11,2006-06-02,felixehm] fetched due to complete crashes of the server.
    [r1.11,2006-06-02,felixehm] 
    [r1.11,2006-06-02,felixehm] getSubRequest returns now a full Object
    [r1.11,2006-06-02,felixehm] filled with RepackRequest and Segments)
    [r1.11,2006-06-02,felixehm] 
    [r1.11,2006-06-02,felixehm] fixed some mem leaks
    [r1.11,2006-06-02,felixehm] 
    [r1.11,2006-06-02,felixehm] future use: added method for checking a specific TapeCopy
    [r1.11,2006-06-02,felixehm] used, to avoid double entry for same tapecopy. (repacking one
    [r1.11,2006-06-02,felixehm] file is allowed as long as it is another tapecopy)
    [r1.10,2006-05-22,felixehm] fixed storing of segments
    [r1.10,2006-05-22,felixehm] added new function: getTapeCopy which checks, if a tapecopy of a file
    [r1.10,2006-05-22,felixehm] is already in the repack process (no double recall).
  * CASTOR2/castor/repack/FileListHelper.cpp:
    [r1.17,2006-08-17,felixehm] modfied signature of FileListHelper method.
    [r1.17,2006-08-17,felixehm] Not neccessary to pass the cuuid, because the information can be taken
    [r1.17,2006-08-17,felixehm] from the already passed RepackSubRequest
    [r1.16,2006-06-20,felixehm] Added DLF logging message, if a file was already added to the repacksubrequest. This should not happen !
    [r1.15,2006-06-02,felixehm] removed stage_trace
    [r1.15,2006-06-02,felixehm] removed throw() declaration, now the caller has to catch the exceptions
    [r1.14,2006-05-22,felixehm] Now the new RepackSegment copyno is also set.
    [r1.13,2006-05-06,felixehm] ADDED check for valid segmentes which status is not 'D'
  * CASTOR2/castor/repack/FileListHelper.hpp:
    [r 1.8,2006-08-17,felixehm] modfied signature of FileListHelper method.
    [r 1.8,2006-08-17,felixehm] Not neccessary to pass the cuuid, because the information can be taken
    [r 1.8,2006-08-17,felixehm] from the already passed RepackSubRequest
    [r 1.7,2006-06-02,felixehm] removed stage_trace
    [r 1.7,2006-06-02,felixehm] removed throw() declaration, now the caller has to catch the exceptions
  * CASTOR2/castor/repack/Imakefile:
    [r1.12,2006-06-02,felixehm] added installation of repack client
    [r1.11,2006-05-22,felixehm] Added the new RepackMonitor
  * CASTOR2/castor/repack/RepackAck.cpp:
    [r 1.3,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackAck.hpp:
    [r 1.3,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackCleaner.cpp:
    [r 1.8,2006-08-17,felixehm] modfied signature of FileListHelper method.
    [r 1.8,2006-08-17,felixehm] Not neccessary to pass the cuuid, because the information can be taken
    [r 1.8,2006-08-17,felixehm] from the already passed RepackSubRequest
    [r 1.7,2006-08-07,felixehm] extracted common handling for retrieving the serviceClass information from a repackSubRequest into Tools
    [r 1.6,2006-07-04,felixehm] fixed bug : wrong port number was taken, due to non init of port value in stager_options.
    [r 1.6,2006-07-04,felixehm] more comments
    [r 1.6,2006-07-04,felixehm] new method which is only responsible for removing files from stager
    [r 1.6,2006-07-04,felixehm] logic now in 2 smaller methods
    [r 1.6,2006-07-04,felixehm] added prolog
    [r 1.5,2006-06-02,felixehm] improved cleanup procedure for a tape;
    [r 1.5,2006-06-02,felixehm] now the the file are cleaned from the stager and the subrequest is put to finished status ( not archived - this should be done in a seperate step).
    [r 1.4,2006-05-22,felixehm] implemented fully working cleaner module.
    [r 1.4,2006-05-22,felixehm] cleans the repacked files from stager
  * CASTOR2/castor/repack/RepackCleaner.hpp:
    [r 1.3,2006-07-04,felixehm] fixed bug : wrong port number was taken, due to non init of port value in stager_options.
    [r 1.3,2006-07-04,felixehm] more comments
    [r 1.3,2006-07-04,felixehm] new method which is only responsible for removing files from stager
    [r 1.3,2006-07-04,felixehm] logic now in 2 smaller methods
    [r 1.3,2006-07-04,felixehm] added prolog
    [r 1.2,2006-05-22,felixehm] implemented fully working cleaner module.
    [r 1.2,2006-05-22,felixehm] cleans the repacked files from stager
  * CASTOR2/castor/repack/RepackClient.cpp:
    [r1.16,2006-08-07,felixehm] changed status output with proper shown time
    [r1.15,2006-07-04,felixehm] added new restart command. This causes the repack process to start again (the stager request is send again);
    [r1.15,2006-07-04,felixehm] 
    [r1.15,2006-07-04,felixehm] added check: the user is questioned in case no service class is given.
    [r1.15,2006-07-04,felixehm] believe me: thats important! )
    [r1.14,2006-06-02,felixehm] added new functionality:
    [r1.14,2006-06-02,felixehm] user can now specify a target service class (thereby also a certain target tapepool).
    [r1.14,2006-06-02,felixehm] 
    [r1.14,2006-06-02,felixehm] improved the handling of the output.
    [r1.13,2006-05-22,felixehm] Changed the output to show the stats for a repack process
  * CASTOR2/castor/repack/RepackClient.hpp:
    [r1.10,2006-06-02,felixehm] added new functionality:
    [r1.10,2006-06-02,felixehm] user can now specify a target service class (thereby also a certain target tapepool).
    [r1.10,2006-06-02,felixehm] 
    [r1.10,2006-06-02,felixehm] improved the handling of the output.
  * CASTOR2/castor/repack/RepackCommonHeader.hpp:
    [r1.12,2006-07-04,felixehm] New header file to separate the command defines.
    [r1.12,2006-07-04,felixehm] 
    [r1.12,2006-07-04,felixehm] The RepackCommonHeader is also used to create the Magic Numbers List.
    [r1.12,2006-07-04,felixehm] We don't want to have the commands in this list.
    [r1.11,2006-06-02,felixehm] Added new Commands, still some of them are not implemented.
  * CASTOR2/castor/repack/RepackFileMigrator.cpp:
    [r 1.3,2006-05-23,felixehm] Not needed anymore. The files are automatically put into CANBEMIGRATED,
    [r 1.3,2006-05-23,felixehm] because the stager recognize the file as a repack one. After the file has
    [r 1.3,2006-05-23,felixehm] been recalled, the catalogue procedure putDone is executed.
    [r 1.3,2006-05-23,felixehm] So, there is no additional step necessary.
  * CASTOR2/castor/repack/RepackFileMigrator.hpp:
    [r 1.3,2006-05-23,felixehm] Not needed anymore. The files are automatically put into CANBEMIGRATED,
    [r 1.3,2006-05-23,felixehm] because the stager recognize the file as a repack one. After the file has
    [r 1.3,2006-05-23,felixehm] been recalled, the catalogue procedure putDone is executed.
    [r 1.3,2006-05-23,felixehm] So, there is no additional step necessary.
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r 1.9,2006-07-04,felixehm] Added prolog, no functional changements
    [r 1.8,2006-06-20,felixehm] The information for the service class for staging files is now taken from the server.
    [r 1.8,2006-06-20,felixehm] An bug was removed : crash due to an exception while fetching a subrequest in a certain status.
    [r 1.8,2006-06-20,felixehm] The exception from the method fom DatabaseHelper wasn't catched.
    [r 1.7,2006-06-02,felixehm] changed the throwing of exceptions. The stage_files(..) method should not catch exception. Instead of that the caller (run method) catches them. In case of this messages are written to DLF.
    [r 1.6,2006-06-02,felixehm] for staging the service class from the repackrequest is taken, otherwise the standard one from the castor config file is taken from the RepackServer.
    [r 1.6,2006-06-02,felixehm] 
    [r 1.6,2006-06-02,felixehm] fixed some memory issues
    [r 1.5,2006-05-22,felixehm] Added pointer to instanciating class (RepackServer)
    [r 1.5,2006-05-22,felixehm] 
    [r 1.5,2006-05-22,felixehm] Removed the part for reading the stager information from castor config file
    [r 1.5,2006-05-22,felixehm] now done by server)
    [r 1.4,2006-05-04,felixehm] Added vmgr_modifytape for changing the status of a tape after sending
    [r 1.4,2006-05-04,felixehm] the stage request to the stager.
    [r 1.4,2006-05-04,felixehm] We would like to be sure that this tape is not used for writing! Sometimes
    [r 1.4,2006-05-04,felixehm] we have the case that a tape still has free space and it is repacked. There
    [r 1.4,2006-05-04,felixehm] is a chance, that exactly this tape is then used for migration. This is not
    [r 1.4,2006-05-04,felixehm] intended
    [r1.12,2006-09-06,felixehm] Changed sending Request to new StageRepackRequest
    [r1.11,2006-08-17,felixehm] modfied signature of FileListHelper method.
    [r1.11,2006-08-17,felixehm] Not neccessary to pass the cuuid, because the information can be taken
    [r1.11,2006-08-17,felixehm] from the already passed RepackSubRequest
    [r1.10,2006-08-14,felixehm] added method to check for double tapecopy repackaging.
    [r1.10,2006-08-14,felixehm] corrected exception throwing
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [r 1.7,2006-09-06,felixehm] Changed sending Request to new StageRepackRequest
    [r 1.6,2006-08-14,felixehm] added method to check for double tapecopy repackaging.
    [r 1.6,2006-08-14,felixehm] corrected exception throwing
    [r 1.5,2006-06-20,felixehm] The information for the service class for staging files is now taken from the server.
    [r 1.5,2006-06-20,felixehm] An bug was removed : crash due to an exception while fetching a subrequest in a certain status.
    [r 1.5,2006-06-20,felixehm] The exception from the method fom DatabaseHelper wasn't catched.
    [r 1.4,2006-06-02,felixehm] added more comments for better understanding
    [r 1.3,2006-05-22,felixehm] Added pointer to instanciating class (RepackServer)
    [r 1.3,2006-05-22,felixehm] 
    [r 1.3,2006-05-22,felixehm] Removed the part for reading the stager information from castor config file
    [r 1.3,2006-05-22,felixehm] now done by server)
  * CASTOR2/castor/repack/RepackRequest.cpp:
    [r 1.9,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.9,2006-05-29,felixehm] 
    [r 1.9,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.9,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.9,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.9,2006-05-29,felixehm] 
    [r 1.9,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.9,2006-05-29,felixehm] service class specified in the castor config file.
    [r1.12,2006-09-06,felixehm] added field pool name for tape pool repacking
    [r1.11,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackRequest.hpp:
    [r 1.9,2006-05-29,felixehm] Changed field pool->serviceclass name.
    [r 1.9,2006-05-29,felixehm] 
    [r 1.9,2006-05-29,felixehm] This is the service class to where the file have to be written to. It is not
    [r 1.9,2006-05-29,felixehm] possible to specify directly the target tapes or tapepools, but we can use
    [r 1.9,2006-05-29,felixehm] the information stored in the service classes.
    [r 1.9,2006-05-29,felixehm] 
    [r 1.9,2006-05-29,felixehm] By default, the files are written to the tapepool belonging to the repack
    [r 1.9,2006-05-29,felixehm] service class specified in the castor config file.
    [r1.12,2006-09-06,felixehm] added field pool name for tape pool repacking
    [r1.11,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackSegment.cpp:
    [r 1.8,2006-05-22,felixehm] Added new attribute : copyno
    [r 1.8,2006-05-22,felixehm] This is important for repacking 1 file with two different tapecopy at one time
    [r 1.8,2006-05-22,felixehm] The copyno is also part of an index with the fileid in the repack DB.
    [r1.10,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackSegment.hpp:
    [r 1.8,2006-05-22,felixehm] Added new attribute : copyno
    [r 1.8,2006-05-22,felixehm] This is important for repacking 1 file with two different tapecopy at one time
    [r 1.8,2006-05-22,felixehm] The copyno is also part of an index with the fileid in the repack DB.
    [r1.10,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.18,2006-09-08,felixehm] Server now survives without CASTOR config file. user can set the variables in
    [r1.18,2006-09-08,felixehm] enviroment.
    [r1.17,2006-08-14,felixehm] Changed (added) Messages
    [r1.16,2006-08-07,felixehm] RepackWorker now also is created by passing a reference to the RepackServer
    [r1.15,2006-07-04,felixehm] New messages for Cleaner and Monitor.
    [r1.15,2006-07-04,felixehm] the Cleaner runs now as the Filestager every 10sec
    [r1.14,2006-06-20,felixehm] Added : polling time in enviroment/config file for cleaner and monitor
    [r1.13,2006-06-02,felixehm] Added new DLF Messages for RepackMonitor
    [r1.12,2006-05-22,felixehm] The server now keeps the information about the stager, nameserver, service class etc.
    [r1.12,2006-05-22,felixehm] which is used by some threads. Before this changement each module
    [r1.12,2006-05-22,felixehm] RepackWorker, RepackFileStager,..) tried to get this information on its own.
    [r1.12,2006-05-22,felixehm] This is not neccessary.
    [r1.12,2006-05-22,felixehm] The Modules have a pointer to the server which instanciates them, and they can
    [r1.12,2006-05-22,felixehm] ask the server.So the information is read once from the castor config file
    [r1.12,2006-05-22,felixehm] at the beginning and then whenever needed queried by the Modules.
  * CASTOR2/castor/repack/RepackServer.hpp:
    [r 1.9,2006-06-20,felixehm] Added : polling time in enviroment/config file for cleaner and monitor
    [r 1.8,2006-05-22,felixehm] The server now keeps the information about the stager, nameserver, service class etc.
    [r 1.8,2006-05-22,felixehm] which is used by some threads. Before this changement each module
    [r 1.8,2006-05-22,felixehm] RepackWorker, RepackFileStager,..) tried to get this information on its own.
    [r 1.8,2006-05-22,felixehm] This is not neccessary.
    [r 1.8,2006-05-22,felixehm] The Modules have a pointer to the server which instanciates them, and they can
    [r 1.8,2006-05-22,felixehm] ask the server.So the information is read once from the castor config file
    [r 1.8,2006-05-22,felixehm] at the beginning and then whenever needed queried by the Modules.
  * CASTOR2/castor/repack/RepackSubRequest.cpp:
    [r 1.8,2006-05-22,felixehm] Added new fields for statistics. The Repacking process is monitored by the Repack Monitor
    [r 1.8,2006-05-22,felixehm] and the numbers of staging and migrating files are stored with the RepackSubRequest.
    [r 1.8,2006-05-22,felixehm] The User (and Repack itself) is now able to check the status of a repack process.
    [r1.10,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackSubRequest.hpp:
    [r 1.8,2006-05-22,felixehm] Added new fields for statistics. The Repacking process is monitored by the Repack Monitor
    [r 1.8,2006-05-22,felixehm] and the numbers of staging and migrating files are stored with the RepackSubRequest.
    [r 1.8,2006-05-22,felixehm] The User (and Repack itself) is now able to check the status of a repack process.
    [r1.10,2006-08-18,gtaur] try for response modifications
  * CASTOR2/castor/repack/RepackWorker.cpp:
    [r1.21,2006-09-12,felixehm] added checkMultiRepack method for notifying the user in case a multirepack
    [r1.21,2006-09-12,felixehm] (two tapecopies for one file) are processed. If the second request arrives too
    [r1.21,2006-09-12,felixehm] late, it has to be restarted due to non created second tapecopy.
    [r1.20,2006-08-14,felixehm] Added reference to RepackServer in Contructor.
    [r1.19,2006-07-04,felixehm] Added function : restart of a repack process. Still this is not the optimum solution , because this just triggers the repack system to send the same StagePrepareToGet request again.
    [r1.19,2006-07-04,felixehm] So there will be 2 Subrequests for one file. One is waiting for the other one to be finished.
    [r1.19,2006-07-04,felixehm] Until now this is only available for debugging and test purpose.
    [r1.19,2006-07-04,felixehm] 
    [r1.19,2006-07-04,felixehm] future : the stage_abort request should be used to restart the preparetoget request)
    [r1.18,2006-06-20,felixehm] Changed method call for get SubRequestByVid(). Now it is possible to specify, whether the fetched object has to be filled with its segments or not. We need this for remove  as well as to find a tape. But in the case of removal, we need the segments.
    [r1.17,2006-06-02,felixehm] new functionality:
    [r1.17,2006-06-02,felixehm] archive finished repack processes
    [r1.17,2006-06-02,felixehm] 
    [r1.17,2006-06-02,felixehm] the removeRequest (command sent by user) method, now doesn't delete the subrequest direktly, but changes the status into READYFORCLEANUP, so that the RepackCleaner can remove the process.
    [r1.17,2006-06-02,felixehm] 
    [r1.17,2006-06-02,felixehm] getStatus(..) now sends also the RepackRequest corresponding
    [r1.17,2006-06-02,felixehm] to the queried RepackSubRequest.This means more details for the status.
    [r1.16,2006-05-22,felixehm] The Repack Monitor Service. It queries the stager for the files, with are on
    [r1.16,2006-05-22,felixehm] a actual repack process and gets their statistics. the user can have a summerised
    [r1.16,2006-05-22,felixehm] overview, what the state of a repack process is.
    [r1.16,2006-05-22,felixehm] The Monitor queries the stager using the stager query api.
    [r1.15,2006-05-06,felixehm] fixed throwing of exceptions
    [r1.15,2006-05-06,felixehm] now sending answer to client also for removal of tapes
  * CASTOR2/castor/repack/RepackWorker.hpp:
    [r1.16,2006-08-14,felixehm] Added reference to RepackServer in Contructor.
    [r1.15,2006-07-04,felixehm] Added function : restart of a repack process. Still this is not the optimum solution , because this just triggers the repack system to send the same StagePrepareToGet request again.
    [r1.15,2006-07-04,felixehm] So there will be 2 Subrequests for one file. One is waiting for the other one to be finished.
    [r1.15,2006-07-04,felixehm] Until now this is only available for debugging and test purpose.
    [r1.15,2006-07-04,felixehm] 
    [r1.15,2006-07-04,felixehm] future : the stage_abort request should be used to restart the preparetoget request)
    [r1.14,2006-06-02,felixehm] new functionality:
    [r1.14,2006-06-02,felixehm] archive finished repack processes
    [r1.14,2006-06-02,felixehm] 
    [r1.14,2006-06-02,felixehm] the removeRequest (command sent by user) method, now doesn't delete the subrequest direktly, but changes the status into READYFORCLEANUP, so that the RepackCleaner can remove the process.
    [r1.14,2006-06-02,felixehm] 
    [r1.14,2006-06-02,felixehm] getStatus(..) now sends also the RepackRequest corresponding
    [r1.14,2006-06-02,felixehm] to the queried RepackSubRequest.This means more details for the status.
    [r1.13,2006-05-22,felixehm] The Repack Monitor Service. It queries the stager for the files, with are on
    [r1.13,2006-05-22,felixehm] a actual repack process and gets their statistics. the user can have a summerised
    [r1.13,2006-05-22,felixehm] overview, what the state of a repack process is.
    [r1.13,2006-05-22,felixehm] The Monitor queries the stager using the stager query api.
    [r1.12,2006-05-06,felixehm] fixed throwing of exceptions
    [r1.12,2006-05-06,felixehm] now sending answer to client also for removal of tapes
  * CASTOR2/castor/repack/Tools.cpp:
    [r 1.4,2006-08-07,felixehm] extracted common handling for retrieving the serviceClass information from a repackSubRequest into Tools
    [r 1.3,2006-06-02,felixehm] new function to free a Repack Object. The function tries to delete
    [r 1.3,2006-06-02,felixehm] everything, which is in the Object.
    [r 1.2,2006-05-22,felixehm] Added new function which frees a stager response
  * CASTOR2/castor/repack/Tools.hpp:
    [r 1.4,2006-08-07,felixehm] extracted common handling for retrieving the serviceClass information from a repackSubRequest into Tools
    [r 1.3,2006-06-02,felixehm] new function to free a Repack Object. The function tries to delete
    [r 1.3,2006-06-02,felixehm] everything, which is in the Object.
    [r 1.2,2006-05-22,felixehm] Added new function which frees a stager response
  * CASTOR2/castor/replier/RequestReplier.cpp:
    [r1.26,2006-08-18,sponcec3] Set the request id in all responses
    [r1.25,2006-08-14,itglp] Log statistics as DEBUG and only every 10 minutes
  * CASTOR2/castor/replier/RequestReplier.h:
    [r 1.7,2006-08-18,sponcec3] Set the request id in all responses
  * CASTOR2/castor/replier/RequestReplier.hpp:
    [r 1.7,2006-08-18,sponcec3] Set the request id in all responses
  * CASTOR2/castor/replier/RequestReplierCInt.cpp:
    [r 1.7,2006-08-18,sponcec3] Set the request id in all responses
  * CASTOR2/castor/rh/AbortResponse.cpp:
  * CASTOR2/castor/rh/AbortResponse.h:
    [r1.11,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/AbortResponse.hpp:
  * CASTOR2/castor/rh/AbortResponseCInt.cpp:
    [r 1.9,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/BasicResponse.cpp:
  * CASTOR2/castor/rh/BasicResponse.h:
    [r 1.6,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/BasicResponse.hpp:
  * CASTOR2/castor/rh/BasicResponseCInt.cpp:
    [r 1.5,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/EndResponse.cpp:
  * CASTOR2/castor/rh/EndResponse.h:
    [r1.16,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/EndResponse.hpp:
  * CASTOR2/castor/rh/EndResponseCInt.cpp:
    [r1.11,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/FileQryResponse.cpp:
  * CASTOR2/castor/rh/FileQryResponse.h:
    [r 1.4,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/FileQryResponse.hpp:
  * CASTOR2/castor/rh/FileQryResponseCInt.cpp:
    [r 1.4,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/FileResponse.cpp:
  * CASTOR2/castor/rh/FileResponse.h:
    [r1.19,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/FileResponse.hpp:
  * CASTOR2/castor/rh/FileResponseCInt.cpp:
    [r1.14,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/FindReqResponse.cpp:
  * CASTOR2/castor/rh/FindReqResponse.h:
    [r1.11,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/FindReqResponse.hpp:
  * CASTOR2/castor/rh/FindReqResponseCInt.cpp:
    [r 1.9,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/GCFilesResponse.cpp:
  * CASTOR2/castor/rh/GCFilesResponse.h:
    [r 1.6,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/GCFilesResponse.hpp:
  * CASTOR2/castor/rh/GCFilesResponseCInt.cpp:
    [r 1.5,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/GetUpdateStartResponse.cpp:
  * CASTOR2/castor/rh/GetUpdateStartResponse.h:
    [r1.10,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/GetUpdateStartResponse.hpp:
  * CASTOR2/castor/rh/GetUpdateStartResponseCInt.cpp:
    [r 1.9,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/IOResponse.cpp:
  * CASTOR2/castor/rh/IOResponse.h:
    [r1.12,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/IOResponse.hpp:
  * CASTOR2/castor/rh/IOResponseCInt.cpp:
    [r1.12,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/RHThread.cpp:
    [r 1.4,2006-06-20,itglp] Downgraded two log messages from SYSTEM to DEBUG
  * CASTOR2/castor/rh/RequestQueryResponse.cpp:
  * CASTOR2/castor/rh/RequestQueryResponse.h:
    [r1.11,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/RequestQueryResponse.hpp:
  * CASTOR2/castor/rh/RequestQueryResponseCInt.cpp:
    [r 1.9,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/Response.cpp:
    [r 1.9,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/Response.h:
    [r 1.9,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/Response.hpp:
    [r 1.7,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/ResponseCInt.cpp:
    [r 1.7,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/Server.cpp:
    [r1.47,2006-07-18,waldron] dlf api integration
  * CASTOR2/castor/rh/StartResponse.cpp:
  * CASTOR2/castor/rh/StartResponse.h:
    [r 1.6,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/StartResponse.hpp:
  * CASTOR2/castor/rh/StartResponseCInt.cpp:
    [r 1.6,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/StringResponse.cpp:
  * CASTOR2/castor/rh/StringResponse.h:
    [r1.16,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/rh/StringResponse.hpp:
  * CASTOR2/castor/rh/StringResponseCInt.cpp:
    [r1.11,2006-08-18,gtaur] new Response generated
  * CASTOR2/castor/server/BaseDaemon.cpp:
    [r 1.8,2006-08-14,itglp] Implemented waitAllThreads. To be completed with code from stager.c
    [r 1.7,2006-07-18,waldron] dlf api integration
    [r 1.6,2006-05-02,itglp] Better handling of notification thread
  * CASTOR2/castor/server/BaseDaemon.hpp:
    [r 1.4,2006-08-14,itglp] Implemented waitAllThreads. To be completed with code from stager.c
  * CASTOR2/castor/server/BaseServer.cpp:
    [r1.14,2006-07-18,waldron] dlf api integration
    [r1.13,2006-05-02,itglp] Better handling of notification thread
  * CASTOR2/castor/server/BaseServer.hpp:
    [r 1.7,2006-08-14,itglp] Made private fields protected
    [r 1.6,2006-05-02,itglp] Better handling of notification thread
  * CASTOR2/castor/server/BaseThreadPool.hpp:
    [r1.10,2006-05-02,itglp] Better handling of notification thread
  * CASTOR2/castor/server/ListenerThreadPool.cpp:
    [r 1.5,2006-05-02,itglp] Better handling of notification thread
  * CASTOR2/castor/server/SignalThreadPool.cpp:
    [r1.11,2006-08-14,itglp] Fixed delete statement
    [r1.10,2006-05-02,itglp] Better handling of notification thread
  * CASTOR2/castor/server/SignalThreadPool.hpp:
    [r 1.9,2006-05-02,itglp] Better handling of notification thread
    [r1.10,2006-08-14,itglp] new function getActiveThreads()
  * CASTOR2/castor/stager/ITapeSvc.h:
    [r 1.5,2006-08-11,felixehm] removed method checkExistingTapeCopy
    [r 1.4,2006-08-07,felixehm] fixed wrong definition of struct Cstager_Stream
    [r 1.3,2006-08-07,felixehm] modified checkFileForRepack SQL Statement: the subrequest is archived when
    [r 1.3,2006-08-07,felixehm] statement was successfull.
    [r 1.3,2006-08-07,felixehm] 
    [r 1.3,2006-08-07,felixehm] added method checkExistingTapeCopy:
    [r 1.3,2006-08-07,felixehm] used in migration part (MigHunter), when TapeCopies are added to Streams
    [r 1.3,2006-08-07,felixehm] to ensure to have 2 TapeCopies on one tape.
    [r 1.2,2006-05-11,felixehm] Added new function to retrieve a subrequest, which belongs to a "repack" file.
    [r 1.2,2006-05-11,felixehm] This is needed for the rtcpclientd (rtcpcldCatalogueInterface.c) to check during
    [r 1.2,2006-05-11,felixehm] a migration, if the written segments have to replace or to be added in the NS.
  * CASTOR2/castor/stager/ITapeSvc.hpp:
    [r 1.4,2006-08-11,felixehm] removed method checkExistingTapeCopy
    [r 1.3,2006-08-07,felixehm] modified checkFileForRepack SQL Statement: the subrequest is archived when
    [r 1.3,2006-08-07,felixehm] statement was successfull.
    [r 1.3,2006-08-07,felixehm] 
    [r 1.3,2006-08-07,felixehm] added method checkExistingTapeCopy:
    [r 1.3,2006-08-07,felixehm] used in migration part (MigHunter), when TapeCopies are added to Streams
    [r 1.3,2006-08-07,felixehm] to ensure to have 2 TapeCopies on one tape.
    [r 1.2,2006-05-11,felixehm] Added new function to retrieve a subrequest, which belongs to a "repack" file.
    [r 1.2,2006-05-11,felixehm] This is needed for the rtcpclientd (rtcpcldCatalogueInterface.c) to check during
    [r 1.2,2006-05-11,felixehm] a migration, if the written segments have to replace or to be added in the NS.
  * CASTOR2/castor/stager/ITapeSvcCInt.cpp:
    [r 1.5,2006-08-11,felixehm] removed method checkExistingTapeCopy
    [r 1.4,2006-08-07,felixehm] added method checkExistingTapeCopy:
    [r 1.4,2006-08-07,felixehm] used in migration part (MigHunter), when TapeCopies are added to Streams
    [r 1.4,2006-08-07,felixehm] to ensure to have 2 TapeCopies on one tape.
    [r 1.3,2006-05-11,felixehm] Added new function to retrieve a subrequest, which belongs to a "repack" file.
    [r 1.3,2006-05-11,felixehm] This is needed for the rtcpclientd (rtcpcldCatalogueInterface.c) to check during
    [r 1.3,2006-05-11,felixehm] a migration, if the written segments have to replace or to be added in the NS.
  * CASTOR2/castor/stager/SubRequest.cpp:
    [r1.27,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.27,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.24,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.23,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/castor/stager/SubRequest.h:
    [r1.28,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.28,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.25,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.24,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/castor/stager/SubRequest.hpp:
    [r1.21,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.21,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.18,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.17,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/castor/stager/SubRequestCInt.cpp:
    [r1.21,2006-08-18,felixehm] Removed repackVid from SubRequest
    [r1.21,2006-08-18,felixehm] new solution will be a RepackRequest for the Stager
    [r1.18,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.17,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
  * CASTOR2/clips/migratorRetryPolicy.pl:
    [r 1.2,2006-07-10,sponcec3] Set nb retries to infinite
  * CASTOR2/codeGeneration/RH.xmi:
    [r1.128,2006-09-06,felixehm] Removed repackvid field from SubRequest
    [r1.127,2006-08-25,felixehm] Added new Stager Request : StageRepackRequest
    [r1.126,2006-08-18,gtaur] new field in castor::rh::Response class
    [r1.125,2006-08-08,itglp] Updated TapeCopy status diagram
    [r1.124,2006-07-04,felixehm] Added new Status for the Stager SubRequest. This is needed for the handling
    [r1.124,2006-07-04,felixehm] of a file in a repakc process. In the recaller part, the new status is set,
    [r1.124,2006-07-04,felixehm] instead of archiving the subrequest. In case of a repack the subrequest life
    [r1.124,2006-07-04,felixehm] is not over, when the file is recalled. We extend the validation of it by this
    [r1.124,2006-07-04,felixehm] special state for repack.
    [r1.124,2006-07-04,felixehm] Note that at the end of the repack process (migration) the subrequest is set to
    [r1.124,2006-07-04,felixehm] archived (see OraTapeSvc  -->checkFileForRepack).
    [r1.123,2006-05-10,itglp] Fixed generated code for repackVid (broken by previous commit)
    [r1.122,2006-05-10,itglp] Added field repackVid to SubRequest (on behalf of Felix)
    [r1.121,2006-05-04,itglp] Added new state ARCHIVED in the SubRequest state diagram
  * CASTOR2/codeGeneration/Repack.xmi:
    [r 1.4,2006-07-05,felixehm] Added new attributes to RepackSubRequest.
  * CASTOR2/codeGeneration/gencastor/Makefile:
    [r1.13,2006-08-07,itglp] Improved clone() implementation for special cases: if <EntityName>.cpp_clone
    [r1.13,2006-08-07,itglp] is found in the source, its code is included in the generated <EntityName>.cpp class.
    [r1.12,2006-08-03,gtaur] empty log message ***
    [r1.11,2006-08-03,gtaur] double declaration of handleException removed
  * CASTOR2/codeGeneration/gencastor/debian/control:
    [r 1.5,2006-05-04,itglp] Removed dependency on kdelibs4, fixed changelog for version 5.0-0.
  * CASTOR2/codeGeneration/gencastor/debian/files:
    [r1.21,2006-08-07,itglp] Version 5.1 for gencastor
  * CASTOR2/codeGeneration/gencastor/genCastor.cpp:
    [r1.23,2006-08-07,itglp] Version 5.1 for gencastor
    [r1.22,2006-08-07,itglp] Improved clone() implementation for special cases: if <EntityName>.cpp_clone
    [r1.22,2006-08-07,itglp] is found in the source, its code is included in the generated <EntityName>.cpp class.
  * CASTOR2/codeGeneration/gencastor/gencastor:
    [r1.14,2006-08-07,itglp] Improved clone() implementation for special cases: if <EntityName>.cpp_clone
    [r1.14,2006-08-07,itglp] is found in the source, its code is included in the generated <EntityName>.cpp class.
    [r1.13,2006-06-20,itglp] Fixed sql script preprocessing when namespace != castor
  * CASTOR2/codeGeneration/gencastor/umbrello/codegenerators/cppcpporacnvwriter.cpp:
    [r1.65,2006-08-03,gtaur] and now ... handle exception moved  in OraCommonSvc ...
    [r1.64,2006-08-03,gtaur] handle exception new fix
    [r1.63,2006-08-03,gtaur] double declaration of handleException removed
    [r1.62,2006-08-01,gtaur] modification to deal exceptions
  * CASTOR2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.cpp:
    [r1.26,2006-08-07,itglp] Improved clone() implementation for special cases: if <EntityName>.cpp_clone
    [r1.26,2006-08-07,itglp] is found in the source, its code is included in the generated <EntityName>.cpp class.
  * CASTOR2/common/serror.c:
    [r1.13,2006-07-21,sponcec3] Added new error code SegmentNotAccessible
    [r1.12,2006-06-13,waldron] removed DLF related error messages
  * CASTOR2/config/Imake.rules:
    [r1.22,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/config/Project.tmpl:
    [r1.56,2006-08-01,sponcec3] Dropped the (very) olg C gc code
    [r1.55,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/config/site.Win32.def:
    [r 1.2,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/config/site.def:
    [r1.90,2006-08-03,gtaur] double declaration of handleException removed
    [r1.89,2006-08-01,sponcec3] Dropped the (very) olg C gc code
    [r1.88,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/castor-devel.install.perm:
    [r 1.6,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/castor-devel.manpages:
    [r 1.4,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/castor-dlf-client.install.perm:
    [r 1.2,2006-06-13,waldron] no longer required
  * CASTOR2/debian/castor-dlf-client.manpages:
    [r 1.2,2006-06-13,waldron] no longer required
  * CASTOR2/debian/castor-dlf-gui.dirs:
    [r 1.2,2006-06-13,waldron] renamed to castor-dlf-web
  * CASTOR2/debian/castor-dlf-gui.install.perm:
    [r 1.2,2006-06-13,waldron] renamed to castor-dlf-web
  * CASTOR2/debian/castor-dlf-server.install.perm:
    [r 1.4,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/castor-dlf-server.manpages:
    [r 1.3,2006-07-18,waldron] second revision
    [r 1.2,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/castor-stager-server.dirs:
    [r 1.4,2006-06-20,sponcec3] Fixed missing creation of directory /var/spool/cleaning
  * CASTOR2/debian/castor.conf:
    [r1.21,2006-09-06,felixehm] Added configuration lines for correct execution of repack
    [r1.20,2006-08-15,sponcec3] Removed old and misleading option
    [r1.19,2006-06-21,waldron] removed DLF HOST variable
  * CASTOR2/debian/control:
    [r1.42,2006-09-06,sponcec3] defined packages castor-repack-server and client
    [r1.41,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/dlfserver.init:
    [r 1.9,2006-06-21,waldron] removed ULIMIT_S sysconfig option
    [r 1.8,2006-06-20,waldron] fixed chkconfig and added condrestart option
    [r 1.7,2006-06-13,waldron] updated for new dlf packaging
    [r1.10,2006-07-18,waldron] second revision
  * CASTOR2/debian/dlfserver.sysconfig:
    [r 1.7,2006-07-18,waldron] second revision
    [r 1.6,2006-06-21,waldron] removed ULIMIT_S sysconfig option
    [r 1.5,2006-06-20,waldron] fixed chkconfig and added condrestart option
    [r 1.4,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/debian/lsf.sysconfig:
    [r 1.3,2006-05-09,itglp] Removed unused line
  * CASTOR2/dlf/Imakefile:
    [r 1.9,2006-07-18,waldron] second revision
    [r 1.8,2006-06-13,waldron] initial commit
    [r 1.7,2006-06-13,waldron] removal of old DLF
    [r1.10,2006-08-01,sponcec3] Compile DLF in debug mode by default
  * CASTOR2/dlf/delete_by_facility_name.sql:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/delete_by_facility_number.sql:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf.man:
    [r 1.3,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_api.c:
    [r1.25,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_apiinit.c:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_errmsg.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_init.man:
    [r 1.3,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_lib.c:
    [r 1.3,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_mysql_drop.sql:
    [r 1.3,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_mysql_tbl.sql:
    [r 1.5,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_oracle_drop.sql:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_oracle_grant.sql:
    [r 1.3,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_oracle_ifce.pc:
    [r1.19,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_oracle_tbl.sql:
    [r1.13,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_procreq.c:
    [r1.11,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_seterrbuf.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_shutdown.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlf_write.man:
    [r 1.5,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfdeletefacility.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfdeletefacility.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfdeletetext.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfdeletetext.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfenterfacility.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfenterfacility.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfentertext.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfentertext.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflistfacility.c:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflistfacility.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflisttext.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflisttext.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflogit.c:
    [r 1.5,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflogstore.c:
    [r 1.9,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlflogstore.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfmodifyfacility.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfmodifyfacility.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfmodifytext.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfmodifytext.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfmysetup.sh:
    [r 1.6,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlforasetup.sh:
    [r 1.8,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfquery/CERN72.gif:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/ConfEditor.jar:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/Imakefile:
    [r 1.5,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/adjacency.txt:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/base.cfg.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/castor_logo_trans.gif:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/config.mysql.php:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/config.ora.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/config.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/config.txt:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/db.gif:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/dbgui.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/dlf_showmsg.mysql.log.php:
    [r 1.5,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/dlf_showmsg.mysql.php:
    [r 1.5,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/dlf_showmsg.ora.log.php:
    [r 1.5,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/dlf_showmsg.ora.php:
    [r 1.7,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/dlf_start.php:
    [r 1.5,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/down.gif:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/func.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/image.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/index.php:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/magicnumbers.php:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/main.css:
    [r 1.4,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/schema.php:
    [r 1.3,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/trans.gif:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfquery/up.gif:
    [r 1.2,2006-06-13,waldron] removal of old DLF gui
  * CASTOR2/dlf/dlfserver.c:
    [r1.16,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfserver.man:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfshutdown.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/dlfshutdown.man:
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/oralink.mk:
    [r 1.3,2006-06-13,waldron] initial commit
    [r 1.2,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/send2dlf.c:
    [r 1.7,2006-06-13,waldron] removal of old DLF
  * CASTOR2/dlf/sendrep.c:
    [r 1.4,2006-06-13,waldron] removal of old DLF
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.4,2006-08-17,felixehm] updated documentation: class diagramm
    [r 1.3,2006-07-05,felixehm] Added sequence diagrams. Still, more have to be created
  * CASTOR2/doc/uml/StagerSvcs.xmi:
    [r1.13,2006-08-04,itglp] Class diagrams updated with latest changes
  * CASTOR2/doc/uml/ThreadsDaemons.xmi:
    [r 1.7,2006-08-04,itglp] Cosmetic changes
  * CASTOR2/gc/Imakefile:
    [r 1.3,2006-08-01,sponcec3] Dropped the (very) olg C gc code
  * CASTOR2/gc/gcdaemon.c:
    [r 1.3,2006-08-01,sponcec3] Dropped the (very) olg C gc code
  * CASTOR2/h/Cns.h:
    [r 1.3,2006-05-11,felixehm] Added new function for replacing a tapecopy for a file.
    [r 1.3,2006-05-11,felixehm] This is used for the repack process. A file is removed from a tape and written
    [r 1.3,2006-05-11,felixehm] to a another one. In this case, we would like to keep the old tapecopy number
    [r 1.3,2006-05-11,felixehm] and set it to the new segment tapecopy.
    [r 1.3,2006-05-11,felixehm] 
    [r 1.3,2006-05-11,felixehm] Note, that the old segments of that tapecopy are removed from the NS database.
  * CASTOR2/h/Cns_api.h:
    [r 1.5,2006-05-11,felixehm] Added new function for replacing a tapecopy for a file.
    [r 1.5,2006-05-11,felixehm] This is used for the repack process. A file is removed from a tape and written
    [r 1.5,2006-05-11,felixehm] to a another one. In this case, we would like to keep the old tapecopy number
    [r 1.5,2006-05-11,felixehm] and set it to the new segment tapecopy.
    [r 1.5,2006-05-11,felixehm] 
    [r 1.5,2006-05-11,felixehm] Note, that the old segments of that tapecopy are removed from the NS database.
  * CASTOR2/h/Cns_server.h:
    [r 1.7,2006-05-15,felixehm] Added new function to retrieve all segments for one tapecopy.
    [r 1.7,2006-05-15,felixehm] used in Cns_procreq.c for replacing a tapecopy (repack process).
  * CASTOR2/h/Imakefile:
    [r1.15,2006-06-13,waldron] modified because of removed files
  * CASTOR2/h/dlf.h:
    [r 1.4,2006-06-13,waldron] rmeoved for new version of DLF
  * CASTOR2/h/dlf_api.h:
    [r1.15,2006-07-18,waldron] second revision
    [r1.14,2006-06-13,waldron] new DLF interface definitions
  * CASTOR2/h/dlf_constants.h:
    [r 1.2,2006-06-13,waldron] rmeoved for new version of DLF
  * CASTOR2/h/dlf_server.h:
    [r 1.5,2006-06-13,waldron] rmeoved for new version of DLF
  * CASTOR2/h/dlf_struct.h:
    [r 1.6,2006-06-13,waldron] rmeoved for new version of DLF
  * CASTOR2/h/rm_macros.h:
    [r1.15,2006-07-18,waldron] dlf api integration
  * CASTOR2/h/serrno.h:
    [r1.15,2006-07-21,sponcec3] Added new error code SegmentNotAccessible
    [r1.14,2006-06-13,waldron] removed DLF related error messages
  * CASTOR2/h/serrno.man:
    [r 1.4,2006-06-13,waldron] removed DLF related error messages
  * CASTOR2/h/stager_constants.h:
    [r1.18,2006-06-22,itglp] Changed default nb of threads to 20 for DB and JOB (optimal value according to Olof's tests)
  * CASTOR2/h/stager_macros.h:
    [r1.23,2006-07-18,waldron] dlf api integration
  * CASTOR2/h/stager_service_helper.hpp:
    [r 1.2,2006-08-18,sponcec3] Fix last problems with send back the request id
  * CASTOR2/hsmtools/C1-C2FileMover.pl:
    [r 1.2,2006-06-15,itglp] First working version of a script to migrate a castor1 staging area to castor2
  * CASTOR2/hsmtools/disknodeShutdown:
    [r 1.5,2006-08-03,mmarques] from castor to castorns
  * CASTOR2/hsmtools/gcAllFS:
    [r 1.2,2006-05-24,sponcec3] Fixed Typo, thanks to Bonny
  * CASTOR2/hsmtools/upgradec2stgdb.csh:
    [r 1.4,2006-07-10,itglp] Added prompt to ask for stgdb password
    [r 1.3,2006-06-12,itglp] Updated with latest logins/passwd
    [r 1.2,2006-06-12,itglp] Updated with latest logins/passwd
  * CASTOR2/job/stagerJob.shell:
    [r1.40,2006-08-30,jveldik] simplifed (and optimized!)
  * CASTOR2/maketar.sh:
    [r1.48,2006-09-06,sponcec3] included repack
    [r1.47,2006-06-13,waldron] updated for new dlf packaging
  * CASTOR2/ns/Cns_listtape.c:
    [r 1.4,2006-05-11,felixehm] Added new function for replacing a tapecopy for a file.
    [r 1.4,2006-05-11,felixehm] This is used for the repack process. A file is removed from a tape and written
    [r 1.4,2006-05-11,felixehm] to a another one. In this case, we would like to keep the old tapecopy number
    [r 1.4,2006-05-11,felixehm] and set it to the new segment tapecopy.
    [r 1.4,2006-05-11,felixehm] 
    [r 1.4,2006-05-11,felixehm] Note, that the old segments of that tapecopy are removed from the NS database.
  * CASTOR2/ns/Cns_main.c:
    [r1.14,2006-05-11,felixehm] Added new function for replacing a tapecopy for a file.
    [r1.14,2006-05-11,felixehm] This is used for the repack process. A file is removed from a tape and written
    [r1.14,2006-05-11,felixehm] to a another one. In this case, we would like to keep the old tapecopy number
    [r1.14,2006-05-11,felixehm] and set it to the new segment tapecopy.
    [r1.14,2006-05-11,felixehm] 
    [r1.14,2006-05-11,felixehm] Note, that the old segments of that tapecopy are removed from the NS database.
  * CASTOR2/ns/Cns_oracle_ifce.pc:
    [r 1.3,2006-05-15,felixehm] Added new function to retrieve all segments for one tapecopy.
    [r 1.3,2006-05-15,felixehm] used in Cns_procreq.c for replacing a tapecopy (repack process).
  * CASTOR2/ns/Cns_procreq.c:
    [r 1.9,2006-06-23,felixehm] UNDO of the previous commit. The segment has to be in '-' status!
    [r 1.8,2006-06-21,felixehm] Fixed bug : there is now a check if the new segment status is 'm' (migrated).
    [r 1.8,2006-06-21,felixehm] If not it is set to this status. We know that this file is on a tape, otherwise we wouldn't call this function.
    [r 1.7,2006-05-15,felixehm] Changed replacement of segments by using the Cns_get_smd_by_copyno() function.
    [r 1.7,2006-05-15,felixehm] This ensures that we replace all segments belonging to one tapecopy, even
    [r 1.7,2006-05-15,felixehm] if this tapecopy is splitted on > 1 tapes.
    [r 1.7,2006-05-15,felixehm] lets say, this is a nicer solution than iterating twice over all segments of file
    [r 1.7,2006-05-15,felixehm] to find the copyno and then the segments with this copyno.
    [r 1.6,2006-05-12,felixehm] fixed little, but nasty error.
    [r 1.6,2006-05-12,felixehm] fixed output function name
    [r 1.5,2006-05-11,felixehm] Added new function for replacing a tapecopy for a file.
    [r 1.5,2006-05-11,felixehm] This is used for the repack process. A file is removed from a tape and written
    [r 1.5,2006-05-11,felixehm] to a another one. In this case, we would like to keep the old tapecopy number
    [r 1.5,2006-05-11,felixehm] and set it to the new segment tapecopy.
    [r 1.5,2006-05-11,felixehm] 
    [r 1.5,2006-05-11,felixehm] Note, that the old segments of that tapecopy are removed from the NS database.
  * CASTOR2/ns/Imakefile:
    [r 1.7,2006-05-11,felixehm] Added new function for replacing a tapecopy for a file.
    [r 1.7,2006-05-11,felixehm] This is used for the repack process. A file is removed from a tape and written
    [r 1.7,2006-05-11,felixehm] to a another one. In this case, we would like to keep the old tapecopy number
    [r 1.7,2006-05-11,felixehm] and set it to the new segment tapecopy.
    [r 1.7,2006-05-11,felixehm] 
    [r 1.7,2006-05-11,felixehm] Note, that the old segments of that tapecopy are removed from the NS database.
  * CASTOR2/resourcemonitoring/Crmd_recv_from_maui.c:
    [r1.53,2006-09-04,kotlyar] added implementation for Maui scheduler:
    [r1.53,2006-09-04,kotlyar] 
    [r1.53,2006-09-04,kotlyar] defined WIKI_1_1 means to use wiki 1.1 protocol between rmmaster and scheduler;
    [r1.53,2006-09-04,kotlyar] for wiki 1.1 all filesystems are converted into node/filesystem presentation and a node information
    [r1.53,2006-09-04,kotlyar] is duplicated if it has several file systems except the information about a local disk;
    [r1.53,2006-09-04,kotlyar] each node/filesystem features must be described in the maui.cfg;
    [r1.53,2006-09-04,kotlyar] all nodes and jobs have default partition for scheduler;
    [r1.53,2006-09-04,kotlyar] jobs use hostlist field from wiki 1.1 for the requested filesystem parameter.
  * CASTOR2/resourcemonitoring/Crmd_recv_from_rmnode.c:
    [r1.25,2006-08-03,waldron] fixed bug : crash due to inconsistant number of parameters for dlf logging
  * CASTOR2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.84,2006-08-02,waldron] fix to dlf api mutex lock issues
    [r1.83,2006-07-18,waldron] dlf api integration
  * CASTOR2/resourcemonitoring/rmmaster.c:
    [r1.23,2006-08-02,waldron] removed error line
    [r1.22,2006-08-02,waldron] another dlf integration fix
    [r1.21,2006-08-02,waldron] fix to dlf api mutex lock issues
    [r1.20,2006-07-18,waldron] dlf api integration
    [r1.19,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/rfio/rfio_callhandlers.c:
    [r 1.8,2006-08-02,itglp] cosmetic changes (indentation)
  * CASTOR2/rfio/rfrm.c:
    [r1.19,2006-08-14,gtaur] checked the value of host instead of the path starting with /castor
  * CASTOR2/rfio/rmdir.c:
    [r1.12,2006-08-14,gtaur] more elegant solution for the future merge
  * CASTOR2/rtcopy/recaller.c:
    [r1.25,2006-07-18,waldron] dlf api integration
    [r1.24,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/rtcopy/rtcpcldNsInterface.c:
    [r1.34,2006-08-21,felixehm] Commented reackvid in SubRequest, until other solution with own RepackRequest in Stager
    [r1.34,2006-08-21,felixehm] is developed
    [r1.34,2006-08-21,felixehm] removed little bug in comparision for checkDualTapeCopies:
    [r1.34,2006-08-21,felixehm] pointer <-> u_signed64
    [r1.33,2006-08-16,felixehm] Redo number of parameters for dlf_write
    [r1.32,2006-08-16,felixehm] Added check to avoid 2 tapecopies on one tape.
    [r1.32,2006-08-16,felixehm] fixed number of params for a dlf_write command
    [r1.31,2006-05-11,felixehm] Added new function which checks if a file belongs to a repack process
    [r1.31,2006-05-11,felixehm] the tape svc in the stager is queried).
    [r1.31,2006-05-11,felixehm] If so, then the written segments have to replace(!) the old tapecopy
    [r1.31,2006-05-11,felixehm] for that file in the nameserver.
    [r1.31,2006-05-11,felixehm] In the normal case the segments are created in the NS (not changed)
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.22,2006-08-03,felixehm] fixed bug : crash due to inconsistant number of parameters for dlf logging
  * CASTOR2/rtcopy/rtcpcldcommon.c:
    [r1.33,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/rtcopy/rtcpclientd.c:
    [r1.32,2006-07-18,waldron] dlf api integration
  * CASTOR2/rtcopy/rtcpclientd.man:
    [r 1.2,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/scheduler/LSF/schmod_castor.c:
    [r1.38,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/stager/stager.c:
    [r1.88,2006-07-18,waldron] dlf api integration
    [r1.87,2006-06-13,waldron] updated to use new DLF client api
  * CASTOR2/stager/stager_error_service.cpp:
    [r1.10,2006-08-18,sponcec3] Set the request id in all responses
  * CASTOR2/stager/stager_gc_service.cpp:
    [r1.11,2006-08-18,sponcec3] Fix last problems with send back the request id
    [r1.10,2006-08-18,sponcec3] Set the request id in all responses
  * CASTOR2/stager/stager_job_service.cpp:
    [r1.35,2006-08-18,sponcec3] Fix last problems with send back the request id
    [r1.34,2006-08-18,sponcec3] Set the request id in all responses
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.42,2006-08-18,sponcec3] Set the request id in all responses
    [r1.41,2006-08-17,sponcec3] Fixed precedence of diskcopies status when queryin a file with multiple diskcopies
  * CASTOR2/stager/stager_service_helper.cpp:
    [r 1.2,2006-08-18,sponcec3] Fix last problems with send back the request id
  * CASTOR2/test/dlf/Imakefile:
    [r 1.4,2006-06-13,waldron] new test program for DLF
  * CASTOR2/test/dlf/dlftest.c:
    [r 1.9,2006-08-02,waldron] fixed throughput rate option (-r)
    [r 1.8,2006-07-18,waldron] second revision
    [r 1.7,2006-06-23,waldron] corrected the number of parameters in dlf_write
    [r 1.6,2006-06-13,waldron] new test program for DLF
  * CASTOR2/test/security/notes.txt:
    [r 1.5,2006-05-17,lopic3] user's proxy cert
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.301,2006-09-11,itglp] Fixed archiveSubReq and fileRecalled to properly handle repack/non-repack requests
    [r1.300,2006-09-11,itglp] Fixing some outer join queries for repack
    [r1.299,2006-09-08,felixehm] Added changements for StageRepackRequest scheduling,quering, etc.
    [r1.298,2006-09-06,sponcec3] Fixed putStart to take into account SubRequest cancelation by stageRm during the queuing. This bug was leading to updating DiskCopies to status STAGEOUT while the job was due to fail. After that, all requests were waiting on this STAGEOUT but their parents were put to NULL since the failing STAGEOUT SubRequest was set tO FAILED and thus not found by makeSubReqWait
    [r1.297,2006-09-06,sponcec3] Fixing missing invalidation of DiskCopy in stageRm. This was leading to DiskCopies in WAITFS status with no 'valid' associated SubRequest and thus to an accumulation of SubRequests in WAITSUBREQ status waiting on nothing (null parent)
    [r1.296,2006-09-06,sponcec3] Fixed wrong check of FileSystem and DiskServer status in isSubRequestToSchedule. They were checked even when non applicable, leading to scheduling requests that should have waited
    [r1.295,2006-09-04,sponcec3] Nasty work-around to the nbTapeCopiesInFS problem
    [r1.294,2006-08-16,gtaur] delete of out date now delete only the failed one status in (8,9,10)
    [r1.293,2006-08-14,itglp] Fixed triggers around NbTapeCopiesInFS according to new TapeCopy state diagram. To be still tested.
    [r1.293,2006-08-14,itglp] Better indentation for fileRecalled.
    [r1.292,2006-08-10,sponcec3] Fixed 2 bugs in prepareForMigration/putDoneFunc : the context was not passed properly and the update requests were not taken into account
    [r1.291,2006-08-07,itglp] Fixed DiskPool2ServiceClass -> DiskPool2SvcClass
    [r1.290,2006-08-07,itglp] Added missing ';'
    [r1.289,2006-08-07,itglp] From Nilo: changed sequence cache from 200 to 300, added PK in DP2SC.
    [r1.289,2006-08-07,itglp] Fixed' and commented out tr_Stream2TapeCopy_Delete. To be fully understood
    [r1.289,2006-08-07,itglp] yet what's wrong around the triggers around NBTapeCopiesInFS.
    [r1.289,2006-08-07,itglp] Removed VDQM2 specific code, added to an upcoming oracleTrailer.
    [r1.288,2006-08-07,sponcec3] Some improvements in anyTapeCopyForStream thanks to Olof. We were not taking into account the status of the filesystems and diskservers
    [r1.287,2006-08-03,sponcec3] Fix stupid mistake in updateFiles2Delete
    [r1.286,2006-08-02,felixehm] Added internalputDoneFunc:
    [r1.286,2006-08-02,felixehm] in fact an extraction from putDoneFunc. It creates a specified number
    [r1.286,2006-08-02,felixehm] of tapecopies for a diskcopy in STAGEOUT. This number is passed as a
    [r1.286,2006-08-02,felixehm] parameter.
    [r1.286,2006-08-02,felixehm] 
    [r1.286,2006-08-02,felixehm] Changed fileRecalled:
    [r1.286,2006-08-02,felixehm] Whenever a file is recalled its repackvid in the subrequest is checked and
    [r1.286,2006-08-02,felixehm] for each found 'repack-subrequest' for this file the number of tapecopies
    [r1.286,2006-08-02,felixehm] are created. Only subrequest in WAITTAPERECALL,WAITSUBREQ and READY are
    [r1.286,2006-08-02,felixehm] considered. This is neccessary for >1 tapecopy repacking (otherwise only
    [r1.286,2006-08-02,felixehm] one tapecopy is created for the migration).
    [r1.286,2006-08-02,felixehm] 
    [r1.286,2006-08-02,felixehm] 
    [r1.286,2006-08-02,felixehm] Changed putDoneFunc:
    [r1.286,2006-08-02,felixehm] Reduced by the extracted part now in internalputDoneFunc
    [r1.285,2006-08-02,sponcec3] Fixed the cleaning of the DiskCopy in case of put failure. This was leading to orphaned DiskCopies
    [r1.284,2006-07-21,sponcec3] Fixed some deadlock between the GC and the updateFsFileClosed PL/SQL function
    [r1.283,2006-07-13,sponcec3] Fixed nullGCPolicy so that Invalid files are deleted
    [r1.282,2006-07-07,itglp] Create main id sequence with bigger cache (optimization from Nilo)
    [r1.281,2006-07-06,itglp] Improved internalStageQuery (credits to Eric).
    [r1.281,2006-07-06,itglp] Fix for bug #17948: after a put, any existing castorFile having the same lastKnownFileName
    [r1.281,2006-07-06,itglp] but different fileid will be reset to lastKnownFileName = '' so to avoid false
    [r1.281,2006-07-06,itglp] duplicates in queries.
    [r1.281,2006-07-06,itglp] Fixed comments.
    [r1.280,2006-07-04,felixehm] Added new Status for the Stager SubRequest. This is needed for the handling
    [r1.280,2006-07-04,felixehm] of a file in a repakc process. In the recaller part, the new status is set,
    [r1.280,2006-07-04,felixehm] instead of archiving the subrequest. In case of a repack the subrequest life
    [r1.280,2006-07-04,felixehm] is not over, when the file is recalled. We extend the validation of it by this
    [r1.280,2006-07-04,felixehm] special state for repack.
    [r1.280,2006-07-04,felixehm] Note that at the end of the repack process (migration) the subrequest is set to
    [r1.280,2006-07-04,felixehm] archived (see OraTapeSvc  -->checkFileForRepack).
    [r1.279,2006-06-22,itglp] Fixed FS trigger for GC
    [r1.279,2006-06-22,itglp] Attempt to add a revision into CastorVersion table
    [r1.278,2006-06-19,sponcec3] Yet another fix on updateFsFileClosed
    [r1.277,2006-06-14,sponcec3] Fixed a missing condition on the select defining which is the prepareToPut statement to delete on a putDone
    [r1.276,2006-06-13,sponcec3] Fix last fix of GC
    [r1.275,2006-06-13,sponcec3] Make disk2diskCopy wait when the replicated file is in STAGEOUT. And wake it up after the put done
    [r1.274,2006-06-09,itglp] Fix defaultGCPolicy to delete INVALID diskcopies first
    [r1.274,2006-06-09,itglp] bug introduced in v. 1.248)
    [r1.273,2006-06-09,sponcec3] Fix isSubRequestToSchedule. This was allowing replications of STAGEOUT diskcopies in case replication was enabled and several svcclasses were defines
    [r1.272,2006-06-09,sponcec3] Fix (again !) fsupdateFileClosed
    [r1.271,2006-06-08,sponcec3] Fixes the previous fix
    [r1.270,2006-06-08,sponcec3] Fixed a deadlock in updateFsFileClosed
    [r1.269,2006-06-01,itglp] Fixed bug in GC procedure
    [r1.268,2006-05-30,felixehm] Fixed wrong set of diskcopy status.
    [r1.268,2006-05-30,felixehm] If a file is recalled we want to have the diskcopy in 0,
    [r1.268,2006-05-30,felixehm] otherwise for repack purpose we want to have it in 6.
    [r1.267,2006-05-29,itglp] Added index hints in fileNameStageQuery (from Nilo)
    [r1.267,2006-05-29,itglp] Moved fileRecalled after putDoneFunc
    [r1.267,2006-05-29,itglp] Fixed statement in stageRm
    [r1.266,2006-05-26,itglp] Added new indexes.
    [r1.266,2006-05-26,itglp] Optimized bestTapeCopyForStream (thanks to Nilo).
    [r1.266,2006-05-26,itglp] Fixed several queries related to SubRequest.status: now a NOT IN (...) clause
    [r1.266,2006-05-26,itglp] is present nowhere and all the states are mentioned explicitly, properly
    [r1.266,2006-05-26,itglp] taking into account the new ARCHIVED one.
    [r1.266,2006-05-26,itglp] Improved GC trigger, now working fine.
    [r1.265,2006-05-11,felixehm] Added new Stream converter for old SubRequests
    [r1.265,2006-05-11,felixehm] changed sql Procedure filerecalled:
    [r1.265,2006-05-11,felixehm] whenever a file is staged in as a repack request (the new subrequest field
    [r1.265,2006-05-11,felixehm] repackvid is set with the origin tape), the diskcopy status is
    [r1.265,2006-05-11,felixehm] directly put into CANBEMIGRATED.
    
 -- Giuseppe Lo Presti <giuseppe.lopresti@cern.ch>  Mon, 12 Sep 2006 13:00:00 +0200

castor (2.1.0-8) unstable; urgency=low

  * identical to the 2.1.0-7 but with some more bugs fixed
  
  * rfio/rfcp.c free cleanInp and cleanOut are commented, they should be
    properly set.

 -- rosa maria garcia rioja <rosa.garcia@cern.ch>  Thu,  24 Aug 2006 15:37:14 +0200

castor (2.1.0-7) unstable; urgency=low

  * identical to the 2.1.0-6 but with some more bugs fixed 
  
  * castor/io/ServerSocket.cpp
  Random port in bind() to wait the answer from the stager. Port with limited values...
  
  * rfio/RfioTURL.c
  Removed memory leak in Rfio

 -- rosa maria garcia rioja <riojac3@localhost.localdomain>  Fri,  10 Aug 2006  0:00:00 +0200

castor (2.1.0-6) unstable; urgency=low

  * identical to the 2.1.0-5 but with some more bugs fixed 
  
  * stager/stager_client_api_query.cpp
  Handle the case of a simple 'Response' instead of a FileQryResponse. This could happen in case of error
  
  * hsmtools/diskServer_qry
  Added CF.lastKnownFileName as a result of diskServer_qry
  
  * hsmtools/diskServer_qry.man
  
  * tape/mircheck.c
  
  * tape/mounttape.c
  
  * tape/rlstape.c 
  
  * tape/rbtsubr.c 
  
  * tape/smcsubr2.c  
  Mir valid/invalid checking on IBM3592E05 tape drives, new IBM3592E05 firmware release (172E) fixed problem seen before.Connection reset messages from rmc are just sent to msgdaemon after 2 retries. Rmcdaemon now checks if tape is in the storage slot before returning dismount OK.
  
  * castor/db/oracleTrailer.sql
  Fix mistake in updateFiles2Delete
  
  * castor/client/BaseClient.cpp
  Handle properly exceptions in sendRequest and especially release memory and close the socket
  
  * stager/stager_db_service.c
  Fixed missing filling of the svcclass of a castorfile in memory. The consequence was that the svcclass could be overwritten in case of reuse of a castorfile in 2 different service classes
  
 -- rosa maria garcia rioja <riojac3@localhost.localdomain>  Mon,   7 Aug 2006 0:00:00 +0200

castor (2.1.0-5) unstable; urgency=low

  * identical to the 2.1.0-4 but with some more bugs fixed 

  * castor/db/ora/OraGCSvc.cpp
    Fixed some deadlock between the GC and the updateFsFileClosed PL/SQL function  
  * castor/db/ora/oracleTrailer.sql 
    Fixed some deadlock between the GC and the updateFsFileClosed PL/SQL function
  * debian/cleaning.init
    Fixed missing chkconfig line
  * rfio/RfioTURL.c rfio/rfio_HsmIf.c
    RFIO_USE_CASTOR_V2 NoT cAse SeNsItiVe and removed in Rfio Turl a part not used which was giving warning.
  * rfio/rfcp.man
    Replacing ' with " to make SLC man happy
  * rtcopy/TapeErrorHandler.c
    Backport 1.16: Remove check for already migrated files preventing recreated files from being migrated (apparently the 'm' bit is not reset when file is recreated?)
  * stager/stager_client_api_open.cpp
    Fixed stage_open, broken since the integration of O_LARGEFILE
  * upv/Cupv_check.c
    check if src and tgt are not null before comparing
  * stager/stager_put.c
    set mode for file creations

 -- rosa maria garcia rioja <riojac3@localhost.localdomain>  Fri,  29 Jul 2006 10:58:14 +0200

castor (2.1.0-4) unstable; urgency=low

  * identical to the 2.1.0-3 but with some more bugs fixed 

  * rfio/rfcp.c
  * rfio/rfcat.man
  * rfio/rfcp.man
  * rfio/rfchmod.man
  * rfio/rfdir.man
  * rfio/rfmkdir.man
  * rfio/rfrm.man
  * rfio/rfrename.man
  * job/stagerJob.c
  * stager/stager_db_service.c
  * stager/stager_client_api_open.c
  * stager/stager_rm.c
  * stager/stager_put.c
  * stager/stager_qry.c
  * stager/stager_putdone.c
  * stager/stager_get.c
  * rtcopy/rtcpcldCatalogueInterface.c
  * hsmtools/C1-C2FileMover.py
  * debian/castor-ns-client.install.perm
  * tape/tapealertcheck.c
  * tape/mircheck.c
  * tape/mounttape.c
  * tape/rlstape.c
  * tape/Imakefile
  
 -- rosa maria garcia rioja <riojac3@localhost.localdomain>  Wed,  5 Jul 2006 17:07:14 +0200

castor (2.1.0-3) unstable; urgency=low

  * identical to the 2.1.0-2 but with some more bugs fixed

  * debian/rtcpclientd.init
  * CASTOR.spec
  * rfio/RfioTURL.c 
  * rfio/rfcp.c
  * upgrades/2.1.0-0_to_2.1.0-3.sqlplus
  * upgrades/2.1.0-0_to_2.1.0-3.sql
  * castor/db/castor_oracle_create.sql
  * castor/db/castor_oracle_create.sqlplus
  * stager/stager_db_service.c
  * stager/stager_fs_service.c
  * castor/db/oracleTrailer.sql
  * tape/mircheck.c
  * tape/mounttape.c
  
 -- rosa maria garcia rioja <riojac3@localhost.localdomain>  Tue, 13 Jun 2006 11:30:52 +0200

castor (2.1.0-2) unstable; urgency=low

  * Bug fix release on top of the 2.1.0-0 one (branching)
    * CASTOR2/tape/getcompstat.c:
        [r1.20,2006-05-24,hcacote] Add T10000 device when
	decoding the sequential device page
	
 -- rosa maria garcia rioja <rioja@cern.ch>  Wed, 31 May 2006 18:44:59 +0200

castor (2.1.0-1) unstable; urgency=low

   * No changes, this release number has been used by the Linux team to
     temporarily fix a problem in SLC3.

 -- rosa maria garcia rioja <rioja@cern.ch>  Wed, 31 May 2006 16:36:59 +0200

castor (2.1.0-0) unstable; urgency=low

  * Identical to 2.0.4-1. Only the version number changed so that the soname
    of the libraries change since we introduced a lack of backward compatibility in version 2.0.4-* that force applications to relink.

 -- sponcec3 <sponcec3@seblap.cern.ch>  Mon, 15 May 2006 14:23:57 +0200

castor (2.0.4-1) unstable; urgency=low

  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/client/BaseClient.hpp:
  * CASTOR2/castor/io/ServerSocket.cpp:
  * CASTOR2/castor/io/ServerSocket.hpp:
    [2006-05-03,sponcec3] Implemented a port range for the callback from the stager
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.259,2006-05-02,itglp] Extend the getNext-like query to PrepareToUpdate requests
  * CASTOR2/castor/rh/Server.cpp:
  * CASTOR2/castor/rh/Server.hpp:
    [2006-05-02,itglp] Added correct help() with RH usage
  * CASTOR2/debian/castor-stager-server.install.perm:
    [r 1.7,2006-05-02,itglp] Added init.d script for cleaningDaemon
  * CASTOR2/debian/castor.conf:
    [r1.17,2006-05-03,sponcec3] New entry for the client port range
  * CASTOR2/rfio/rfio_HsmIf.c:
    [r1.14,2006-05-04,obarring] Add O_CREAT to mover open after a successful return from stage_open() with O_TRUNC
  * CASTOR2/rfio/RfioTURL.c:
  * CASTOR2/rfio/rfrm.c:
  * CASTOR2/rfio/rmdir.c:
    [2006-05-03,gtaur] now it is possible to use //castor in the path
  * CASTOR2/rfio/RfioTURL.c:
  * CASTOR2/rfio/rfcat.c:
  * CASTOR2/rfio/rfchmod.c:
  * CASTOR2/rfio/rfdir.c:
  * CASTOR2/rfio/rfmkdir.c:
  * CASTOR2/rfio/rfrename.c:
  * CASTOR2/rfio/rfrm.c:
  * CASTOR2/rfio/rfstat.c:
  * CASTOR2/rfio/rmdir.c:
    [2006-04-28,gtaur] patch
  * CASTOR2/stager/stager_client_api_open.cpp:
    [r 1.5,2006-05-03,sponcec3] Fixed the handling of read only file opens with only O_TRUNC or only O_CREAT set
  * CASTOR2/stager/stager_db_service.c:
    [r1.138,2006-05-03,sponcec3] Fixed updateRequest processing in the case of non existing files opened with O_CREAT set
    [r1.137,2006-05-03,obarring] Add missing file access permissions checks
  * CASTOR2/stager/stager_qry.man:
    [r1.15,2006-05-02,itglp] Updated queries for directories.
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.39,2006-04-28,itglp] Be aware of queries on directories and show the content as using the final '/'.

 -- sponcec3 <sponcec3@seblap.cern.ch>  Thu,  4 May 2006 17:32:39 +0200

castor (2.0.4-0) unstable; urgency=low

  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
    [r1.34,2006-04-24,felixehm] retrieving of DiskCopy Object crashed, when trying to get a double from db as int
  * CASTOR2/castor/Constants.cpp:
  * CASTOR2/castor/Constants.hpp:
  * CASTOR2/castor/Imakefile:
  * CASTOR2/castor/db/castor_postgres_create.sql:
  * CASTOR2/castor/db/castor_postgres_drop.sql:
  * CASTOR2/castor/db/ora/Imakefile:
  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
  * CASTOR2/castor/db/ora/OraQuerySvc.hpp:
  * CASTOR2/castor/db/oracleTrailer.sql:
  * CASTOR2/castor/query/IQuerySvc.hpp:
  * CASTOR2/h/stager_client_api.h:
  * CASTOR2/stager/stager_client_api_query.cpp:
  * CASTOR2/stager/stager_qry.c:
  * CASTOR2/stager/stager_query_service.cpp:
    [2006-04-13,sponcec3] Implementation of stager_qry -s
  * CASTOR2/stager/stager_qry.man:
    [r1.14,2006-04-24,sponcec3] Updated man page for -s option
  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/dlf/Dlf.cpp:
  * CASTOR2/castor/dlf/Param.cpp:
  * CASTOR2/castor/io/AbstractSocket.cpp:
  * CASTOR2/castor/io/ClientSocket.cpp:
  * CASTOR2/castor/io/ServerSocket.cpp:
  * CASTOR2/castor/logstream.cpp:
  * CASTOR2/castor/replier/ClientConnection.cpp:
  * CASTOR2/castor/replier/RequestReplier.cpp:
  * CASTOR2/ns/nsgetacl.c:
  * CASTOR2/resourcemonitoring/rmnode.c:
  * CASTOR2/rfio/Imakefile:
  * CASTOR2/rfio/rfio_call64.c:
  * CASTOR2/rfio/rfio_calls.c:
  * CASTOR2/rtcopy/Imakefile:
  * CASTOR2/rtcopy/rtcpapi.c:
  * CASTOR2/rtcopy/rtstat.c:
  * CASTOR2/shlib/Imakefile:
  * CASTOR2/stager/Imakefile:
  * CASTOR2/stager/stager_client_api_common.cpp:
  * CASTOR2/stager/stager_qry.c:
    [2006-04-11,motiakov] Port to Windows.
  * CASTOR2/castor/stager/FileSystem.cpp:
  * CASTOR2/castor/stager/FileSystem.h:
  * CASTOR2/castor/stager/FileSystem.hpp:
  * CASTOR2/castor/stager/FileSystemCInt.cpp:
    [2006-04-24,itglp] Added field minAllowedFreeSpace
  * CASTOR2/castor/db/analyze/cleanDiskCopyReplicas.sql:
    [r 1.4,2006-04-13,sponcec3] Fixed scripts by adding a check
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.258,2006-04-25,itglp] Replaced UNION by UNION ALL (thanks to Nilo).
    [r1.257,2006-04-24,itglp] Fixed parenthesis in describeDiskPools().
    [r1.256,2006-04-24,itglp] Fixed nullGCPolicy function.
    [r1.255,2006-04-24,itglp] Fixed declaration and usage of index for getNextStatus.
    [r1.255,2006-04-24,itglp] Improved fileSystem selection taking into account minAllowedFreeSpace.
    [r1.252,2006-04-13,sponcec3] Commented a constraint causing problems and added some commits inside the delete methods when to many files are commited
    [r1.251,2006-04-11,itglp] Commented out repack-aware queries in fileRecalled
  * CASTOR2/castor/stager/RemoteGCSvc.cpp:
  * CASTOR2/castor/stager/RemoteJobSvc.cpp:
    [2006-04-19,felixehm] Due to changes of BaseClient the Instantiation of it is not complete if there is no enviroment variables set. To set the correct ones, the memberBaseClient::setOption(NULL) has to be called, which reads the information for the stager and rh host from the castor config file.
  * CASTOR2/castor/stager/SubRequestStatusCodes.cpp:
  * CASTOR2/castor/stager/SubRequestStatusCodes.hpp:
    [2006-04-21,sponcec3] Added new status SUBREQUEST_ARCHIVED
  * CASTOR2/clips/castor.clp:
    [r1.14,2006-04-18,sponcec3] New set of defaults corresponding to the ITDC optimization
  * CASTOR2/h/rtcpcld.h:
    [r1.46,2006-04-12,obarring] Add prototype for new method (rtcpcld_putFailed())
  * CASTOR2/h/stager_client_api.h:
    [r1.30,2006-04-24,sponcec3] Correct handling of env variables using Giulia's new functions
  * CASTOR2/hsmtools/diskServer_qry:
    [r 1.2,2006-04-19,sponcec3] Take care of strange status
  * CASTOR2/hsmtools/cleanLostFiles.man:
  * CASTOR2/hsmtools/deleteFileClass.man:
  * CASTOR2/hsmtools/deleteSvcClass.man:
  * CASTOR2/hsmtools/diskServer_qry.man:
  * CASTOR2/hsmtools/diskUsage.man:
  * CASTOR2/hsmtools/enterFileClass.man:
  * CASTOR2/hsmtools/enterSvcClass.man:
  * CASTOR2/hsmtools/gcAllFS.man:
  * CASTOR2/hsmtools/houseKeeping.man:
  * CASTOR2/hsmtools/listFileClass.man:
  * CASTOR2/hsmtools/listSvcClass.man:
  * CASTOR2/hsmtools/modifyFileClass.man:
  * CASTOR2/hsmtools/modifySvcClass.man:
  * CASTOR2/hsmtools/moveDiskServer.man:
  * CASTOR2/hsmtools/printFileClass.man:
  * CASTOR2/hsmtools/printSvcClass.man:
  * CASTOR2/hsmtools/springCleaning.man:
  * CASTOR2/hsmtools/updateCastorFileName.man:
    [2006-04-24,sponcec3] man page for administration of multiple instances of CASTOR from a single node
  * CASTOR2/ns/nsls.c:
    [r 1.3,2006-04-11,motiakov] define F_OK for Windows.
  * CASTOR2/ns/nsrm.c:
    [r 1.3,2006-04-11,motiakov] define S_IFLNK 0120000 for Windows
  * CASTOR2/rfio/RfioTURL.c:
    [r 1.8,2006-04-20,gtaur] printf removed
    [r 1.7,2006-04-18,gtaur] right default
  * CASTOR2/rfio/rfcp.c:
    [r 1.9,2006-04-21,gtaur] still to fix from Castor to local
    [r 1.8,2006-04-21,gtaur] modified parameter used to call  rfio_open64 to be compatible with the new Turl
    [r 1.7,2006-04-20,gtaur] options for the stage_open retieved and used to call the function
  * CASTOR2/rfio/rfio_HsmIf.c:
    [r1.13,2006-04-21,gtaur] still to fix from Castor to local
    [r1.12,2006-04-20,gtaur] options for the stage_open retieved and used to call the function
  * CASTOR2/rfio/rfio_callhandlers.c:
    [r 1.7,2006-04-11,motiakov] Added missing include "rfio.h"
  * CASTOR2/rfio/rfio_serv.c:
    [r1.22,2006-04-24,obarring] Fix the setsockopt(SO_KEEPALIVE) call (was using an uninitialized variable)
  * CASTOR2/rtcopy/MigHunter.c:
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [2006-04-12,obarring] Add calls to new method rtcpcld_putFailed()
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.143,2006-04-17,obarring] Skip migration candidates failing with EISDIR until the stager has been fixed!
    [r1.142,2006-04-12,obarring] New method, rtcpcld_putFailed(), for cleaning up from failed migrations
  * CASTOR2/h/stager_client_api_common.h:
  * CASTOR2/stager/stager_client_api_common.cpp:
    [2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
  * CASTOR2/stager/stager_client_api_get.cpp:
    [r1.26,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r1.25,2006-04-19,gtaur] put back the request helper
    [r1.24,2006-04-18,gtaur] setOption added to the Client
  * CASTOR2/stager/stager_client_api_next.cpp:
    [r 1.4,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r 1.3,2006-04-19,gtaur] put back the request helper
  * CASTOR2/stager/stager_client_api_put.cpp:
    [r1.25,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r1.24,2006-04-19,gtaur] put back the request helper
    [r1.23,2006-04-18,gtaur] setOption added to the Client
  * CASTOR2/stager/stager_client_api_query.cpp:
    [r1.22,2006-04-24,sponcec3] Correct handling of env variables using Giulia's new functions
    [r1.21,2006-04-24,sponcec3] More fixes
    [r1.19,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r1.18,2006-04-19,gtaur] put back the request helper
    [r1.17,2006-04-18,gtaur] setOption added to the Client
    [r1.16,2006-04-13,sponcec3] Fix svcClassName usage
  * CASTOR2/stager/stager_client_api_rm.cpp:
    [r 1.6,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r 1.5,2006-04-19,gtaur] put back the request helper
    [r 1.4,2006-04-18,gtaur] setOption added to the Client
  * CASTOR2/stager/stager_client_api_setFileGCWeight.cpp:
    [r 1.2,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
  * CASTOR2/stager/stager_client_api_update.cpp:
    [r 1.9,2006-04-19,gtaur] put back the request helper
    [r1.10,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
  * CASTOR2/stager/stager_db_service.c:
    [r1.136,2006-04-22,obarring] Log the castor fileid
    [r1.135,2006-04-22,obarring] Fix log message for attempt to open directory
    [r1.134,2006-04-22,obarring] 16265 fix. Add protection against put/get/update request on a directory
  * CASTOR2/stager/stager_fs_service.c:
    [r1.40,2006-04-24,itglp] Inizialize FileSystem.minAllowedFreeSpace
    [r1.39,2006-04-24,itglp] Inizialize FileSystem.minAllowedFreeSpace
  * CASTOR2/stager/stager_get.c:
    [r 1.8,2006-04-11,gtaur] getGlobal add
    [r 1.7,2006-04-11,gtaur] getGlobal add
  * CASTOR2/stager/stager_qry.c:
    [r1.20,2006-04-24,sponcec3] Correct handling of env variables using Giulia's new functions
    [r1.19,2006-04-24,sponcec3] More fixes
  * CASTOR2/test/stager/myTestSuite.py:
    [r 1.2,2006-04-26,gtaur] user tag is not lost anymore
  * CASTOR2/tools/castorRun.c:
    [r 1.4,2006-04-20,gtaur] to be compatible with new stage_options (maybe this file is just a test used)
  * CASTOR2/upgrades/2.0.3_to_2.0.4.sql:
    [r 1.5,2006-04-26,sponcec3] Do not drop non existent index
    [r 1.4,2006-04-24,sponcec3] Don't change the DB version since the DB code is backward compatible
    [r 1.3,2006-04-24,sponcec3] Don't recreate FilesDeletedProcOutput
    [r 1.2,2006-04-24,itglp] Generated SQL script for next version upgrade.

 -- sponcec3 <sponcec3@seblap.cern.ch>  Wed, 26 Apr 2006 15:19:28 +0200

castor (2.0.3-5) unstable; urgency=low

  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/client/BaseClient.hpp:
    [2006-04-07,gtaur] first version with options added (to be tested)
  * CASTOR2/castor/db/ora/OraCnvSvc.cpp:
  * CASTOR2/hsmtools/castor_tools.pm:
    [2006-03-27,motiakov] Added support for the CASTOR_INSTANCE environment variable.
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.250,2006-04-05,itglp] Fixed stageRm: pending requests on the file being removed are moved to
    [r1.250,2006-04-05,itglp] FAILED instead of being archived, so clients may get an answer.
    [r1.249,2006-03-31,sponcec3] New improvements in the indexes/table setups thanks to Nilo
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r 1.3,2006-04-05,felixehm] Changing the Stager SubRequest : the isRepack contains now the vid
    [r 1.3,2006-04-05,felixehm] Before it was a bool, but because this information is needed for further
    [r 1.3,2006-04-05,felixehm] repack process, we have to set it here.
    [r 1.3,2006-04-05,felixehm] This info is used in Cns_replacetapecopy in the NameServer part.
  * CASTOR2/castor/stager/RequestHelper.cpp:
    [r 1.6,2006-04-07,gtaur] first version with options detailed for stager_client_api* (to be tested)
  * CASTOR2/common/sendscsicmd.c:
    [r1.16,2006-02-15,hcacote] tpdaemon uses sg0 device instead of sga
  * CASTOR2/debian/castor-devel.install.perm:
    [r 1.5,2006-03-29,sponcec3] Added missing Cns_struct.h in castor-devel package
  * CASTOR2/dlf/Imakefile:
    [r 1.5,2006-03-28,motiakov] Added man page for the dlf_shutdown() function.
  * CASTOR2/dlf/dlf_api.c:
  * CASTOR2/h/dlf_api.h:
    [2006-03-23,motiakov] Added new function dlf_shutdown();
    [2006-03-23,motiakov] It frees memory occupied by the dlf global structure.
    [2006-03-23,motiakov] This function should be called just before application exit.
  * CASTOR2/h/Castor_limits.h:
  * CASTOR2/h/stager_mapper.h:
    [2006-04-04,gtaur] first modification to be thread safe
  * CASTOR2/stager/stager_put.c:
  * CASTOR2/stager/stager_putdone.c:
  * CASTOR2/stager/stager_qry.c:
  * CASTOR2/stager/stager_rm.c:
  * CASTOR2/h/RfioTURL.h:
    [2006-04-07,gtaur] getDefaultForGlobal
  * CASTOR2/h/stager_client_api.h:
    [r1.28,2006-04-10,felixehm] Added stage_version and stager_port for correct compiling
    [r1.28,2006-04-10,felixehm] see 1.5->1.6 of RequestHelper.cpp)
  * CASTOR2/hsmtools/disknodeShutdown:
    [r 1.4,2006-03-31,aearl] change to test staged or canbemig from staged only
  * CASTOR2/job/stagerJob.shell:
    [r1.39,2006-03-24,itglp] Unset STAGE_HOST too
  * CASTOR2/maketar.sh:
    [r1.45,2006-03-31,sponcec3] Avoid to ship any binary in the source tar ball !
  * CASTOR2/rfio/RfioTURL.c:
    [r 1.6,2006-04-05,gtaur] complete parsing
    [r 1.5,2006-04-04,gtaur] first modification to be thread safe
  * CASTOR2/rmc/rmc_serv.c:
    [r 1.7,2006-03-20,hcacote] try 2 times to get the robot gemometry at startup to avoid scsi bus reset at reboot
  * CASTOR2/stager/stager_mapper.c:
    [r 1.9,2006-04-04,gtaur] first modification to be thread safe
  * CASTOR2/stager/stager_qry.c:
  * CASTOR2/stager/stager_qry.man:
    [2006-03-28,motiakov] Added support for the --regexp (-E) command line option.
  * CASTOR2/test/Imakefile:
    [r 1.9,2006-04-10,itglp] Removed also ns
    [r 1.8,2006-04-10,itglp] Removed vdqm and vmgr test dirs

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 10 Apr 2006 18:49:21 +0200

castor (2.0.3-4) unstable; urgency=low

  * CASTOR2/CASTOR.spec:
    [r1.42,2006-03-24,itglp] Removed castor-rfio-server from metapackage CASTOR-client
  * CASTOR2/castor/Constants.hpp:
    [r1.59,2006-03-14,felixehm] Added new Repack Acknowledgement
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.247,2006-03-22,itglp] Fixed fileRecalled for the repack case.
    [r1.247,2006-03-22,itglp] Added 'standard' header comment.
    [r1.246,2006-03-22,itglp] Improved efficiency of bestTapeCopyForStream (credits to Nilo Segura).
    [r1.246,2006-03-22,itglp] Added nullGCPolicy function to be used for disk-only pools.
    [r1.246,2006-03-22,itglp] Reenabled generic garbage collector based on policies.
    [r1.246,2006-03-22,itglp] Fixed internalStageQuery (missing outer join).
    [r1.245,2006-03-17,itglp] Fixed internalStagerQuery to give an answer in case of ongoing recalls.
    [r1.245,2006-03-17,itglp] Enhanced stager_qry by filename by regexp, directory or exact match.
    [r1.244,2006-03-13,sponcec3] Fix problem of recall tape copies being created with a filesystem (Thanks to Olof)
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
  * CASTOR2/castor/repack/DatabaseHelper.hpp:
  * CASTOR2/castor/repack/RepackClient.cpp:
  * CASTOR2/castor/repack/RepackClient.hpp:
    [2006-03-14,felixehm] Added new functionality: now the user can do requests on the tapes in the repack system
  * CASTOR2/castor/repack/RepackCommonHeader.hpp:
    [r 1.9,2006-03-10,felixehm] New Tools Header for the Tools.
    [r1.10,2006-03-14,felixehm] Added new functionality: now the user can do requests on the tapes in the repack system
  * CASTOR2/castor/repack/RepackFileMigrator.cpp:
  * CASTOR2/castor/repack/RepackFileMigrator.hpp:
    [2006-03-13,felixehm] added functionality, but not tested.
  * CASTOR2/castor/repack/RepackFileStager.cpp:
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [r 1.2,2006-03-10,felixehm] Now the Stager Request is created and send manually. Before we used the stager api.
    [r 1.2,2006-03-10,felixehm] Since I added a new Attribute in the Stager SubRequest (isRepack), the stage api should not be
    [r 1.2,2006-03-10,felixehm] changed. This option would then also be accessable for normal users, which we don't like.
    [r 1.2,2006-03-10,felixehm] So, the Requets is created with the option isrepack set to true.
    [r 1.2,2006-03-10,felixehm] 
    [r 1.2,2006-03-10,felixehm] This option would put the file in STAGEOUT and not (like the normal preparetoget request into STAGED).
    [r 1.2,2006-03-10,felixehm] Then we can use putdone from thge api to migrate the files.
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.11,2006-03-10,felixehm] Added new messages and again renamed the RepackDaemon to RepackFileMigrator
  * CASTOR2/castor/repack/RepackWorker.cpp:
  * CASTOR2/castor/repack/RepackWorker.hpp:
    [2006-03-14,felixehm] Added new functionality: now the user can do requests on the tapes in the repack system
  * CASTOR2/codeGeneration/Repack.xmi:
    [r 1.3,2006-03-17,felixehm] Added new Attributes to Acknowledgement
    [r 1.2,2006-03-13,felixehm] new Acknowledgement for Client Requests,
    [r 1.2,2006-03-13,felixehm] added attributes for segment
  * CASTOR2/common/sendscsicmd.c:
    [r1.16,2006-02-15,hcacote] tpdaemon uses sg0 device instead of sga
  * CASTOR2/dlf/dlfquery/base.cfg.php:
    [r 1.2,2006-01-23,sponcec3] Removed logins and passwords from CVS !
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.2,2006-03-13,felixehm] Added overview for repack classes
  * CASTOR2/h/Crmd_recv_from_rmnode.h:
    [r 1.2,2006-03-14,motiakov] New function added (Crmd_strip_local_domain)
  * CASTOR2/h/RfioTURL.h:
    [r 1.2,2006-03-22,gtaur] New parsing for TURL with params
  * CASTOR2/h/rm_macros.h:
  * CASTOR2/h/rm_messages.h:
    [2006-03-21,motiakov] Added DLF messages
    [r 1.3,2006-03-21,motiakov] Added DLF messages
  * CASTOR2/resourcemonitoring/Crmd_checkpoint.c:
  * CASTOR2/resourcemonitoring/Crmd_recv_from_maui.c:
  * CASTOR2/resourcemonitoring/Crmd_recv_from_users.c:
  * CASTOR2/resourcemonitoring/Crmd_survey.c:
  * CASTOR2/resourcemonitoring/Crmd_tape_feature.c:
  * CASTOR2/resourcemonitoring/rm_messages.c:
  * CASTOR2/resourcemonitoring/rmmaster.c:
    [2006-03-21,motiakov] Added DLF logging to RMMASTER.
  * CASTOR2/resourcemonitoring/Crmd_recv_from_rmnode.c:
    [r1.24,2006-03-21,motiakov] Added DLF logging to RMMASTER.
    [r1.22,2006-03-14,motiakov] Search rmnode by name, not by IP address
  * CASTOR2/resourcemonitoring/rmnode.c:
    [r1.25,2006-03-14,motiakov] Issue error message if RMMASTER_HOST is not defined in the configuration file,
    [r1.25,2006-03-14,motiakov] not rely on the default.
  * CASTOR2/rfio/RfioTURL.c:
    [r 1.4,2006-03-22,gtaur] New parsing for TURL with params
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [r1.12,2006-03-22,obarring] Fix "TapeCopy not in TAPECOPY_SELECTED status" problems
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.21,2006-03-21,obarring] Remove hacks for flagging tape FULL with freespace>0.
  * CASTOR2/stager/stager_mapper.c:
    [r 1.8,2006-03-22,gtaur] stage_mapper_setenv, fixed wrong variable line 162
  * CASTOR2/stager/stager_qry.man:
    [r1.12,2006-03-22,itglp] Files with diskcopies only in invalid status are returned as INVALID
    [r1.12,2006-03-22,itglp] by stager_qry. Man page updated accordingly.
    [r1.11,2006-03-16,itglp] Added the new syntax to be used for regexps
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.37,2006-03-22,itglp] Files with diskcopies only in invalid status are returned as INVALID
    [r1.37,2006-03-22,itglp] by stager_qry. Man page updated accordingly.
    [r1.36,2006-03-17,itglp] Removed calls to the NS, only CastorFile.lastKnownFileName is used.
    [r1.36,2006-03-17,itglp] Minor refactoring.
    [r1.35,2006-03-16,itglp] Added delete statements, fixed bug #15381 (stager_qry giving the same status
    [r1.35,2006-03-16,itglp] for files in different statuses)
  * CASTOR2/vmgr/vmgr_procreq.c:
    [r 1.6,2006-03-21,motiakov] Set estimated free space to bytes_written when vmgr_update is called with
    [r 1.6,2006-03-21,motiakov] TAPE_FULL and number of written files is zero.

 -- Giuseppe LO PRESTI <itglp@localhost.localdomain>  Fri, 24 Mar 2006 14:35:24 +0100

castor (2.0.3-3) unstable; urgency=low

  * Bug fix release on top of the 2.0.3-0 one (branching)
  * PROTO2/castor/Imakefile:
    [r1.120.0.2,2006-03-16,sponcec3] Introduce the changes from v122 here in order to issue a bug fix release

 -- sponcec3 <sponcec3@seblap.cern.ch>  Thu, 16 Mar 2006 15:47:11 +0100

castor (2.0.3-2) unstable; urgency=low

  * PROTO2/castor/Services.cpp:
    [r1.21,2006-03-03,itglp] Enhanced algorithm to load and instantiate services.
    [r1.21,2006-03-03,itglp] Cdlopen() used instead of dlopen().
  * PROTO2/castor/cleaning/CleaningDaemon.cpp:
  * PROTO2/castor/cleaning/CleaningDaemon.hpp:
  * PROTO2/castor/cleaning/HouseKeeping.cpp:
  * PROTO2/castor/cleaning/HouseKeeping.hpp:
  * PROTO2/castor/cleaning/SpringCleaning.cpp:
  * PROTO2/castor/cleaning/SpringCleaning.hpp:
    [2006-03-07,gtaur] Just one object  for OraCleanSvc
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
    [2006-03-03,felixehm] added new attribute originpool
  * PROTO2/castor/db/ora/OraCleanSvc.hpp:
    [r 1.4,2006-03-08,itglp] Fixed includes.
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.hpp:
    [2006-03-03,felixehm] added new attribute originpool
  * PROTO2/castor/repack/Imakefile:
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
    [2006-03-03,felixehm] New Modules:
    [2006-03-03,felixehm] RepackFileMigrator : marks the file, with are staged in CANBEMIGRATED
    [2006-03-03,felixehm] RepackFileStager   : old RepackDaemon - stages the files of a new repack request
    [2006-03-03,felixehm] corrected Server and Imakefile for new modules
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
    [2006-03-03,felixehm] changes for corrected removal of Repack Requests. Now done by the parameter 'R'.
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.8,2006-03-03,felixehm] The normal command is also now added to the list of possible commands for the repack process. If the requets has no valid command set, the server will do nothing.
  * PROTO2/castor/repack/RepackSubRequest.cpp:
  * PROTO2/castor/repack/RepackSubRequest.hpp:
    [2006-03-03,felixehm] new Attribute : originPool.
    [2006-03-03,felixehm] this is needed for the migration process, so the files can be migrated to the origin tapepool.
  * PROTO2/castor/repack/RepackWorker.cpp:
    [r1.13,2006-03-03,felixehm] improving removal of repack request (still, this is not sure, since we don't get any answer from the stager call.
    [r1.13,2006-03-03,felixehm] the origin tape pool is now stored with the subrequest
  * PROTO2/common/serror.c:
  * PROTO2/h/serrno.h:
    [2006-03-07,sponcec3] Inserted DNS specific error messages. They will be used by Cgethostbyname/addr
    [2006-03-07,sponcec3] Fixed missing messages leading to segfault when one wants to display them
  * PROTO2/config/Imake.rules:
    [r1.18,2006-03-02,itglp] Fixed rule to make install shared libraries with correct versioning.
  * PROTO2/debian/castor-lsf-plugin.postinst:
    [r 1.3,2006-03-02,itglp] Changed chmod 777 -> 775 /var/spool/scheduler.
  * PROTO2/hsmtools/castorReconcile:
    [r 1.2,2006-03-09,aearl] bug fixed version - better handling of rmmaster and database failures so that
    [r 1.2,2006-03-09,aearl] processes don't hang around forever trying to get info from non-existant
    [r 1.2,2006-03-09,aearl] clusters
  * PROTO2/hsmtools/disknodeShutdown:
    [r 1.3,2006-03-09,aearl] three bug fixes - extra quotes in help section, @NODE -> @NODES in main and an extra } to solve issue in main
  * PROTO2/job/stagerJob.shell:
    [r1.38,2006-03-02,itglp] Unset STAGER_HOST & STAGER_PORT so that the job takes the parameters
    [r1.38,2006-03-02,itglp] from castor.conf and not from the user's profile.
  * PROTO2/rfio/Imakefile:
    [r1.12,2006-03-02,jdurand] Restrict -lxfs to rfiod
    [r1.12,2006-03-02,jdurand] Compile rfio_alignedbuf.Osuf rfio_xfsprealloc.Osuf only if UseXFSPrealloc is set (dependency problem: rfio_alignedbuf will call xfs routines within rfio_xfsprealloc)
  * PROTO2/shlib/makeshlib.sh:
    [r 1.4,2006-03-02,itglp] Fixed rule to make install shared libraries with correct versioning.
  * CASTOR/tape/wrttpmrk.c:
    [r 1.6,2006-03-09,hcacote] 
    [r 1.6,2006-03-09,hcacote] write filemark controlled by entry in castor.conf default immediate bit off
  * PROTO2/test/security/Csec_client.c:
    [r 1.5,2006-03-07,lopic3] 0 instead of delegation flag
  * PROTO2/test/security/Csec_server.c:
    [r 1.3,2006-03-07,lopic3] no delegation

 -- sponcec3 <sponcec3@seblap.cern.ch>  Fri, 10 Mar 2006 10:33:40 +0100

castor (2.0.3-1) unstable; urgency=low

  * PROTO2/castor/Constants.hpp:
    [r1.58,2006-02-20,gtaur] SVC_ORACLEANSVC = 37 added
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.hpp:
  * PROTO2/castor/repack/RepackSubRequest.cpp:
  * PROTO2/castor/repack/RepackSubRequest.hpp:
    [2006-02-17,felixehm] new member cuuid. the cuuid is stored with the subrequest, so it can be followd easily in the dlf
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.hpp:
    [2006-02-23,felixehm] Added command member for specifying repack commands like removal of tapes from repack, etc.
  * PROTO2/castor/repack/DatabaseHelper.cpp:
  * PROTO2/castor/repack/DatabaseHelper.hpp:
    [r 1.9,2006-02-17,felixehm] Added new function for RepackCleaner. substracted common part into new private method
    [r1.10,2006-02-23,felixehm] added new function to remove a subrequest. also the stager request is removed by calling the api function. added new function getSubRequestByVid. usefull if only the vid is known.
  * PROTO2/castor/repack/FileListHelper.cpp:
    [r1.11,2006-02-23,felixehm] the getFileListSegs method now returns a value if an error occurs
    [r1.10,2006-02-17,felixehm] Removed unnecessary parts (Cns_getpath) and changed a DLF Message Number
  * PROTO2/castor/repack/FileListHelper.hpp:
    [r 1.6,2006-02-23,felixehm] the getFileListSegs method now returns a value if an error occurs
  * PROTO2/castor/repack/FileOrganizer.cpp:
  * PROTO2/castor/repack/FileOrganizer.hpp:
    [r 1.7,2006-02-17,felixehm] Corrected copy of strings to stager request and added deallocation of them after use. The filelass is now a constant. renamed vars
  * PROTO2/castor/repack/Imakefile:
    [r 1.7,2006-02-23,felixehm] renamed FileOrganizer to RepackDaemon, this also has to be done here
    [r 1.6,2006-02-17,felixehm] added new Class for RepackServer : RepackCleaner
  * PROTO2/castor/repack/RepackClient.cpp:
    [r 1.9,2006-02-17,felixehm] the Repack port is now hard-coded, but still changeable in enviroment
    [r1.10,2006-02-23,felixehm] added new functionality: remove a running repack Request
    [r1.10,2006-02-23,felixehm] 
    [r1.10,2006-02-23,felixehm] added little helper method to add the given tapes to the subrequest
  * PROTO2/castor/repack/RepackClient.hpp:
    [r 1.7,2006-02-23,felixehm] added new functionality: remove a running repack Request
    [r 1.7,2006-02-23,felixehm] 
    [r 1.7,2006-02-23,felixehm] added little helper method to add the given tapes to the subrequest
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.7,2006-02-23,felixehm] added RepackCommands.
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
    [2006-02-23,felixehm] Added command member for specifying repack commands like removal of tapes from repack, etc.
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
    [2006-02-17,felixehm] new Thread running : RepackCleaner
  * PROTO2/castor/repack/RepackWorker.cpp:
  * PROTO2/castor/repack/RepackWorker.hpp:
    [r1.12,2006-02-23,felixehm] now better handling of the RepackRequest by checking the command member of a RepackRequest. there is now a own method for each functionality (repack and removal of tapes from repack)
    [r1.11,2006-02-17,felixehm] Renamed Method (better understanding)
    [r1.11,2006-02-17,felixehm] if a tape is not found, has invalid status or is marked as free the DLF message is an WARNING not an ERROR.

  * PROTO2/castor/server/BaseDaemon.cpp:
  * PROTO2/castor/server/BaseDaemon.hpp:
  * PROTO2/castor/server/BaseServer.cpp:
  * PROTO2/castor/server/BaseServer.hpp:
  * PROTO2/castor/server/BaseThreadPool.cpp:
  * PROTO2/castor/server/BaseThreadPool.hpp:
  * PROTO2/castor/server/ListenerThreadPool.hpp:
  * PROTO2/castor/server/Mutex.cpp:
  * PROTO2/castor/server/Mutex.hpp:
  * PROTO2/castor/server/NotificationThread.cpp:
  * PROTO2/castor/server/NotificationThread.hpp:
  * PROTO2/castor/server/SelectProcessThread.hpp:
  * PROTO2/castor/server/ServiceThread.cpp:
  * PROTO2/castor/server/ServiceThread.hpp:
  * PROTO2/castor/server/SignalThreadPool.cpp:
  * PROTO2/castor/server/SignalThreadPool.hpp:
    [2006-02-20,itglp] First implementation of NotificationThread. Mutex timeout can be specified as parameter, to be passed to BaseThreadPool's ctor.
  * PROTO2/castor/server/IThread.hpp:
    [r 1.6,2006-02-20,itglp] Removed throw() from run() method signature.
  * PROTO2/castor/server/Mutex.cpp:
  * PROTO2/castor/server/Mutex.hpp:
    [2006-02-22,itglp] Fixed timeout handling.
  * PROTO2/config/site.def:
    [r1.86,2006-02-22,gtaur] CleaningConfiFile path defined
    [r1.85,2006-02-20,gtaur] BuildCleaning added
    [r1.84,2006-02-20,jdurand] Added: #define UseXFSPrealloc YES
  * PROTO2/debian/control:
    [r1.40,2006-02-20,jdurand] Added xfslibs-dev in Build-Depends
  * PROTO2/maketar.sh:
    [r1.44,2006-02-20,jdurand] Consider only the first Build-Depend for debian/RedHat compat list
    [r1.43,2006-02-20,jdurand] Force UseXFSPrealloc to YES in any case
  * PROTO2/rfio/Imakefile:
    [r1.11,2006-02-20,jdurand] Added rfio_alignedbuf.Osuf rfio_xfsprealloc.Osuf objects
  * PROTO2/rfio/rfio_call64.c:
  * PROTO2/rfio/rfio_calls.c:
    [2006-02-20,jdurand] Peter Kelemen's xfs and direct i/o hooks
  * CASTOR/tape/rbtsubr.c:
  * CASTOR/tape/smcsubr2.c:
    [2006-03-01,hcacote] if medium not present smcdismount returns RBT_OK and tapedrive is not configured down
  * PROTO2/test/stager/graphicTest.py:
    [r 1.2,2006-02-28,gtaur] better solution for path to run test scripts.

 -- Sebastien Ponce <sponcec3@pcitds13>  Thu,  2 Mar 2006 09:09:36 +0100

castor (2.0.3-0) unstable; urgency=low

  * PROTO2/CASTOR.spec:
    [r1.40,2006-02-17,sponcec3] Fix castor version for the install rule and the building of hsmtools/dbtools when oracle is not present
    [r1.39,2006-02-16,sponcec3] Don't build hsmtools package if ORACLE is not present
    [r1.38,2006-02-16,sponcec3] Fix case for BuildVDQMCpp
    [r1.37,2006-02-15,sponcec3] Do not build new Vdqm when ORACLE not available
  * PROTO2/castor/BaseServer.cpp:
  * PROTO2/castor/BaseServer.hpp:
    [2006-02-07,itglp] Removed old BaseServer, now replaced by castor::server::BaseServer.
  * PROTO2/castor/Constants.cpp:
  * PROTO2/castor/Constants.hpp:
    [2006-02-07,itglp] FileQueryResponse flagged as deleted type, fixed constants for Repack.
  * PROTO2/castor/Imakefile:
    [r1.120,2006-02-07,itglp] Removed FileQueryResponse compilation.
    [r1.119,2006-02-01,sponcec3] Added TooBig exception to C++ framework, corresponding to E2BIG
  * PROTO2/castor/client/BaseClient.cpp:
    [r1.37,2006-02-16,sponcec3] Fix the choice of the RH port in the client
    [r1.36,2006-02-03,sponcec3] fix initialization of m_hasAuthorizationId
  * PROTO2/castor/db/DbBaseObj.cpp:
  * PROTO2/castor/db/DbBaseObj.hpp:
  * PROTO2/castor/db/DbCommonSvc.cpp:
  * PROTO2/castor/db/DbCommonSvc.hpp:
    [2006-02-01,itglp] Moved commit() and rollback() methods up one level.
  * PROTO2/castor/db/analyze/currentStatus.sql:
  * PROTO2/castor/db/analyze/solutions.sql:
    [2006-02-16,sponcec3] Added cleanup of finished subrequests
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_oracle_drop.sql:
    [2006-02-16,sponcec3] Integrated changes from oracleTrailer.sql up to version 1.240
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_postgres_create.sql:
  * PROTO2/castor/db/cnv/DbCastorFileCnv.cpp:
  * PROTO2/castor/db/ora/OraCastorFileCnv.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/ora/OraStagerSvc.cpp:
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
  * PROTO2/castor/db/oracleTrailer.sql:
  * PROTO2/castor/io/StreamCastorFileCnv.cpp:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/castor/stager/CastorFile.cpp:
  * PROTO2/castor/stager/CastorFile.h:
  * PROTO2/castor/stager/CastorFile.hpp:
  * PROTO2/castor/stager/CastorFileCInt.cpp:
  * PROTO2/castor/stager/DiskCopyInfo.cpp:
  * PROTO2/castor/stager/DiskCopyInfo.h:
  * PROTO2/castor/stager/DiskCopyInfo.hpp:
  * PROTO2/castor/stager/DiskCopyInfoCInt.cpp:
  * PROTO2/castor/stager/IStagerSvc.h:
  * PROTO2/castor/stager/IStagerSvc.hpp:
  * PROTO2/castor/stager/IStagerSvcCInt.cpp:
  * PROTO2/h/stager_catalogInterface.h:
  * PROTO2/stager/stager_db_service.c:
  * PROTO2/stager/stager_query_service.cpp:
    [2006-02-01,sponcec3] Implementation of stage_qry with regexp support
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.hpp:
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.hpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.hpp:
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
  * PROTO2/castor/repack/RepackSegment.cpp:
  * PROTO2/castor/repack/RepackSegment.hpp:
  * PROTO2/castor/repack/RepackSubRequest.cpp:
  * PROTO2/castor/repack/RepackSubRequest.hpp:
    [2006-02-02,felixehm] changed RepackSubrequest.size to xsize, due to naming problems with oracle
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.hpp:
  * PROTO2/castor/repack/RepackSegment.cpp:
  * PROTO2/castor/repack/RepackSegment.hpp:
    [2006-02-14,felixehm] compression and filesec for positioning now also stored
  * PROTO2/castor/db/cnv/Imakefile:
    [r 1.6,2006-02-15,sponcec3] Fixed clean rule
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/newora/OraCnvSvc.cpp:
  * PROTO2/castor/db/ora/OraCnvSvc.cpp:
  * PROTO2/castor/db/oracleTrailer.sql:
    [2006-02-16,sponcec3] Changed DB version
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.242,2006-02-14,gtaur] Fixed clashing commits. Revision 1.241 should never be used
    [r1.241,2006-02-07,gtaur] status for archived subrequests and procedures to delete old subrequests added.
    [r1.240,2006-02-07,sponcec3] Fix the query_line cursor for new stqger_query (forgot to commit it before)
  * PROTO2/castor/io/StreamFileQueryResponseCnv.cpp:
  * PROTO2/castor/io/StreamFileQueryResponseCnv.hpp:
  * PROTO2/castor/rh/FileQueryResponse.cpp:
  * PROTO2/castor/rh/FileQueryResponse.h:
  * PROTO2/castor/rh/FileQueryResponse.hpp:
  * PROTO2/castor/rh/FileQueryResponseCInt.cpp:
  * PROTO2/stager/stager_client_api_query.cpp:
    [2006-02-07,itglp] FileQueryResponse was replaced by FileQryResponse.
  * PROTO2/castor/repack/DatabaseHelper.cpp:
  * PROTO2/castor/repack/DatabaseHelper.hpp:
    [2006-02-14,felixehm] changed Method name (is_stored)
    [2006-02-14,felixehm] improve DLF logging
    [2006-02-14,felixehm] removed 1 possible memory leak
    [2006-02-07,felixehm] Changed update method for Subrequest.
    [2006-02-02,felixehm] 1.New function for polling DB (needed by FileOrganizer)
    [2006-02-02,felixehm] 2.New SQL Statements
    [2006-02-02,felixehm] 3.Inherits now from DbBaseObj for comfortable access to DB
    [2006-02-02,felixehm] 4.Provides function for updating Object in DB
    [2006-02-02,felixehm] 5.provides function to check, if a vid is already in DB (needed in storeRequest)
  * PROTO2/castor/repack/FileListHelper.cpp:
  * PROTO2/castor/repack/FileListHelper.hpp:
    [2006-02-14,felixehm] removed mem leak for m_ns
    [2006-02-14,felixehm] Added the initialisation of the m_ns (nameserver var) by castor config file
    [2006-02-14,felixehm] Added cuuid for message follow
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] very important : not parent_fileid, but fileid is the correct one!!
    [2006-02-14,felixehm] more information is stored with the segment
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] and last but not least, DLF
    [2006-02-03,felixehm] Experimental version for finding error during update in db.
    [2006-02-03,felixehm] two connections are opened, this cause a lock.
    [2006-02-02,felixehm] creation of sorted list of file, which are on tape
    [2006-02-02,felixehm] function returns now only the parent_fileids, not the full path -> faster
  * PROTO2/castor/repack/FileOrganizer.cpp:
  * PROTO2/castor/repack/FileOrganizer.hpp:
    [2006-02-14,felixehm] added cuuid information
    [2006-02-14,felixehm] storing request in to DB AFTER stage_command
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] stages file
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] removed mistake for putting filenames into stager_request
    [2006-02-14,felixehm] filehelper is now dynamically
    [2006-02-07,felixehm] Added new Messages for DLF
    [2006-02-07,felixehm] If a request job arrives, now the segments are added and the subrequest updated in DB
    [2006-02-07,felixehm] removed mem lack
    [2006-02-03,felixehm] Experimental version for finding error during update in db.
    [2006-02-03,felixehm] two connections are opened, this cause a lock.
    [2006-02-02,felixehm] Added polling time from CommonHeader
    [2006-02-02,felixehm] Inheritnace from IThread, so the Organizer can be started as a ThreadPool from RepackServer
    [2006-02-02,felixehm] now polling DB for new Requests and  get the filenames - no staging right until now
    [2006-02-02,felixehm] The state of the Request will be changed before staging files : implemented!
  * PROTO2/castor/repack/Imakefile:
    [r 1.5,2006-02-02,felixehm] 1.removed compilation of DbCnvSvc (this is already provied in Library
    [r 1.5,2006-02-02,felixehm] 2.Added new "Deamon" FileOrganzier"
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
    [2006-02-14,felixehm] added help section
    [2006-02-14,felixehm] removed DLF logging
    [2006-02-07,felixehm] Added new Feature : Tapepool can be repacked!
    [2006-02-07,felixehm] Added Header for MesageAck from Server (formerly included with RepackServer.hpp)
    [2006-02-02,felixehm] Added machine name to the Request
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.6,2006-02-14,felixehm] no macros  (removed defines)
    [r 1.5,2006-02-02,felixehm] Removed REPACK_POLL due to compiling probs - little mistake, yes, yes
    [r 1.4,2006-02-02,felixehm] added defines to namespace of castor::repack
  * PROTO2/castor/repack/RepackRequestCInt.cpp:
    [r 1.7,2006-02-02,felixehm] not neccessary
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
    [2006-02-14,felixehm] now the port is in repack namespace
    [2006-02-07,felixehm] Added new Messages
    [2006-02-07,felixehm] 
    [2006-02-07,felixehm] Test with new ListenerThread runs successfully. Former version of ListenerThreadPool
    [2006-02-07,felixehm] was not created properly (blocked the main process)
    [2006-02-03,felixehm] Experimental version for finding error during update in db.
    [2006-02-03,felixehm] two connections are opened, this cause a lock.
    [2006-02-02,felixehm] changed inheritance to BaseDaemon
    [2006-02-02,felixehm] added new ThreadPool FileOrganizer for querying the DB
    [2006-02-02,felixehm] removed Messages (they are in RepackWorker)
  * PROTO2/castor/repack/RepackWorker.cpp:
    [r 1.9,2006-02-07,felixehm] Removed storing Segments (takes to long for request handling)
    [r 1.9,2006-02-07,felixehm] changed some messages
    [r 1.9,2006-02-07,felixehm] now tape pool is handled
    [r 1.8,2006-02-03,felixehm] Experimental version for finding error during update in db.
    [r 1.8,2006-02-03,felixehm] two connections are opened, this cause a lock.
    [r 1.7,2006-02-02,felixehm] added new Messages for FileOrganizer;
    [r 1.7,2006-02-02,felixehm] removed init() due to changes of IThread
    [r1.10,2006-02-14,felixehm] Added new method to check tape status
    [r1.10,2006-02-14,felixehm] cleaned code and improve messages
  * PROTO2/castor/repack/RepackWorker.hpp:
    [r 1.8,2006-02-14,felixehm] Added new method to check tape status
    [r 1.8,2006-02-14,felixehm] cleaned code and improve messages
    [r 1.7,2006-02-02,felixehm] added new Messages for FileOrganizer;
    [r 1.7,2006-02-02,felixehm] removed init() due to changes of IThread
  * PROTO2/castor/rh/RHThread.cpp:
  * PROTO2/castor/rh/RHThread.hpp:
    [2006-02-01,itglp] Fixed thread-unsafe condition.
  * PROTO2/castor/rh/Server.cpp:
    [r1.45,2006-02-06,itglp] Use the ListenerPool without spawning a thread for the loop.
  * PROTO2/castor/server/BaseThreadPool.cpp:
    [r 1.8,2006-02-01,itglp] Changed interface of threads to fix thread-unsafe condition shown in the RH.
  * PROTO2/castor/server/BaseThreadPool.hpp:
    [r 1.8,2006-02-06,itglp] Made Listener pool on a separated thread by default.
    [r 1.7,2006-02-02,itglp] Made this class abstract to prevent direct usage.
  * PROTO2/castor/server/IThread.hpp:
    [r 1.5,2006-02-02,itglp] Better comment to explain the interface.
    [r 1.4,2006-02-01,itglp] Changed interface of threads to fix thread-unsafe condition shown in the RH.
  * PROTO2/castor/server/ListenerThreadPool.cpp:
  * PROTO2/castor/server/ListenerThreadPool.hpp:
    [2006-02-06,itglp] Made Listener pool on a separated thread by default.
  * PROTO2/castor/server/NotificationThread.cpp:
  * PROTO2/castor/server/NotificationThread.hpp:
  * PROTO2/castor/server/SelectProcessThread.hpp:
  * PROTO2/castor/server/ServiceThread.cpp:
  * PROTO2/castor/server/ServiceThread.hpp:
    [2006-02-01,itglp] Changed interface of threads to fix thread-unsafe condition shown in the RH.
  * CASTOR/common/sendscsicmd.c:
    [r1.16,2006-02-15,hcacote] tpdaemon uses sg0 device instead of sga
  * PROTO2/config/Imake.rules:
    [r1.17,2006-02-13,itglp] Revert last commit.
    [r1.16,2006-02-10,itglp] Added macro to check Castor version.
  * PROTO2/config/Project.tmpl:
  * PROTO2/config/site.def:
  * PROTO2/dlf/Imakefile:
  * PROTO2/debian/control:
  * PROTO2/debian/rules:
    [2006-02-16,sponcec3] dlfgui is now packaged. You can set BuildDlfGui to YES and make install will install it
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/MigHunter.init:
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rtcpclientd.init:
  * PROTO2/debian/stager.init:
  * PROTO2/debian/vmgrdaemon.init:
    [2006-02-07,itglp] Removed check for ORACLE_HOME since now it is not needed with oracle-instantclient.
  * PROTO2/debian/castor-dbtools.install.perm:
  * PROTO2/debian/castor-dbtools.manpages:
  * PROTO2/debian/castor-hsmtools.install.perm:
  * PROTO2/debian/castor-hsmtools.manpages:
    [2006-02-16,sponcec3] move vdqmDBInit from the hsmtools to the dbtools package
  * PROTO2/debian/castor-job.postinst:
    [r 1.3,2006-02-07,itglp] Fixed missing commands.
  * PROTO2/debian/castor.conf:
    [r1.12,2006-02-01,sponcec3] Included new option FILEQUERY MAXNBRESPONSES to default castor.conf
  * PROTO2/debian/castor.sysconfig:
    [r 1.3,2006-02-07,itglp] Removed db related settings, not needed with oracle-instantclient.
  * PROTO2/debian/if.has_oracle:
    [r 1.5,2006-02-16,sponcec3] it is not hsmtools but dbtools that should not be compile if ORACLE in not present
    [r 1.4,2006-02-16,sponcec3] Don't compile VDQM server if Oracle is not present
    [r 1.3,2006-02-16,sponcec3] Don't build hsmtools package if ORACLE is not present
  * PROTO2/debian/lsf.sysconfig:
    [r 1.2,2006-02-07,itglp] Removed db related settings, not needed with oracle-instantclient.
  * PROTO2/dlf/dlforasetup.sh:
    [r 1.6,2006-02-10,itglp] Added Repack in the list of facilities.
  * PROTO2/h/stager_client_api_common.h:
    [r 1.3,2006-02-02,sponcec3] Added stage_setid stage_getid and stage_resetid to stager client interface
  * PROTO2/job/stagerJob.c:
    [r1.148,2006-01-31,itglp] Fixed log call for setServer with the correct argument.
  * PROTO2/maketar.sh:
    [r1.41,2006-02-17,sponcec3] Fix castor version for the install rule
    [r1.40,2006-02-13,itglp] When version is overridden, override shlib/makeshlib.sh too.
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.81,2006-02-08,jdurand] Re-enabled the job submission in three steps otherwise there is a time-window where a job can be started by LSF without the message box No 1 posted (despite the plugin will say NO in all steps), i.e.:
    [r1.81,2006-02-08,jdurand] submit job in PSUSP state
    [r1.81,2006-02-08,jdurand] post the message box No 1
    [r1.81,2006-02-08,jdurand] Release job
  * PROTO2/scheduler/LSF/schmod_castor.c:
    [r1.37,2006-02-08,jdurand] Added JOBID when logging the normal tracing operation: New phase ok, Notify phase ok, Delete phase ok
    [r1.36,2006-02-08,jdurand] Add internal code debug, disabled by default
    [r1.36,2006-02-08,jdurand] Add jobid whenever possible to error logs
    [r1.35,2006-02-07,jdurand] Remove internal fork - works with LSF 6.1-24
  * PROTO2/shlib/Imakefile:
    [r1.46,2006-02-13,itglp] Changed the rule to build shared libraries: makeshlib.sh is used now.
  * PROTO2/stager/stager.c:
    [r1.85,2006-01-31,sponcec3] Allows the stager to start when dlf not running
  * PROTO2/stager/stager_client_api_common.cpp:
    [r1.20,2006-02-03,sponcec3] Made the setClientAuthorizationId method fully C++ compliant, by using exceptions instead of int return code
    [r1.19,2006-02-02,sponcec3] New version of setClientAuthorizationId, purely C++ and using namespaces

  * PROTO2/stager/stager_qry.man:
    [r1.10,2006-02-01,sponcec3] Implemented limitation on the number of responses a filequery may give
  * PROTO2/tape/Imakefile:
    [r 1.5,2006-02-16,sponcec3] Support for x86_64 (CDK lib is in a different place on this platform)
  * CASTOR/tape/wrttpmrk.c:
    [r 1.5,2006-02-14,hcacote] write filemarks with sg driver and immediate bit set
  * PROTO2/tools/makeMagicNumbers.csh:
    [r 1.6,2006-02-15,sponcec3] better script that parses more files in order to not forget constants and put better titles
    [r 1.5,2006-01-31,itglp] Improved scan to take into account more codes files.

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 17 Feb 2006 16:40:00 +0100

castor (2.0.2-10) unstable; urgency=low

  * PROTO2/castor/Constants.hpp:
    [r1.56,2006-01-23,felixehm] Added new Repack Object for Request handling
  * PROTO2/castor/client/BaseClient.cpp:
  * PROTO2/castor/client/BaseClient.hpp:
    [r1.15,2006-01-30,bcouturi] AUTHID Added Authorization ID to client
  * PROTO2/castor/db/newora/Imakefile:
    [r 1.4,2006-01-20,itglp] Take into account the flag UseOraCDBC to compile the new db access layer for Oracle.
  * PROTO2/castor/db/newora/OraCnvSvc.cpp:
  * PROTO2/castor/db/newora/OraCommonSvc.cpp:
  * PROTO2/castor/db/newora/OraCommonSvc.hpp:
  * PROTO2/castor/db/newora/OraStatement.hpp:
  * PROTO2/castor/db/newora/OraTapeSvc.cpp:
  * PROTO2/castor/db/ora/OraFSSvc.cpp:
  * PROTO2/castor/db/ora/OraFSSvc.hpp:
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
  * PROTO2/castor/db/ora/OraJobSvc.cpp:
  * PROTO2/castor/db/ora/OraJobSvc.hpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/ora/OraStagerSvc.cpp:
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
  * PROTO2/castor/db/ora/OraTapeSvc.hpp:
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.25,2006-01-27,itglp] Fixes to compile libcastorCommonOra taking into account UseOraCDBC.
  * PROTO2/castor/dlfbuf.h:
    [r1.11,2006-01-30,sponcec3] Fixed proper output of error message in case of Unable to initialize DLF
  * PROTO2/castor/repack/DatabaseHelper.cpp:
  * PROTO2/castor/repack/DatabaseHelper.hpp:
  * PROTO2/castor/repack/FileListHelper.cpp:
  * PROTO2/castor/repack/Imakefile:
    [r 1.5,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
    [r 1.4,2006-01-25,felixehm] first implementation of database handling
    [r 1.4,2006-01-25,felixehm] SubRequest handling
    [r 1.3,2006-01-23,felixehm] Added new RepackSubRequest for multi-tape requests
    [r 1.4,2006-01-25,felixehm] first implementation of database handling
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
    [r 1.5,2006-01-27,felixehm] Added sending response to client, after storing the Request
    [r 1.4,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
    [r 1.3,2006-01-23,felixehm] Added new RepackSubRequest for multi-tape requests
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.3,2006-01-26,felixehm] Added new FileOrganizer and added status flag to RepackSubRequest
    [r 1.2,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
  * PROTO2/castor/repack/RepackRequestCInt.cpp:
  * PROTO2/castor/repack/RepackSegment.cpp:
  * PROTO2/castor/repack/RepackSegment.hpp:
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
  * PROTO2/castor/repack/RepackWorker.cpp:
  * PROTO2/castor/repack/RepackWorker.hpp:
    [r 1.5,2006-01-26,felixehm] Added new FileOrganizer and added status flag to RepackSubRequest
    [r 1.4,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
    [r 1.3,2006-01-25,felixehm] first implementation of database handling
    [r 1.3,2006-01-25,felixehm] SubRequest handling
    [r 1.2,2006-01-23,felixehm] Added new RepackSubRequest for multi-tape requests
  * PROTO2/castor/rh/Imakefile:
    [r 1.9,2006-01-27,itglp] Added explicitely RHThread to the sources (was included by dependencies).
  * PROTO2/castor/server/ListenerThreadPool.cpp:
    [r 1.3,2006-01-30,sponcec3] Removed double deletion of m_thread
  * PROTO2/config/Library.tmpl:
    [r1.28,2006-01-20,itglp] Fixed source path for the castor-oracle library.
    [r1.27,2006-01-20,itglp] Fixed rule for UseOraCDBC flag
  * PROTO2/config/LibraryDeps.tmpl:
    [r1.12,2006-01-26,bcouturi] Added dependency on Cupv to Cns when UseCupv is on
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/MigHunter.init:
    [r 1.5,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/castor-dlf-server.install.perm:
    [r 1.3,2006-01-27,itglp] Added sysconfig.
  * PROTO2/debian/castor-job.install.perm:
  * PROTO2/debian/castor-lsf-plugin.install.perm:
    [r 1.4,2006-01-27,itglp] Added sysconfig.
    [r 1.2,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/castor-rtcopy-clientserver.install.perm:
  * PROTO2/debian/castor-rtcopy-clientserver.postinst:
    [r 1.9,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/castor-stager-server.install.perm:
    [r 1.4,2006-01-30,itglp] Added RMNODECONFIG.example
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rmmaster.init:
    [r 1.3,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/rmmaster.sysconfig:
    [r 1.3,2006-01-30,itglp] Removed file, was already in resourcemonitoring.
  * PROTO2/debian/rtcpclientd.init:
    [r 1.5,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/stager.init:
    [r 1.7,2006-01-23,itglp] Fixed check of TNS_ADMIN and ORACLE_HOME.
  * PROTO2/debian/vmgrdaemon.init:
    [r 1.5,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * CASTOR/dlf/dlfquery/base.cfg.php:
    [r 1.2,2006,sponcec3] Removed logins and passwords from CVS !
  * PROTO2/h/Castor_limits.h:
    [r 1.9,2006-01-26,bcouturi] Added new limit for name server with ACLs
  * PROTO2/h/Cns_api.h:
  * PROTO2/h/Cns_constants.h:
  * PROTO2/h/Cns_server.h:
    [r 1.6,2006-01-26,bcouturi] Changed Cns headers for NS with ACLs
  * PROTO2/h/serrno.h:
    [r1.12,2006-01-26,bcouturi] Added new error for NS with ACLs
  * PROTO2/h/stager_client_api_common.h:
    [r 1.2,2006-01-30,bcouturi] AUTHID Added new fields to stager per thread structure for Authorization ID
  * PROTO2/lib/Imakefile:
    [r1.20,2006-01-20,itglp] Fixed rule to take into account the new flag UseOraCDBC.
  * PROTO2/maketar.sh:
    [r1.39,2006-01-27,itglp] Removed UseMAUI from the 'YES' list.
  * PROTO2/ns/Cns_access.c:
  * PROTO2/ns/Cns_auth.c:
  * PROTO2/ns/Cns_chclass.c:
  * PROTO2/ns/Cns_chdir.c:
  * PROTO2/ns/Cns_chmod.c:
  * PROTO2/ns/Cns_chown.c:
  * PROTO2/ns/Cns_creat.c:
  * PROTO2/ns/Cns_delcomment.c:
  * PROTO2/ns/Cns_delete.c:
  * PROTO2/ns/Cns_deleteclass.c:
  * PROTO2/ns/Cns_enterclass.c:
  * PROTO2/ns/Cns_getcomment.c:
  * PROTO2/ns/Cns_getpath.c:
  * PROTO2/ns/Cns_getsegattrs.c:
  * PROTO2/ns/Cns_listclass.c:
  * PROTO2/ns/Cns_listtape.c:
  * PROTO2/ns/Cns_main.c:
  * PROTO2/ns/Cns_mkdir.c:
  * PROTO2/ns/Cns_modifyclass.c:
  * PROTO2/ns/Cns_opendir.c:
  * PROTO2/ns/Cns_procreq.c:
  * PROTO2/ns/Cns_queryclass.c:
  * PROTO2/ns/Cns_readdir.c:
  * PROTO2/ns/Cns_readdirc.c:
  * PROTO2/ns/Cns_readdirx.c:
  * PROTO2/ns/Cns_readdirxc.c:
  * PROTO2/ns/Cns_readdirxt.c:
  * PROTO2/ns/Cns_rename.c:
  * PROTO2/ns/Cns_replaceseg.c:
  * PROTO2/ns/Cns_rmdir.c:
  * PROTO2/ns/Cns_setatime.c:
  * PROTO2/ns/Cns_setcomment.c:
  * PROTO2/ns/Cns_setfsize.c:
  * PROTO2/ns/Cns_setsegattrs.c:
  * PROTO2/ns/Cns_stat.c:
  * PROTO2/ns/Cns_undelete.c:
  * PROTO2/ns/Cns_unlink.c:
  * PROTO2/ns/Cns_updateseg_checksum.c:
  * PROTO2/ns/Cns_utime.c:
  * PROTO2/ns/Imakefile:
  * PROTO2/ns/nsdaemon.sysconfig:
  * PROTO2/ns/send2nsd.c:
    [r 1.8,2006-01-26,bcouturi] Imported new version of name server with ACLs
  * PROTO2/resourcemonitoring/rmmaster.sysconfig:
    [r 1.2,2006-01-30,itglp] Fixed options to enable LSF in rmmaster.
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.141,2006-01-20,obarring] Don't log ENOENT from bestTapeCopyForStream() as an error
  * PROTO2/shlib/Imakefile:
    [r1.45,2006-01-25,felixehm] changed built order of libcastorCnvs.so, it has to be created before libshift.so
  * PROTO2/stager/stager_client_api_common.cpp:
    [r1.18,2006-01-30,bcouturi] AUTHID Added per thread Authorization ID to the API
  * CASTOR/tape/Ctape_dmpfil.c:
    [r1.25,2006,hcacote] use maxblksize from devinfo if no -b specified in cmmand line

 -- Giuseppe LO PRESTI <itglp@localhost.localdomain>  Tue, 31 Jan 2006 16:07:12 +0100

castor (2.0.2-9) unstable; urgency=low

  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.238,2006-01-18,sponcec3] Fixed getUpdateStart so that disk2diskcopies are allowed from nodes in DRAINING status
  * PROTO2/castor/io/AbstractSocket.cpp:
    [r 1.6,2006-01-17,itglp] Set errno when host not found.
  * PROTO2/castor/Constants.hpp:
    [r1.55,2006-01-17,felixehm] Added new Objects for Repack Project
  * PROTO2/castor/Imakefile:
    [r1.118,2006-01-18,felixehm] Added Repack directory for autom. compilation
  * PROTO2/castor/repack/FileListHelper.cpp:
  * PROTO2/castor/repack/Imakefile:
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
  * PROTO2/castor/repack/RepackRequestCInt.cpp:
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
  * PROTO2/castor/repack/RepackWorker.cpp:
  * PROTO2/castor/repack/RepackWorker.hpp:
    [2006-01-18,felixehm] changed Server to new BaseServer, new filelisthelper
  * PROTO2/castor/rh/RHThread.cpp:
    [r 1.2,2006-01-18,sponcec3] Added missing include that made compilation fail on gcc 4
  * PROTO2/castor/server/SelectProcessThread.hpp:
    [r 1.3,2006-01-17,itglp] Fixed run() method declaration.
  * PROTO2/config/LibraryDeps.tmpl:
    [r1.11,2006-01-18,jdurand] Fixed dependencies for rfio
  * PROTO2/config/Project.tmpl:
    [r1.51,2006-01-20,itglp] Added UseOraCDBC to enable the new db access layer for Oracle.
    [r1.50,2006-01-18,felixehm] Added Repack Project
  * PROTO2/config/site.def:
    [r1.78,2006-01-20,itglp] Added UseOraCDBC to enable the new db access layer for Oracle.
    [r1.77,2006-01-18,felixehm] Corrected Buildname for Repack
    [r1.76,2006-01-18,felixehm] Added Repack Project
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.17,2006-01-16,motiakov] Commented non thread-safe code.
  * PROTO2/rtcopy/rtcpcldcommon.c:
    [r1.32,2006-01-20,obarring] Don't log TAPE VOLUMEs OVERFLOW as an error
  * PROTO2/shlib/Imakefile:
    [r1.44,2006-01-20,itglp] Fix the dependencies on the libcastorCnvs.so.
  * PROTO2/stager/stager_qry.c:
    [r1.12,2006-01-17,itglp] Fixed segfault when the stager host is not properly setup.

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 20 Jan 2006 10:54:28 +0100

castor (2.0.2-8) unstable; urgency=low

  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.39,2005-12-08,mbraeger] Solved the bug of showqueues in another way, than in the last version. Both ways are equivalent and works, but this version is more elegant and faster.
  * PROTO2/castor/Imakefile:
    [r1.117,2006-01-13,itglp] Changes to compile the castor::server package.
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
    [2006-01-12,itglp] Fixed a function header with the right exception.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.236,2006-01-12,itglp] Added missing DELETE clause in recreateCastorFile.
    [r1.235,2006-01-05,sponcec3] Fixed updateFsFileClosed to modify fsDeviation and deltaWeight, taking into account that there is one less stream on the filesystem
  * PROTO2/castor/rh/Server.cpp:
  * PROTO2/castor/rh/Server.hpp:
    [2006-01-13,itglp] Request Handler refactorization using the castor::server framework for thread handling.
  * PROTO2/castor/server/BaseDaemon.cpp:
  * PROTO2/castor/server/BaseServer.cpp:
  * PROTO2/castor/server/BaseServer.hpp:
  * PROTO2/castor/server/BaseThreadPool.cpp:
  * PROTO2/castor/server/BaseThreadPool.hpp:
  * PROTO2/castor/server/IThread.hpp:
  * PROTO2/castor/server/NotificationThread.cpp:
  * PROTO2/castor/server/NotificationThread.hpp:
  * PROTO2/castor/server/ServiceThread.cpp:
  * PROTO2/castor/server/ServiceThread.hpp:
  * PROTO2/castor/server/SignalThreadPool.hpp:
    [2006-01-13,itglp] Added a new thread pool to be used for listening servers (like the RH). Updated/improved other classes in the framework.
  * PROTO2/castor/server/BaseServer.cpp:
    [r 1.7,2005-12-08,itglp] Fixed parseCommandLine.
    [r 1.6,2005-12-08,itglp] Added option to parseCommandLine to handle the configuration file.
    [r1.10,2006-01-16,felixehm] Fix memory leak.
  * PROTO2/castor/server/BaseServer.hpp:
    [r 1.3,2005-12-08,itglp] Fixed getThreadPool signature, fixed some comments.
  * PROTO2/castor/server/BaseThreadPool.cpp:
    [r 1.5,2005-12-12,itglp] Minor fixes; handling SIGCHLD signal.
  * PROTO2/castor/server/ServiceThread.cpp:
    [r 1.3,2005-12-08,itglp] Initialized the user thread with the shared Mutex. This feature is not used for the time being.
  * PROTO2/castor/server/BaseServer.cpp:
  * PROTO2/castor/server/SignalThreadPool.cpp:
  * PROTO2/castor/server/SignalThreadPool.hpp:
    [r 1.7,2005-12-12,itglp] Minor fixes; handling SIGCHLD signal.
    [r 1.6,2005-12-08,itglp] Fixed getThreadPool signature, fixed some comments.
  * PROTO2/config/Project.tmpl:
    [r1.49,2005-12-09,waldron] added BuildCupvLibrary dependancy for DLF
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/DLFCONFIG:
  * PROTO2/debian/EXPCONFIG:
  * PROTO2/debian/MYSTAGERCONFIG:
  * PROTO2/debian/MigHunter.init:
  * PROTO2/debian/castor.conf:
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rtcpclientd.init:
  * PROTO2/debian/stager.init:
  * PROTO2/debian/vmgrdaemon.init:
    [2006-01-12,itglp] Fixed configuration & initialization scripts. Added sysconfig files for castor, LSF, rmmaster; to be packaged.
  * PROTO2/debian/castor-rtcopy-clientserver.postinst:
    [r 1.8,2006-01-12,itglp] Added chown stage.st /var/spool/rtcpclientd.
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.17,2006-01-16,motiakov] Commented non thread-safe code.
  * PROTO2/dlf/dlfmysetup.sh:
  * PROTO2/dlf/dlforasetup.sh:
    [2005-12-09,sponcec3] Added SRM facilities to the DLF setup scripts
  * PROTO2/ns/Cns_main.c:
  * PROTO2/castor/io/AuthClientSocket.cpp:
  * PROTO2/castor/io/AuthServerSocket.cpp:
  * PROTO2/rfio/connect.c:
  * PROTO2/rfio/rfio_serv.c:
  * PROTO2/security/Csec_api.man:
  * PROTO2/tape/tpdaemon.c:
  * PROTO2/upv/Cupv_main.c:
  * PROTO2/vdqm/vdqm_Listen.c:
  * PROTO2/vmgr/vmgr_main.c:
    [2005-12-12,lopic3] changed Csec_geterrmsg() to Csec_getErrorMessage()
  * PROTO2/rtcopy/TapeErrorHandler.c:
    [r1.11,2006-01-13,obarring] Make sure that failure calling the expert system is not interpreted as an exhausted retry limit.
  * CASTOR/rtcopy/err_messages:
    [r1.18,2005-12-13,obarring] Classify new message (rtcpd_StartTapeIO(): Thread interface call error) under OTHER errors (6)
    [r1.17,2005-12-13,obarring] Change some USER and SHIFT errors to TAPE. See remedy ticket CT0000000300180.
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.140,2006-01-13,obarring] Try to ensure a retry in case of a communication failure or other client errors
  * PROTO2/shlib/Imakefile:
    [r1.43,2005-12-09,itglp] Fixed rules to properly compile libCastorCnvs.
  * PROTO2/stager/stager_query_service.cpp:
    [r1.32,2005-12-09,itglp] Fixed missing delete leading to a memory leak in case of exception.

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 16 Jan 2006 16:08:34 +0100

castor (2.0.2-7) unstable; urgency=low

  * PROTO2/debian/castor.conf
    Fixed default castor.conf for VDQM log and library
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp
    Fixed a bug for the showqueue command. Now the right status is sent back to the client.
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp
    Fixed access to relationships in case the relation leads to a null pointer
    Fixed the showqueue problem in the selectTapeDriveQueue() function
  * PROTO2/security/Imakefile
  * PROTO2/config/site.def
    Fixed build rules
  * PROTO2/h/serrno.h
  * PROTO2/common/serrno.c
    Added security errors

 -- Sebastien Ponce <sponcec3@pcitds13>  Wed,  7 Dec 2005 15:38:05 +0100

castor (2.0.2-6) unstable; urgency=low

  * Somehow I've lost this part. Everything is merged in 2.0.2-7
    
 -- Sebastien Ponce <sponcec3@pcitds13>  Wed,  7 Dec 2005 10:??:?? +0100

castor (2.0.2-5) unstable; urgency=low

  * PROTO2/castor/db/castor_postgres_create.sql:
  * PROTO2/castor/db/cnv/DbTapeDriveCnv.cpp:
  * PROTO2/castor/db/cnv/DbTapeDriveDedicationCnv.cpp:
  * PROTO2/castor/db/cnv/DbTapeRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraTapeDriveCnv.cpp:
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
  * PROTO2/castor/db/ora/OraTapeRequestCnv.cpp:
      [2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.35,2005-12-02,mbraeger] Fixed the recall of the time, which is now stored as double
    [r1.34,2005-11-26,mbraeger] Fixed small bugs in the selectTapeAccessSpecifications()
    [r1.34,2005-11-26,mbraeger] and selectCompatibilitiesForDriveModel() function.
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.24,2005-11-26,mbraeger] Fixed small bugs in the selectTapeAccessSpecifications()
    [r1.24,2005-11-26,mbraeger] and selectCompatibilitiesForDriveModel() function.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.233,2005-12-03,mbraeger] Bug fixes in the matchTape2TapeDrive procedure
    [r1.232,2005-12-02,itglp] Implementation of the matchTape2TapeDrive logic taking into account dedications.
    [r1.231,2005-12-02,sponcec3] Fixed wrong exception catching in putFailedProd leading to SubRequest staying in READY state
  * PROTO2/castor/io/StreamTapeDriveCnv.cpp:
  * PROTO2/castor/io/StreamTapeDriveDedicationCnv.cpp:
  * PROTO2/castor/io/StreamTapeRequestCnv.cpp:
  * PROTO2/castor/vdqm/TapeDrive.h:
  * PROTO2/castor/vdqm/TapeDrive.hpp:
  * PROTO2/castor/vdqm/TapeDriveCInt.cpp:
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
  * PROTO2/castor/vdqm/TapeRequest.h:
  * PROTO2/castor/vdqm/TapeRequest.hpp:
  * PROTO2/castor/vdqm/TapeRequestCInt.cpp:
      [2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
  * PROTO2/castor/vdqm/VdqmServer.cpp:
    [r1.46,2005-11-30,mbraeger] Fixed a bug, in the parseCommandLine() function. Now, it is finally possible to specify the amount of threads in the pools.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
    [r1.15,2005-11-30,mbraeger] Removed unneeded code.
    [r1.14,2005-11-26,mbraeger] Fixed a bug for the TapeDriveCompatibility storage
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.33,2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
    [r1.32,2005-11-28,mbraeger] Included a small work around for the asymmetric tape drive problem: If the tape drive model is not provided by the client (which is the case for the moment), then the TapeDriveCompatibility table will be filled with the cartridge model name instead.
    [r1.31,2005-11-26,mbraeger] Fixed a bug for the TapeDriveCompatibility storage
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
      [2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
    [r1.25,2005-11-30,mbraeger] Synchronized the modification time and the creation time of a TapeRequest. The modification time of a tape request will now only be different to the creation time, if the assign of a tape to a tape drive has failed on RTCPD side.
    [r1.24,2005-11-25,mbraeger] Solved a segmentation fault, which occured on the VDQM Ping request from the vdqm_admin command.
  * CASTOR/common/sendscsicmd.c:
    [r1.15,2005-11-30,bcouturi] On linux, check /proc/scsi/sg/def_reserved_size if it exists to get the maximum buffer size for the sg driver
  * PROTO2/debian/castor-rmc-server.postinst:
  * PROTO2/debian/castor-rmc-server.postrm:
  * PROTO2/debian/castor-rmc-server.prerm:
      [2005-11-30,jdurand] rmdaemon -> rmcdaemon
  * PROTO2/debian/Cmonitd.init:
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/MigHunter.init:
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/expertd.init:
  * PROTO2/debian/gcDaemon.init:
  * PROTO2/debian/msgdaemon.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rfiod.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rmcdaemon.init:
  * PROTO2/debian/rmmaster.init:
  * PROTO2/debian/rmnode.init:
  * PROTO2/debian/rtcpclientd.init:
  * PROTO2/debian/rtcpd.init:
  * PROTO2/debian/stager.init:
  * PROTO2/debian/tpdaemon.init:
  * PROTO2/debian/vdqmserv.init:
  * PROTO2/debian/vdqmserver.init:
  * PROTO2/debian/vmgrdaemon.init:
      [2005-11-30,jdurand] grep " 1 program" -> egrep " 1 program\$"
      [2005-11-30,jdurand] grep program -> egrep "\/program *\$"
  * PROTO2/hsmtools/Imakefile:
    [r1.23,2005-12-02,bcouturi] Added dedicateTapeDrive and  listDedications
  * PROTO2/hsmtools/modifySvcClass.c:
    [r 1.7,2005-11-30,obarring] Revoke change made 31/5. Pass empty string instead of NULL when revoking the
    [r 1.7,2005-11-30,obarring] policy values. NULL caused a segv in Cstager_SvcClass_setMigratorPolicy
  * PROTO2/resourcemonitoring/rmnode.c:
    [r1.24,2005-12-05,jdurand] Exit if configfile contains partitions that rmnode cannot map to a device
  * CASTOR/rmc/rmcdaemon.sysconfig:
    [r 1.2,2005-11-30,jdurand] RUN_RMCDAEMON="NO" -> RUN_RMCDAEMON="yes"
  * PROTO2/rtcopy/TapeErrorHandler.c:
    [r1.10,2005-11-30,obarring] Fix processing of migration candidates where the castor file has been deleted from the name server
  * CASTOR/tape/smc.c:
    [r 1.9,2005-12-05,bcouturi] Fixed tape slot range checking

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon,  5 Dec 2005 11:42:57 +0100

castor (2.0.2-4) unstable; urgency=low

  * Added setFileGCWeight request for setting the GC weight of a given file
    This includes : UML design, C++ objects, Streaming facility, ORACLE interface, C++ API, public C API, stager server side support, command line and man page
  * Fixed creation of converters and services factories by explicitely allocating them. This fixes segfaults that occured when 2 converters/services are created for the same type of objects
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
    [r 1.5,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.33,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.32,2005-11-21,mbraeger] Inserted a function, called 'selectTapeRequest', which solves the downcast
    [r1.32,2005-11-21,mbraeger] problem of the big unique id's of the database for the VDQM_DEL_VOLREQ request.
    [r1.31,2005-11-18,sponcec3] Fixed double delete for services. This was leading to seg fault when unloading a service
    [r1.30,2005-11-17,mbraeger] Ordered the results for the TapeAccessSpecificationTable by accessMode DESC
    [r1.29,2005-11-17,mbraeger] Two new functions inserted into OraVdqmSvc class, to handle queries on the TapeAccessSpecification
    [r1.29,2005-11-17,mbraeger] and TapeDriveCompatibility table.
    [r1.29,2005-11-17,mbraeger] I put in oracleTrailer.sql in comments a possible second algorithm for the matchTape2TapeDrive procedure
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.23,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.22,2005-11-21,mbraeger] Inserted a function, called 'selectTapeRequest', which solves the downcast
    [r1.22,2005-11-21,mbraeger] problem of the big unique id's of the database for the VDQM_DEL_VOLREQ request.
    [r1.21,2005-11-17,mbraeger] Two new functions inserted into OraVdqmSvc class, to handle queries on the TapeAccessSpecification
    [r1.21,2005-11-17,mbraeger] and TapeDriveCompatibility table.
    [r1.21,2005-11-17,mbraeger] I put in oracleTrailer.sql in comments a possible second algorithm for the matchTape2TapeDrive procedure
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.230,2005-11-25,sponcec3] added a file cleared procedure to be used in the future for clearing files abruptly. Also fixed fileDeleted for missing deletions in Id2Type
    [r1.229,2005-11-24,itglp] Fixed handling of getLastRecalls queries for files already staged.
    [r1.228,2005-11-23,sponcec3] Attempt to fix counters in nbTapeCopiesInFS. This table now only take into account files in CANBEMIGR with a tapecopy in WAITINSTREAM. Also fixed the trigger dealing with disk2disk copies : it should handle CANBEMIGR case, not STAGEOUT
    [r1.227,2005-11-17,mbraeger] Two new functions inserted into OraVdqmSvc class, to handle queries on the TapeAccessSpecification
    [r1.227,2005-11-17,mbraeger] and TapeDriveCompatibility table.
    [r1.227,2005-11-17,mbraeger] I put in oracleTrailer.sql in comments a possible second algorithm for the matchTape2TapeDrive procedure
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
    [r1.26,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.25,2005-11-21,mbraeger] Fixed the problem with the protocol restriction for the big unique id's.
    [r1.25,2005-11-21,mbraeger] Now, VDQM_DEL_VOLREQ should also work with 64 bit id's
    [r1.24,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r1.24,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/OldRequestFacade.cpp:
    [r 1.7,2005-11-22,mbraeger] Removed unused code
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
    [r 1.8,2005-11-23,mbraeger] Switched back to the previous version.
  * PROTO2/castor/vdqm/RTCopyDConnection.hpp:
    [r 1.5,2005-11-23,mbraeger] Switched back to the previous version.
  * PROTO2/castor/vdqm/TapeDriveDedication.cpp:
    [r 1.9,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
    [r 1.8,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
    [r 1.8,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
    [r 1.8,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.cpp:
    [r 1.7,2005-11-22,mbraeger] This files have changed due to a revision of the database diagram. The UNIT_WAITDOWN status
    [r 1.7,2005-11-22,mbraeger] has been removed.
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.hpp:
    [r 1.7,2005-11-22,mbraeger] This files have changed due to a revision of the database diagram. The UNIT_WAITDOWN status
    [r 1.7,2005-11-22,mbraeger] has been removed.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.hpp:
    [r 1.7,2005-11-22,mbraeger] This files have changed due to a revision of the database diagram. The UNIT_WAITDOWN status
    [r 1.7,2005-11-22,mbraeger] has been removed.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
    [r1.13,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r1.13,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
    [r1.15,2005-11-22,mbraeger] Remove the VDQM_UNIT_WAITDOWN status from the code, because it is never used.
    [r1.14,2005-11-21,mbraeger] Fixed the problem with the protocol restriction for the big unique id's.
    [r1.14,2005-11-21,mbraeger] Now, VDQM_DEL_VOLREQ should also work with 64 bit id's
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.30,2005-11-22,mbraeger] Remove the VDQM_UNIT_WAITDOWN status from the code, because it is never used.
    [r1.29,2005-11-17,mbraeger] Forgot to check, if the result from IVdqmService is != NULL
    [r1.28,2005-11-17,mbraeger] All priorityLevels for WRITE_ENABLE are set to 0 and
    [r1.28,2005-11-17,mbraeger] all priorityLevels for WRITE_DISABLE are set to 1 for table entries in TapeDriveCompatibility
    [r1.27,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r1.27,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
    [r 1.9,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r 1.9,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
    [r1.23,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.22,2005-11-21,mbraeger] Fixed the problem with the protocol restriction for the big unique id's.
    [r1.22,2005-11-21,mbraeger] Now, VDQM_DEL_VOLREQ should also work with 64 bit id's
    [r1.21,2005-11-18,mbraeger] Reduced the severity of an error message from ERROR to WARNING
  * PROTO2/codeGeneration/RH.xmi:
    [r1.115,2005-11-25,sponcec3] Added SetFileGCWeight request
    [r1.114,2005-11-24,itglp] Cosmetic changes by Matthias.
    [r1.113,2005-11-22,mbraeger] Removed the UNIT_WAITDOWN status of the TapeDriveStatusCodes table in the VDQM database diagram.
    [r1.113,2005-11-22,mbraeger] It is not used any more!
    [r1.112,2005-11-16,itglp] field for a 'reason' added to the TapeDriveDedication table in the VDQM diagram
  * PROTO2/codeGeneration/gencastor/genCastor.cpp:
    [r1.20,2005-11-24,itglp] Version 3.6-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppbasecnvwriter.cpp:
    [r 1.5,2005-11-18,sponcec3] Fixed the way static factories are instantiated so that they can be freed
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
    [r 1.6,2005-11-23,jdurand] Added RMMASTER HOST
  * PROTO2/debian/castor.conf:
    [r 1.9,2005-11-23,jdurand] Added RMMASTER HOST
  * CASTOR/dlf/dlfquery/func.php:
    [r 1.2,2005-11-25,waldron] missing 'arrtostr' function
  * PROTO2/h/rm_constants.h:
    [r1.21,2005-11-23,jdurand] Default rmmaster host is castorrmmaster
    [r1.21,2005-11-23,jdurand] Definition of RMMASTER_USER_PROTO "tcp"
  * PROTO2/h/stager_client_api.h:
    [r1.27,2005-11-25,sponcec3] Added setFileGCWeight request for setting the GC weight of a given file
  * PROTO2/resourcemonitoring/Imakefile:
    [r1.25,2005-11-22,jdurand] Replaced a target by ProgramTargetName(target) in some LinkFile() directives
  * PROTO2/resourcemonitoring/usersend2rmd.c:
    [r1.15,2005-11-23,jdurand] User RMMASTER_USER_PORT instead of RMMASTER_PORT when checking for config, to avoid confusion with udp messages sent in file send2rmd.c
    [r1.14,2005-11-23,jdurand] Cast explicitely ntohs argument and output in the log() call when connect fails
    [r1.13,2005-11-23,jdurand] Use RMMASTER_USER_PROTO (tcp) instead of RMMASTER_PROTO (udp) to get port from /etc/services
    [r1.12,2005-11-22,jdurand] Now get rmmaster host from: environment, or master config file, or RMNODECONFIG, or default
    [r1.12,2005-11-22,jdurand] Now get rmmaster port from: environment, or master config file, or RMNODECONFIG, or services, or default
    [r1.12,2005-11-22,jdurand] Do not strerror(errno) if Cgethostbyname() fails (irrelevant - h_errno is setted then, not errno)
    [r1.12,2005-11-22,jdurand] Put to error buffer the port number together with the hostname when connection fails
    [r1.11,2005-11-22,jdurand] Change a test that is always true per def (test pointer != NULL instead of *pointer - pointer is a variable on the stack)
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.139,2005-11-22,obarring] Remove temporary hack forcing blocksize
  * PROTO2/stager/stager_db_service.c:
    [r1.131,2005-11-24,itglp] Fixed handling of getLastRecalls queries for files already staged.

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 25 Nov 2005 15:44:59 +0100

castor (2.0.2-3) unstable; urgency=low

  * CASTOR/h/Ctape.h:
    [r1.47,2005-11-15,bcouturi] Changed value of D500G/D500GC as it should be the index of the density as defined in cvtden.c
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.226,2005-11-16,sponcec3] Fixed GC policies. The ordering was wrong !
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/oracleTrailer.sql:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/castor/query/IQuerySvcCInt.cpp:
  * PROTO2/stager/stager_query_service.cpp:
      [2005-11-11,itglp] Enhanced query by reqId and userTag: if the queried reqId/userTag was not found, the reply is EINVAL, while ENOENT is given when no file is found and the request is still there (meaningful for the getLastRecalls mode).
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.28,2005-11-14,mbraeger] Extension of selectServer()
    [r1.27,2005-11-11,itglp] Optimized some queries.
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.20,2005-11-14,mbraeger] Extension of selectServer()
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
      [2005-11-14,mbraeger] Extension of the selectServer() function in OraVdqmSvc
  * PROTO2/common/Cdlopen.c:
    [r 1.4,2005-11-14,jdurand] Fix segfault in Cdlerror
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.80,2005-11-14,jdurand] Automatic close of connection between rmmaster thread and the LSF proxy - otherwise the LSF proxy will wait for an event until netread timeout (not fatal, though)
    [r1.79,2005-11-14,jdurand] Stop submitting the job in PSUSP: now the job is submitted in a normal state, a message box sent afterwards (which triggers another parsing of resources)
    [r1.78,2005-11-11,jdurand] Optimization of rmmaster <-> LSF protocol (now rmmaster posts in a single message box instead of 8 previously)
  * PROTO2/scheduler/LSF/schmod_castor.c:
    [r1.34,2005-11-11,jdurand] Optimization of rmmaster <-> LSF protocol (now rmmaster posts in a single message box instead of 8 previously)

 -- Sebastien Ponce <sponcec3@pcitds13>  Tue, 15 Nov 2005 18:25:37 +0100

castor (2.0.2-2) unstable; urgency=low

  * PROTO2/Imakefile:
    [r1.18,2005-11-01,mbraeger] Changes the make command to create the doxygen documentation.
                                Now you have to type: make doxygen
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.223,2005-10-28,itglp] Fixed isSubrequestToSchedule to avoid putDone before put.
    [r1.223,2005-10-28,itglp] Fixed getNext status update.
  * PROTO2/castor/rh/Server.cpp:
    [r1.43,2005-11-07,sponcec3] Added type of request to 'Processing Request' message
  * PROTO2/castor/vdqm/VdqmServer.cpp:
  * PROTO2/castor/vdqm/Imakefile:
  * PROTO2/castor/vdqm/VdqmServer.hpp:
      [2005-11-07,mbraeger] Code revision: The decision, which Protocol version has to be used is now taken in the ProtocolFacade class. Now, the VdqmServer doesn't care any more, which protocol is sent via the socket.
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
  * PROTO2/castor/vdqm/RTCopyDConnection.hpp:
    [2005-11-10,mbraeger] In case of errors on RTCPD side during a tape assign, the error message is now written to the ErrorHistory db table.
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.cpp:
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.hpp:
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
      [2005-11-07,mbraeger] Revision of the tape drive status Codes. The intermediate status UNIT_RELEASED is not needed any more.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
      [2005-11-10,mbraeger] Solved a core dump error in the TapeDriveHandler.cpp
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
    [r1.16,2005-10-31,mbraeger] Solved an Error in the handleVolMountStatus() function. The Tape was not right selected and caused sometimes errors.
  * PROTO2/codeGeneration/RH.xmi:
    [r1.111,2005-11-08,itglp] Added a simplified class diagram for the catalog db.
    [r1.110,2005-11-07,mbraeger] Removed from the VDQM db diagram the UNIT_RELEASED status of the TapeDriveStatusCodes enumeration class.
  * CASTOR/dlf/dlf_oracle_grant.sql:
    [r 1.2,2005-11-09,sponcec3] New views for lemon monitoring
  * CASTOR/dlf/dlf_oracle_tbl.sql:
    [r1.12,2005-11-09,sponcec3] New index on dlf_messages based on hostid
  * PROTO2/doc/uml/vdqm.xmi:
    [r 1.8,2005-11-10,mbraeger] Sequence diagram for an incoming tape drive requested added
    [r 1.7,2005-11-09,mbraeger] Updated all diagrams for Umbrello 1.4.2. ProtocolFacade Sequence diagram included
    [r 1.6,2005-11-07,mbraeger] Revision of the class diagram. Actualization of the vdqm class diagram
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.138,2005-10-31,obarring] Set serrno in case the checkFile fails in fileRecalled()
  * CASTOR/rtcopy/rtcpd_MainCntl.c:
    [r1.96,2005-10-28,obarring] Change (stupid) check preventing the default blocksize to be set
  * PROTO2/stager/stager_service_run.c:
    [r1.31,2005-10-31,jdurand] Variations on time to wait at the next round
    [r1.30,2005-10-31,jdurand] Use a single cond_wait instead of a cond_waits broken down per second
  * CASTOR/tape/Ctape_devinfo.c:
    [r1.16,2005-11-10,bcouturi] Changed LTO Block size to 256K
    [r1.15,2005-11-04,bcouturi] Added T10000 support
    [r1.14,2005-11-03,bcouturi] 3592B support - Added 500GB density
  * CASTOR/tape/Ctape_dmpfil.c:
    [r1.24,2005-11-04,bcouturi] Added T10000 support
  * CASTOR/tape/getcompstat.c:
    [r1.19,2005-11-04,bcouturi] Added T10000 support
  * CASTOR/vmgr/vmgr_db_init.sh:
    [r1.10,2005-11-04,bcouturi] Fixed VMGR init script for T10000, 3592 and LTO3

 -- Sebastien Ponce <sponcec3@pcitds13>  Thu, 10 Nov 2005 15:52:11 +0100

castor (2.0.2-1) unstable; urgency=low

  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_oracle_drop.sql:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/castor/stager/RequestQueryType.cpp:
  * PROTO2/castor/stager/RequestQueryType.hpp:
  * PROTO2/stager/stager_qry.c:
  * PROTO2/stager/stager_qry.man:
  * PROTO2/stager/stager_query_service.cpp:
        [2005-10-27,itglp] New 'getNext'-like stager_qry fully implemented on the server side.
  * PROTO2/doc/StgSvcsMethods.hpp:
  * PROTO2/doc/uml/StagerSvcs.xmi:
        [2005-10-27,itglp] Updated docs with the new stager queries.
  * PROTO2/h/stager_client_api.h:
    [r1.26,2005-10-27,itglp] Extended query type enum.
  * PROTO2/codeGeneration/RH.xmi:
    [r1.109,2005-10-27,itglp] Extended RequestQueryType for the new 'getNext'-like query.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.222,2005-10-27,sponcec3] Added index on the copy column of the Segment table
    [r1.221,2005-10-27,itglp] New 'getNext'-like stager_qry fully implemented on the server side.
    [r1.220,2005-10-25,itglp] Added function based index for the new getNextStatus field in SubRequest.
    [r1.219,2005-10-25,sponcec3] remove a close cursor that should not be there(+ cosmetic changes)
  * PROTO2/castor/vdqm/Imakefile:
    [r1.13,2005-10-25,mbraeger] Removed the genereted classes by Umbrello
  * PROTO2/castor/vdqm/VdqmServer.cpp:
    [r1.44,2005-10-27,mbraeger] Changed the log level of two log messages from ERROR to WARNING in the deleteTapeRequest() function.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
        [2005-10-28,mbraeger] Solved a deadlock problem in the TapeRequestHandler.cpp
        [2005-10-27,mbraeger] Solved memory leaks.
  * PROTO2/common/Cdlopen.c:
    [r 1.3,2005-10-26,jdurand] Moved necessary includes in the header file, added definition of RT_* for _WIN32
  * PROTO2/config/Win32.rules:
    [r 1.5,2005-10-26,jdurand] Added MakeDepSharedLibrary() rule
    [r 1.4,2005-10-26,jdurand] Better rules, especially when source file is locate in a subdirectory
  * PROTO2/h/Cdlopen_api.h:
    [r 1.2,2005-10-26,jdurand] Moved necessary includes in the header file, added definition of RT_* for _WIN32
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.77,2005-10-26,jdurand] Map LSBE_BAD_HOST, LSBE_BAD_QUEUE and LSBE_BAD_RESREQ to serrno = EINVAL
  * PROTO2/resourcemonitoring/rm_api.c:
    [r1.18,2005-10-26,jdurand] Definition of S_ISDIR() on _WIN32
  * PROTO2/resourcemonitoring/usersend2rmd.c:
    [r1.10,2005-10-26,jdurand] Do not use strtok_r() on _WIN32
  * PROTO2/rfio/RfioTURL.c:
    [r 1.3,2005-10-26,jdurand] Added #include "net.h" on _WIN32
  * PROTO2/rfio/connect.c:
    [r1.13,2005-10-26,jdurand] Restrict use of strtok_r() where applicable
  * PROTO2/rfio/parse.c:
    [r 1.4,2005-10-26,jdurand] Use Csnprintf() instead of snprintf()
  * PROTO2/rfio/stream.c:
    [r 1.5,2005-10-26,jdurand] Restrict use of strtok_r() where applicable
  * PROTO2/rtcopy/migrator.c:
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
        [2005-10-27,obarring] Remove temporary hack setting default blocksize. From now on, we rely on that
        [2005-10-27,obarring] it is properly set on the tape server

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 28 Oct 2005 14:39:50 +0200

castor (2.0.2-0) unstable; urgency=low

  * PROTO2/castor/Constants.cpp:
  * PROTO2/castor/Constants.hpp:
  * PROTO2/castor/Imakefile:
  * PROTO2/castor/rh/FileQueryResponse.h:
  * PROTO2/castor/rh/FileQueryResponse.hpp:
  * PROTO2/castor/stager/RequestQueryType.cpp:
  * PROTO2/castor/stager/RequestQueryType.hpp:
  * PROTO2/castor/stager/SubRequest.cpp:
  * PROTO2/castor/stager/SubRequest.h:
  * PROTO2/castor/stager/SubRequest.hpp:
  * PROTO2/castor/stager/SubRequestCInt.cpp:
        Added a new 'getNext'-like query to get latest recalled files for a get request.
  * PROTO2/castor/Imakefile:
    [r1.114,2005-10-21,jdurand] Add -I ../win32 for _WIN32
  * PROTO2/castor/client/BaseClient.cpp:
    [r1.34,2005-10-21,jdurand] fix < into <<
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_oracle_drop.sql:
  * PROTO2/castor/db/castor_postgres_create.sql:
  * PROTO2/castor/db/cnv/DbSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/ora/OraSubRequestCnv.cpp:
  * PROTO2/castor/db/oracleTrailer.sql:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/stager/stager_client_api_query.cpp:
  * PROTO2/stager/stager_qry.c:
  * PROTO2/stager/stager_qry.man:
  * PROTO2/stager/stager_query_service.cpp:
        Fixed stager_qry to retrieve castorFileName, added a new 'getNext'-like query to get latest recalled files for a get request.
  * PROTO2/h/stager_client_api.h:
    [r1.25,2005-10-25,itglp] Added castorfilename to stage_filequery_resp, extended query_type enum.
    [r1.25,2005-10-25,itglp] This affects the public API stage_filequery().
  * PROTO2/codeGeneration/RH.xmi:
    [r1.108,2005-10-25,itglp] Added GETNEXT to RequestQueryType for the new getNext stager query.
    [r1.107,2005-10-24,itglp] Fixed type for FileQryResponse.castorFileName.
    [r1.106,2005-10-24,itglp] New enumeration added for GetNext status in SubRequests.
  * PROTO2/castor/logstream.h:
    [r1.18,2005-10-21,jdurand] On VC7 (.NET) ERROR will expand to 0 ./..
    [r1.17,2005-10-21,jdurand] Fix for bug #12528, localtime_r on _WIN32
  * CASTOR/commands/newacct.c:
    [r 1.8,2005-10-20,jdurand] Added #include <stdlib.h> (definition of exit())
    [r 1.7,2005-10-20,jdurand] execl() should end with NULL instead of 0
  * PROTO2/common/Imakefile:
  * PROTO2/h/Imakefile:
        CASTOR thread-safe portable dlopen() interface [_WIN32 + unix-like only]
  * CASTOR/h/Cuuid.h:
    [r 1.8,2005-10-21,jdurand] Fix for bugs #12562, compilation on _WIN32
  * CASTOR/h/osdep.h:
    [r1.19,2005-10-21,jdurand] VC6->VC7 port (VC7 already defined BYTE, SHORT, LONG + I don't know why but QUAD structure does not compile using a LONG on VC7 - but compiled with 'int'...)
  * CASTOR/msg/oper.c:
    [r 1.6,2005-10-20,bcouturi] Terminate execl command by NULL rather than 0 to avoid cast problem on IA64
  * PROTO2/tape/tpdaemon.c:
    [r 1.4,2005-10-20,bcouturi] Terminate execlp command by NULL rather than 0 to avoid cast problem on IA64

 -- Sebastien Ponce <sponcec3@pcitds13>  Tue, 25 Oct 2005 15:58:49 +0200

castor (2.0.1-10) unstable; urgency=low

  * PROTO2/castor/db/castor_oracle_create.sql:
    [r1.34,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r1.34,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/castor_oracle_drop.sql:
    [r 1.7,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.7,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/castor_postgres_drop.sql:
    [r 1.2,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.2,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/cnv/Db*:
        Fixed db exception handling.
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
    [r1.25,2005-10-20,sponcec3] Fixed previous commit
    [r1.24,2005-10-20,sponcec3] Put back check of service class in the stager_query
  * PROTO2/castor/db/ora/OraStagerSvc.cpp:
    [r1.176,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
    [r1.73,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.217,2005-10-20,sponcec3] Put back check of service class in the stager_query
    [r1.216,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
    [r1.215,2005-10-19,mbraeger] Forgot at the last commit the semicolon at the end of the SELECT Statement
    [r1.214,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r1.214,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
    [r1.213,2005-10-19,sponcec3] Fixed wrong SQL statement having an extra table in the from clause
  * PROTO2/castor/db/oracleTrailer_drop.sql:
    [r 1.4,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.4,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/postgresTrailer_drop.sql:
    [r 1.2,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.2,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/stager/IStagerSvc.hpp:
    [r1.66,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.21,2005-10-19,mbraeger] Fixed a memory leak problem.
  * PROTO2/stager/stager_query_service.cpp:
    [r1.27,2005-10-20,sponcec3] Put back check of service class in the stager_query
  * PROTO2/stager/stager_rm.man:
    [r 1.2,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.

 -- Sebastien Ponce <sponcec3@pcitds13>  Thu, 20 Oct 2005 17:06:12 +0200

castor (2.0.1-9) unstable; urgency=low

  * PROTO2/castor/Imakefile:
    [r1.113,2005-10-19,jdurand] Fixed clean rule because of 'cmd' shell length limit when doing shell expansion
  * PROTO2/config/Win32.rules:
    [r 1.3,2005-10-19,jdurand] Go back to original version of RemoveFiles()
  * PROTO2/h/Castor_limits.h:
    [r 1.8,2005-10-19,jdurand] Increase CA_MAXDENNUM from 25 to 27
  * PROTO2/resourcemonitoring/Crmd_recv_from_rmnode.c:
    [r1.21,2005-10-19,jdurand] Changed two logs levels from LOG_INFO to LOG_WARNING+LOG_ERR
    [r1.20,2005-10-19,jdurand] When a filesystem's automatic state differs from what admin setted, log that as a warning, and add host in the log-line
  * PROTO2/resourcemonitoring/Crmd_survey.c:
    [r1.21,2005-10-19,jdurand] Changed two logs levels from LOG_INFO to LOG_WARNING+LOG_ERR
  * CASTOR/win32/uxid.c:
    [r1.10,2005-10-19,jdurand] Removed explicit (and wrong) definition of fopen() and getenv()

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 19 Oct 2005 17:19:54 +0200

castor (2.0.1-8) unstable; urgency=low

  * PROTO2/castor/BaseCnvSvc.cpp:
    [r1.18,2005-10-17,sponcec3] Remove return statement that should not be there
  * PROTO2/castor/Imakefile:
    [r1.112,2005-10-17,jdurand] Go back to MakeCondSubdirs() but this time with a valid parameter
    [r1.111,2005-10-17,jdurand] Replaced MakeCondSubdirs() with a dummy or irrelevant argument with MakeSubDirs()
    [r1.110,2005-10-17,jdurand] Added a '-' to ignore error coming from for loop on empty list (is fatal on win32)
    [r1.109,2005-10-17,jdurand] Made _WIN32 compliant
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.212,2005-10-18,sponcec3] Added error handling in garbage collector main method
  * PROTO2/castor/gc/GcDaemon.cpp:
    [r1.31,2005-10-18,jdurand] Fix for #12479 (gcDaemon sleep interval corrupted)
  * PROTO2/codeGeneration/gencastor/gencastor:
    [r 1.8,2005-10-17,itglp] Improved script to autogenerate DROP part of the SQL scripts.
  * PROTO2/config/Win32.rules:
    [r 1.2,2005-10-17,jdurand] use a temporary file to delete a list of files (risk to exceed 'cmd' max number of characters)
    [r 1.2,2005-10-17,jdurand] ignore failure in case of a for () loop (case of empty list)
  * PROTO2/debian/castor-job.cron.hourly:
    [r 1.5,2005-10-17,jdurand] Load the sysconfig after setting the default value for RUN_CLEANUP
  * CASTOR/dlf/dlf_procreq.c:
    [r1.10,2005-10-18,kotlyar] added missed checks for start/stop dlf transaction
  * PROTO2/h/stager_client_api.h:
    [r1.24,2005-10-17,jdurand] On _WIN32 only, add inclusion of <io.h> and <sys/stat.h>, necessary for _umask() declaration at least
  * PROTO2/hsmtools/Imakefile:
    [r1.20,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
  * PROTO2/job/Imakefile:
    [r1.22,2005-10-17,jdurand] Support of OPTIONS from /etc/sysconfig/stagerJob: job will then use them - example: --nodlf --log stderr --debug
  * PROTO2/job/stagerJob.shell:
    [r1.37,2005-10-17,jdurand] Support of OPTIONS from /etc/sysconfig/stagerJob: job will then use them - example: --nodlf --log stderr --debug
  * PROTO2/job/stagerJob.sysconfig:
    [r 1.2,2005-10-17,jdurand] Support of OPTIONS from /etc/sysconfig/stagerJob: job will then use them - example: --nodlf --log stderr --debug
  * PROTO2/maketar.sh:
    [r1.38,2005-10-18,jdurand] Added /bin/true at the end of every scriptlet so that they never fail
  * PROTO2/resourcemonitoring/Imakefile:
    [r1.24,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
    [r1.24,2005-10-17,jdurand] Make declaration of LFSLIBS without +=, but simply =
    [r1.24,2005-10-17,jdurand] Remove call of MakeDir for undefined variable $(SPOOL)
  * PROTO2/rtcopy/Imakefile:
    [r1.26,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
    [r1.26,2005-10-17,jdurand] Make the 1st DEPLIB and GLOBLIB declarations without +=, but simply =
  * PROTO2/scheduler/LSF/Imakefile:
    [r1.12,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
  * PROTO2/stager/Imakefile:
    [r1.50,2005-10-17,jdurand] Do not call FileName() macro with an empty argument (win32's nmake does not like that)
  * PROTO2/stager/stager_client_api_get.cpp:
    [r1.23,2005-10-17,jdurand] On windows, umask() is called _umask()

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue, 18 Oct 2005 16:07:44 +0200

castor (2.0.1-7) unstable; urgency=low

  * PROTO2/castor/db/analyze/useful.sql:
    [r 1.3,2005-10-17,itglp] Modified queries related to GC analysis.
  * PROTO2/castor/db/castor_oracle_create.sql:
    [r1.33,2005-10-17,itglp] Fixed castor sql package for the new stager_qry.
    [r1.32,2005-10-17,itglp] Modified procedure for the lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
    [r 1.6,2005-10-17,sponcec3] Better implementation of files2Delete that should reduce the impact on the DB
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
    [r 1.4,2005-10-17,sponcec3] Better implementation of files2Delete that should reduce the impact on the DB
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
    [r1.23,2005-10-17,itglp] Further fix, now it works.
    [r1.22,2005-10-17,itglp] Fixed call to procedures.
    [r1.21,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
    [r 1.9,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.211,2005-10-17,sponcec3] Better implementation of files2Delete that should reduce the impact on the DB
    [r1.210,2005-10-17,itglp] Fixed castor sql package for the new stager_qry.
    [r1.209,2005-10-17,itglp] Modified procedure for the lighter version of stager_qry without svcClass and tape infos.
    [r1.208,2005-10-13,mbraeger] Remove the FOR UPDATE statement from matchTapeToTapeDrive procedure, because nobody else is selecting a free tape drive or a queued tape request.
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
    [r1.12,2005-10-13,mbraeger] Add a new function, called freeMemory() and solved a memory leak.
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.hpp:
    [r 1.7,2005-10-13,mbraeger] Add a new function, called freeMemory() and solved a memory leak.
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.16,2005-10-13,kotlyar] fixed incorrect assignment
  * CASTOR/h/Castor_limits.h:
    [r1.30,2005-10-13,bcouturi] LTO3 Patch - Added new densities
  * CASTOR/h/Ctape.h:
    [r1.46,2005-10-13,bcouturi] LTO3 Patch - Added new densities
  * PROTO2/h/rm_struct.h:
    [r1.14,2005-10-13,jdurand] Bad luck, s_addr is already used on _WIN32 - renamed to rm_s_addr (ok until rmmaster isn't compiled)
    [r1.13,2005-10-13,jdurand] map in_addr_r to int on _WIN32
  * PROTO2/resourcemonitoring/rm_api.c:
    [r1.17,2005-10-13,jdurand] Added #include <limits.h> for _WIN32
  * PROTO2/resourcemonitoring/rmenterjob.c:
    [r 1.6,2005-10-13,jdurand] Enclose signal(SIGPIPE,...) with #ifdef SIGPIPE/#endif
  * PROTO2/rfio/RfioTURL.c:
    [r 1.2,2005-10-13,jdurand] Do not #include <unistd.h> on _WIN32
  * PROTO2/rfio/rfio_HsmIf.c:
    [r1.11,2005-10-13,jdurand] On windows ECONNREFUSED is called WSAECONNREFUSED - one should use WSAGetLastError() in addition but this should be done in the layer below (stager api)
    [r1.10,2005-10-13,jdurand] Added #include <winsock2.h> to get ECONNREFUSED defined
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.136,2005-10-14,obarring] Remove useless updateRep() after segmentsForTape(). This was a remnant from
    [r1.136,2005-10-14,obarring] an old implementation where the status had to be updated for each segment.
  * PROTO2/stager/stager_admin_api.c:
    [r1.26,2005-10-13,jdurand] On _WIN32 only, replace serrno = ECONNREFUSED with serrno = SECOMERR
  * PROTO2/stager/stager_client_api_common.cpp:
    [r1.17,2005-10-13,jdurand] Use Cvsnprintf() instead of vsnprintf() [CASTOR portable wrapper - on _WIN32 vsnprintf() is called... _vsnprintf()]
  * PROTO2/stager/stager_qry.c:
    [r 1.9,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/stager/stager_query_service.cpp:
    [r1.26,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * CASTOR/tape/Ctape_devinfo.c:
    [r1.13,2005-10-13,bcouturi] LTO3 Patch - New densities and LTO3 support
  * CASTOR/tape/Ctape_dmpfil.c:
    [r1.23,2005-10-13,bcouturi] LTO3 Patch - New densities and LTO3 support
  * CASTOR/tape/cvtden.c:
    [r1.10,2005-10-13,bcouturi] LTO3 Patch - New densities and LTO3 support

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 17 Oct 2005 12:21:55 +0200

castor (2.0.1-6) unstable; urgency=low

  * PROTO2/castor/replier/RequestReplier.cpp:
    [r1.23,2005-10-11,bcouturi] Changed messages from ERROR to WARNING
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
    [r1.12,2005-10-11,mbraeger] There was a wrong behavior, when a tapeDrive received a VDQM_FORCED_UNMOUNT reequest. The problem should be fixed now.
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
    [r1.15,2005-10-12,mbraeger] Changed two log message status from ERROR to WARNING
    [r1.14,2005-10-11,mbraeger] There was a wrong behavior, when a tapeDrive received a VDQM_FORCED_UNMOUNT reequest. The problem should be fixed now.
  * CASTOR/dlf/dlf_procreq.c:
    [r 1.9,2005-10-11,kotlyar] added convert from IP address form to Domain name form for Cupv check when dlfshutdown
  * PROTO2/hsmtools/Imakefile:
    [r1.19,2005-10-12,sponcec3] new utility to get castor file names
  * PROTO2/hsmtools/cleanLostFiles:
    [r 1.8,2005-10-12,sponcec3] Improved version removing file from the nameserver when they have no tape copy
    [r 1.7,2005-10-11,sponcec3] updated call to filesDeletedProc, using the new signature. Will need more work to do something with the output
  * PROTO2/hsmtools/cleanLostFiles.man:
    [r 1.5,2005-10-12,sponcec3] Improved version removing file from the nameserver when they have no tape copy
  * PROTO2/rtcopy/MigHunter.c:
    [r1.29,2005-10-12,obarring] Add logging of database key in case of failing fillRep()
  * PROTO2/stager/stager_client_api_update.cpp:
    [r 1.8,2005-10-11,bcouturi] Fixed stage_update to fill in the IOResponse properly

 -- Sebastien Ponce <sponcec3@pcitds13>  Wed, 12 Oct 2005 21:53:22 +0200

castor (2.0.1-5) unstable; urgency=low

  * PROTO2/castor/BaseSvc.hpp:
    [r 1.4,2005-10-07,sponcec3] Added missing virutal keyword leading to bad multiple heritance from BaseObject
  * PROTO2/castor/db/ora/OraBaseObj.hpp:
    [r 1.4,2005-10-07,sponcec3] Added missing virutal keyword leading to bad multiple heritance from BaseObject
  * PROTO2/castor/db/castor_oracle_create.sql:
    [r1.31,2005-10-07,sponcec3] Modified filesDeleted procedure so that it deletes files from the nameserver when they have no tape copies
    [r1.30,2005-10-06,sponcec3] Fixed bestFileSystemForJob : do not take draining machines and filesystems into account
    [r1.29,2005-10-05,sponcec3] Fix stageQuery so that the check on filesystem and diskserver status works properly
    [r1.28,2005-10-04,sponcec3] Fixed filequery so that only PRODUCTION status filesystems are taken into account
  * PROTO2/castor/db/ora/Imakefile:
    [r1.56,2005-10-03,mbraeger] ErrorHistory.cpp removed from libcastorCommonOra
  * PROTO2/castor/db/ora/OraCommonSvc.hpp:
    [r 1.6,2005-10-07,sponcec3] Removed bad inline keyword leading to warnings when compiling with gcc 4.0
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
    [r 1.5,2005-10-10,sponcec3] Better handling of errors + improved efficiency by not calling Cns methods when not needed | fix bug in the commit timing
    [r 1.4,2005-10-07,sponcec3] Modified filesDeleted procedure so that it deletes files from the nameserver when they have no tape copies
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.26,2005-10-07,mbraeger] Solved bug in function selectTapeDrive
    [r1.25,2005-10-05,mbraeger] fixed a bug in selectTapeRequestQueue, due to a new column in the TapeRequest table.
    [r1.24,2005-10-05,mbraeger] Fixed the initialisation bug of m_selectTapeDriveQueueStatement.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.207,2005-10-07,sponcec3] Modified filesDeleted procedure so that it deletes files from the nameserver when they have no tape copies
    [r1.206,2005-10-06,sponcec3] Fixed bestFileSystemForJob : do not take draining machines and filesystems into account
    [r1.205,2005-10-05,sponcec3] Fix stageQuery so that the check on filesystem and diskserver status works properly
    [r1.204,2005-10-04,sponcec3] Fixed filequery so that only PRODUCTION status filesystems are taken into account
  * PROTO2/castor/gc/GcDaemon.cpp:
    [r1.30,2005-10-10,sponcec3] Cleaned code. Removed limitations on string lengths when possible and dropped storage tank specific code
  * PROTO2/castor/replier/RequestReplier.cpp:
    [r1.22,2005-10-10,bcouturi] Ignore DONE_FAILURE as the connection will be garbage collected anyway - Should not be logged as an error there
    [r1.21,2005-10-07,sponcec3] Fixed initalization of a struct where one field was not initialized
  * PROTO2/castor/vdqm/VdqmServer.cpp:
    [r1.43,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
    [r1.42,2005-10-07,mbraeger] Debug message added
    [r1.41,2005-10-04,mbraeger] Fixed Unmarshalling bug for Magic Numbers.
  * PROTO2/castor/vdqm/VdqmServerSocket.cpp:
    [r1.13,2005-10-04,mbraeger] Fixed Unmarshalling bug for Magic Numbers.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
    [r1.12,2005-10-05,mbraeger] try{...}catch()  block added
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
    [r1.11,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
    [r1.10,2005-10-07,mbraeger] Debug message added
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.hpp:
    [r 1.7,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.20,2005-10-10,mbraeger] Solved some memory leaks
    [r1.19,2005-10-07,mbraeger] copyTapeDriveInformations() function bugs fixed.
    [r1.18,2005-10-05,mbraeger] Fixed segmentation fault errors
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
    [r 1.8,2005-10-07,mbraeger] copyTapeDriveInformations() function bugs fixed.
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
    [r1.13,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.hpp:
    [r 1.7,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
    [r1.11,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
    [r1.15,2005-10-05,mbraeger] Fixed segmentation fault errors
  * PROTO2/debian/changelog:
    [r1.72,2005-10-10,sponcec3] Remove tabs from the log. dch does not like them
  * PROTO2/debian/control:
    [r1.38,2005-10-10,jdurand] Make castor-vdqm2-server depends on castor-db-interface (that castor-lib-<anydb> will have to provide)
  * PROTO2/debian/if.has_oracle:
    [r 1.2,2005-10-03,jdurand] Added castor-vdqm2-lib-oracle
  * CASTOR/dlf/dlf_mysql_ifce.c:
    [r1.12,2005-10-05,kotlyar] added new function dlf_end_tr_nocommit
    [r1.12,2005-10-05,kotlyar] added improved sequence usage for oracle
    [r1.12,2005-10-05,kotlyar] added some border checks for buffers
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.15,2005-10-07,kotlyar] perform 1 commit per 1 sec if dlf server in high load
    [r1.14,2005-10-06,kotlyar] reduced commits number
    [r1.13,2005-10-05,kotlyar] added new function dlf_end_tr_nocommit
    [r1.13,2005-10-05,kotlyar] added improved sequence usage for oracle
    [r1.13,2005-10-05,kotlyar] added some border checks for buffers
  * CASTOR/dlf/dlf_oracle_tbl.sql:
    [r1.11,2005-10-05,kotlyar] added new function dlf_end_tr_nocommit
    [r1.11,2005-10-05,kotlyar] added improved sequence usage for oracle
    [r1.11,2005-10-05,kotlyar] added some border checks for buffers
  * CASTOR/dlf/dlf_procreq.c:
    [r 1.8,2005-10-05,kotlyar] replaced dlf_end_tr to dlf_end_tr_nocommit for dlf_insert_message (commit when flushing buffers)
  * CASTOR/dlf/dlfserver.c:
    [r1.14,2005-10-05,kotlyar] commented gethostbyaddr for each message cause it used used nowhere
  * CASTOR/h/dlf_server.h:
    [r 1.4,2005-10-05,kotlyar] added  new variables for sequences usage
  * PROTO2/hsmtools/castor_tools.pm:
    [r 1.4,2005-10-10,jdurand] Updated parsing in conformity with new schema OraCnvSvc -> DbCnvSvc
  * PROTO2/rtcopy/TapeErrorHandler.c:
    [r 1.9,2005-10-10,obarring] Set serrno=SERTYEXHAUST if Cns segment is no longer valid. This will cause
    [r 1.9,2005-10-10,obarring] the request to fail. In the longer term a new catalog interface will allow
    [r 1.9,2005-10-10,obarring] for restarting the original request, which will retrieve the new segment information
  * PROTO2/stager/Imakefile:
    [r1.49,2005-10-10,jdurand] Removed #ifdef STAGE_LINK_STATIC
    [r1.49,2005-10-10,jdurand] Removed MakeDepLibrary(lib,castorCommonOra)
  * PROTO2/stager/stager_db_service.c:
    [r1.130,2005-10-07,jdurand] When Cstager_IStagerSvc_isSubRequestToSchedule() returns 0, update our copy of subrequest's status to SUBREQUEST_WAITSUBREQ, even if the stored procedure already changed it: we have a subsequent call to Cstager_IStagerSvc_updateAndCheckSubRequest() that will overwrite the status's request using our copy
    [r1.129,2005-10-06,sponcec3] The title of the log has to be STRING for strings.
    [r1.128,2005-10-06,sponcec3] Moved message from ERROR to SYSTEM when a file requested by a client does not exist in the nameserver. Also added the file name in the message

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 10 Oct 2005 21:31:38 +0200

castor (2.0.1-4) unstable; urgency=low

  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
    [r1.20,2005-10-03,sponcec3] Close unclosed cursors potentially leading to memory leaks
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.203,2005-10-03,sponcec3] Fixed getUpdateStart so that we don't start 2 disk2disk copies at the same time
    [r1.202,2005-10-03,sponcec3] Fixed usage of maxFreeSpace that is now relative to the totalSize
    [r1.200,2005-10-03,sponcec3] Fixed diskcopy name for replicated files
  * PROTO2/castor/io/StreamCnvSvc.cpp:
    [r 1.9,2005-10-03,sponcec3] Fix signednes of type when unmarshalled
  * PROTO2/castor/io/biniostream.h:
    [r 1.7,2005-10-03,sponcec3] Fixed unmarshalling of u_signed64 on 64 bits platforms
  * PROTO2/castor/gc/GcDaemon.cpp:
    [r1.29,2005-10-03,sponcec3] Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/castor/replier/RequestReplier.cpp:
    [r1.20,2005-10-03,sponcec3] Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/castor/rh/Server.cpp:
    [r1.42,2005-10-03,sponcec3] Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/castor/vdqm :  Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/clips/castor.clp:
    [r1.13,2005-10-03,jdurand] Decrease spaceImportance from 5 to 3 (ioImportance is 5)
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
    [r 1.5,2005-09-29,jdurand] var/spool/rh/ -> /var/spool/rhserver/
  * PROTO2/debian/castor.conf:
    [r 1.8,2005-09-29,jdurand] var/spool/rh/ -> /var/spool/rhserver/
  * PROTO2/stager/stager_query_service.cpp:
    [r1.25,2005-10-03,sponcec3] Fixed memory leak

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon,  3 Oct 2005 17:16:38 +0200

castor (2.0.1-3) unstable; urgency=low

  * Added vdqm2
  * Revisited debian/changelog parsing for spec creation

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 28 Sep 2005 19:29:26 +0200

castor (2.0.1-2) unstable; urgency=low

  * Fix for marshalling on 64 bits machines
  * Fix for the scriptlets: now package scriptlets are dumped directly into the rpm spec file. In addition they were wrongly putted in *.install.perm

 -- Sebastien Ponce <sponcec3@pcitds13>  Wed, 28 Sep 2005 13:01:42 +0200

castor (2.0.1-0) unstable; urgency=low

  * PROTO2/CASTOR.spec:
	[r1.35,2005-09-26,jdurand] Typo %fi -> %endif
	[r1.34,2005-09-26,jdurand] Tentative support of amd64
	[r1.33,2005-09-26,jdurand] Exclude BuildRmMaster also in the RPM execution if there is no LSF available
	[r1.32,2005-09-26,jdurand] Implementation of has_stk_ssi, has_lsf and has_oracle a-la-RPM
	[r1.31,2005-09-22,jdurand] Stop calling 'install' with user/group/mode
	[r1.30,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.29,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.29,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.29,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.29,2005-09-15,jdurand] 
	[r1.29,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/castor/BaseCnvSvc.cpp:
	[r1.17,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseCnvSvc.hpp:
	[r1.14,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseObject.cpp:
	[r1.13,2005-08-22,itglp] Added proper cleanup in the destructor.
  * PROTO2/castor/Constants.cpp:
	[r1.28,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.27,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Constants.hpp:
	[r1.51,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.50,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/ICnvSvc.hpp:
	[r1.13,2005-08-26,sponcec3] fully qualify some names and paths
	[r1.12,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Imakefile:
	[r1.108,2005-08-24,itglp] Moved some classes to db/cnv/Imakefile.
	[r1.107,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Services.cpp:
	[r1.20,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/db/Imakefile:
	[r 1.5,2005-08-23,itglp] Upgraded Imakefiles to reflect new packages.
  * PROTO2/castor/db/castor_oracle_create.sql:
	[r 1.9,2005-08-18,itglp] Updated to reflect latest changes in oracleTrailer.sql.
	[r1.22,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.21,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.20,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.20,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.19,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.18,2005-09-22,sponcec3] Fixed isSubRequestToSchedule : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.17,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.16,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.15,2005-09-20,sponcec3] Fixed typo
	[r1.14,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.13,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.12,2005-09-15,itglp] Updated scripts due to latest changes in RH.xmi and oracleTrailer.sql.
	[r1.11,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] 
	[r1.11,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.10,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/castor_oracle_drop.sql:
	[r 1.6,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.5,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r 1.5,2005-09-22,itglp] Fixed comments in the drop script.
	[r 1.4,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/mysql/Imakefile:
	[r 1.9,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.9,2005-08-18,itglp] abstracted database converters.
	[r 1.9,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.cpp:
	[r1.10,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r1.10,2005-08-18,itglp] abstracted database converters.
	[r1.10,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.hpp:
	[r 1.5,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.5,2005-08-18,itglp] abstracted database converters.
	[r 1.5,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/ora/OraCastorFileCnv.cpp:
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraCnvSvc.cpp:
	[r1.51,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
  * PROTO2/castor/db/ora/OraCommonSvc.cpp:
	[r 1.7,2005-09-19,sponcec3] fixe type of min/maxFreeSpace in FileSystem
	[r 1.6,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r 1.5,2005-09-19,sponcec3] empty log message ***
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraCommonSvc.hpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraDiskCopyCnv.cpp:
	[r1.40,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskPoolCnv.cpp:
	[r1.35,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.34,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.33,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskServerCnv.cpp:
	[r1.32,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFileSystemCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Added totalSize field
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletedCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletionFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.cpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
	[r1.19,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r1.18,2005-08-17,itglp] Fixed in reset() a missing call to the inherited method.
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
	[r 1.8,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraStageFileQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageFindRequestRequestCnv.cpp:
	[r1.23,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToPutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutDoneRequestCnv.cpp:
	[r1.26,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageReleaseFilesRequestCnv.cpp:
	[r1.18,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRequestQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRmRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
	[r1.72,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/db/ora/OraStreamCnv.cpp:
	[r1.47,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.46,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.45,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraSvcClassCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.38,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.37,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.cpp:
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.hpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
  * PROTO2/castor/db/ora/OraTapeCopyCnv.cpp:
	[r1.45,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.44,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.cpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.17,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
	[r1.16,2005-08-29,sponcec3] Fixes going along with the codegeneration fix concerning 1 to 1 relations with one end having no name
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.11,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
	[r 1.4,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.3,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/db/ora/OraTapePoolCnv.cpp:
	[r1.38,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.37,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.36,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeRequestCnv.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
  * PROTO2/castor/db/ora/OraTapeServerCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
	[r1.23,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.22,2005-09-05,mbraeger] server.
	[r1.21,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.20,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
	[r1.19,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.19,2005-09-05,mbraeger] server.
	[r1.18,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.17,2005-08-17,itglp] Removed a method which is now in the ancestor class.
  * PROTO2/castor/db/oracleHeader_drop.sql:
	[r 1.3,2005-09-19,itglp] Fixed some comments.
  * PROTO2/castor/db/oracleTrailer.sql:
	[r1.198,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.197,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.196,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.196,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.195,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.194,2005-09-22,sponcec3] Fixed getUpdateStart : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.193,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.192,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.191,2005-09-20,sponcec3] Fixed typo
	[r1.190,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.189,2005-09-12,sponcec3] Added missing constraint on tape table leading to double insertion of some rows
	[r1.188,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.188,2005-09-05,mbraeger] server.
	[r1.187,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] 
	[r1.187,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.186,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/oracleTrailer_drop.sql:
	[r 1.3,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.2,2005-08-18,itglp] Added DROP statement for matchTape2TapeDrive.
  * PROTO2/castor/dlfbuf.h:
	[r 1.9,2005-09-12,sponcec3] Do not forget mutex unlocking in case of exception !
  * PROTO2/castor/gc/Imakefile:
	[r 1.7,2005-09-20,jdurand] Install gcDaemon with mode bits 0750 instead of 0755
  * PROTO2/castor/io/StreamAbortResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBaseAddressCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBasicResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamCastorFileCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientIdentificationCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDeviceGroupNameCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDisk2DiskCopyDoneRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyForRecallCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamEndResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamErrorHistoryCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileQueryResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileResponseCnv.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileSystemCnv.cpp:
	[r1.20,2005-09-19,sponcec3] Added totalSize field
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFiles2DeleteCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletedCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletionFailedCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFindReqResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFileCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFilesResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCLocalFileCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateDoneCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartResponseCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamIOResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMessageAckCnv.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMoverCloseRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutDoneStartCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamQueryParameterCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamRequestQueryResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSegmentCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageAbortRequestCnv.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFileQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFindRequestRequestCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetNextRequestCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToPutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutDoneRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageReleaseFilesRequestCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRequestQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRmRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStartResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStringResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSubRequestCnv.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeAccessSpecificationCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyForMigrationCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
	[r1.10,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/io/StreamTapeDriveCompatibilityCnv.cpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveDedicationCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.5,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapePoolCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeRequestCnv.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeServerCnv.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.4,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/biniostream.h:
	[r 1.5,2005-09-19,itglp] Changed implementation to make it endianess-aware: the default endianess
	[r 1.5,2005-09-19,itglp] is the LITTLE one as in the production setup, and macros are defined to
	[r 1.5,2005-09-19,itglp] convert from/to host and 'inverted network' representation.
	[r 1.4,2005-09-01,mbraeger] Return to the version 1.2
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/query/IQuerySvc.hpp:
	[r 1.9,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/rh/AbortResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/BasicResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Client.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/EndResponse.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileQueryResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileResponse.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FindReqResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GCFilesResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GetUpdateStartResponse.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/IOResponse.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/RequestQueryResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Response.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Server.cpp:
	[r1.41,2005-09-07,sponcec3] Notify of the number of subrequests for fileRequests so that the right number of threads are waked up
	[r1.40,2005-09-06,sponcec3] only notify the service concerned when a request arrives
	[r1.39,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/rh/StartResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/StringResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/CastorFile.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ClientIdentification.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Disk2DiskCopyDoneRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopy.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyForRecall.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyInfo.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskPool.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskServer.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileClass.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.cpp:
	[r1.17,2005-09-19,sponcec3] Added totalSize field
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.h:
	[r1.21,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystem.hpp:
	[r1.13,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystemCInt.cpp:
	[r1.14,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/Files2Delete.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeleted.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeletionFailed.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFile.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFileList.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCLocalFile.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateDone.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ICommonSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/IFSSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IGCSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.h:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IStagerSvc.h:
	[r1.63,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvc.hpp:
	[r1.65,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvcCInt.cpp:
	[r1.54,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/ITapeSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/MoverCloseRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutDoneStart.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QryRequest.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QueryParameter.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/RemoteGCSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteGCSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/ReqIdRequest.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Request.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Segment.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageAbortRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFileQueryRequest.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFindRequestRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetNextRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToPutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutDoneRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageReleaseFilesRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRequestQueryRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRmRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StartRequest.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Stream.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SubRequest.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SvcClass.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Tape.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopy.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopyForMigration.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapePool.cpp:
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.h:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/DeviceGroupName.hpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/ErrorHistory.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.21,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.21,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldProtocolInterpreter.cpp:
	[r 1.5,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.5,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldRequestFacade.cpp:
	[r 1.4,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.3,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.3,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/TapeAccessSpecification.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.cpp:
	[r1.14,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.h:
	[r1.13,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDrive.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCInt.cpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCompatibility.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.7,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeRequest.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeRequest.h:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequest.hpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequestCInt.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeServer.h:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.hpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerCInt.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.h:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.hpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/VdqmServer.cpp:
	[r1.39,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.38,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.37,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r1.36,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.35,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.34,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.34,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
	[r1.33,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/vdqm/VdqmServer.hpp:
	[r 1.9,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.hpp:
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
	[r 1.8,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.8,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
	[r1.16,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.15,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.14,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.13,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.12,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.12,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
	[r1.11,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
	[r 1.9,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r 1.8,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.hpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
	[r1.13,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.12,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.11,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/newVdqm.h:
	[r 1.3,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/clips/castor.clp:
	[r1.12,2005-09-26,jdurand] Support of space
  * PROTO2/clips/castorweight.clp:
	[r1.15,2005-09-26,jdurand] Support of space
  * PROTO2/codeGeneration/RH.xmi:
	[r1.105,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.104,2005-09-07,mbraeger] Revision of the vdqm db diagram, due to the vdqm meeting of this afternoon
	[r1.103,2005-09-05,mbraeger] Bug fix in the TapeDriveDedication class of the cdqm diagram
	[r1.102,2005-08-29,mbraeger] Modification of the assoziation between TapeRequest and Tape.
	[r1.101,2005-08-22,mbraeger] Added the library Name to the DeviceGroupName Table of the VDQM diagram
  * PROTO2/codeGeneration/gencastor/Makefile:
	[r 1.7,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/changelog:
	[r1.16,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.15,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.14,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.13,2005-08-29,sponcec3] New gencastor release
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/files:
	[r1.15,2005-09-16,itglp] Version 3.4.4.
	[r1.14,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.13,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.12,2005-08-29,sponcec3] New gencastor release
	[r1.11,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/genCastor.cpp:
	[r1.17,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.16,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.15,2005-09-14,itglp] Version 3.4.2.
	[r1.14,2005-08-25,sponcec3] fixed typo
	[r1.13,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/gencastor:
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppbasewriter.cpp:
	[r1.16,2005-08-29,sponcec3] Remove equivalence of no multiplicity and 1
	[r1.15,2005-08-26,sponcec3] Improved parsing of multiplicity (none and 1..n understood now)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.cpp:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.h:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r 1.4,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppclasswriter.cpp:
	[r1.15,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppmycnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcpporacnvwriter.cpp:
	[r1.60,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.59,2005-08-29,sponcec3] Fixed bug in 1 to 1 relations when one end has no name
	[r1.58,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.57,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.56,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppstreamcnvwriter.cpp:
	[r1.12,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.11,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.10,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphbasecnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphmycnvwriter.cpp:
	[r 1.3,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphoracnvwriter.cpp:
	[r1.17,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.16,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphstreamcnvwriter.cpp:
	[r 1.4,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.cpp:
	[r1.22,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.21,2005-08-25,sponcec3] removes comment I introduced by mistake
	[r1.20,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.19,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.h:
	[r 1.6,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/common/Cstrerror.c:
	[r 1.2,2005-09-16,jdurand] Added #include <stdlib.h> for malloc() declaration
  * PROTO2/common/serror.c:
	[r 1.8,2005-09-16,jdurand] Added EDLFNOTCONNECTED error message
  * PROTO2/config/Imake.rules:
	[r1.15,2005-09-20,jdurand] Make the install rules working even if we are not root
	[r1.15,2005-09-20,jdurand] Note: on debian 'fakeroot' indeed pretends that your login is "root")
  * PROTO2/config/Library.tmpl:
	[r1.23,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/LibraryDeps.tmpl:
	[r 1.7,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/Project.tmpl:
	[r1.47,2005-09-26,jdurand] Do not force BuildJob to YES if BuildRmnode is YES
	[r1.46,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/site.def:
	[r1.74,2005-09-22,jdurand] Make "castorexpert" the default expert host
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
	[r 1.3,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.2,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/castor.conf:
	[r 1.6,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.5,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/changelog:
	[r1.65,2005-09-12,jdurand] Fix typo LSF -> DLF
  * PROTO2/debian/control:
	[r1.33,2005-09-26,jdurand] Suppress unused and somewhat dangerous package castor-lsf-tools
	[r1.32,2005-09-22,jdurand] Added Recommends: castor-lib, castor-lib-oracle for castor*-conf packages
  * PROTO2/debian/rules:
	[r1.36,2005-09-27,jdurand] A fix to build debs on amd64 (untested)
	[r1.35,2005-09-26,jdurand] Move creation of $(CURDIR)/debian/castor/usr/lib/perl/CASTOR outside of amd64 or not
	[r1.34,2005-09-26,jdurand] Added dpkg compat rules
	[r1.34,2005-09-26,jdurand] Added pragmas for amd64 (untested)
	[r1.33,2005-09-22,jdurand] Build the *.install from the *.install.perm
	[r1.32,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.31,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.31,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.31,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.31,2005-09-15,jdurand] 
	[r1.31,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/debian/stager.init:
	[r 1.3,2005-09-13,jdurand] Always redirect kill output to /dev/null (we handle the error afterwards)
	[r 1.2,2005-09-13,jdurand] Stop stager using kill -2, poll process status every second, exit if ok, and kill -9 if process is still alive after 60 seconds
  * PROTO2/doc/package/rtcopy/mrOperation.tex:
	[r1.15,2005-08-12,obarring] Remove --Name option in printSvcClass examples
  * PROTO2/doc/uml/StagerSvcs.xmi:
	[r 1.6,2005-09-16,itglp] Updated to reflect latest changements in db services.
	[r 1.5,2005-08-23,itglp] Updated class diagrams to represent the new CDBC API.
  * PROTO2/h/serrno.h:
	[r 1.9,2005-08-22,itglp] Added SQLERR used by the new SQLError exception.
	[r1.10,2005-09-16,jdurand] Added EDLFNOTCONNECTED
  * PROTO2/h/stager_constants.h:
	[r1.17,2005-09-22,jdurand] Make "castorstager" the default notification host
	[r1.16,2005-09-07,jdurand] Definition of STAGER_NOTIFY_MAGIC2
	[r1.16,2005-09-07,jdurand] Make STAGER_NOTIFY_MAGIC equal to STAGER_NOTIFY_MAGIC2 (default value is latest available protocol)
  * PROTO2/h/stager_service_api.h:
	[r1.11,2005-09-07,jdurand] New member for per-thread-per-service structure: int nbTotalThreads;
	[r1.11,2005-09-07,jdurand] New prototype: stager_notifyService_v2(), i.e. notification using version 2 of the notif. protocol, where client gives the wanted number of threads
  * PROTO2/hsmtools/cleanLostFiles:
	[r 1.6,2005-09-22,sponcec3] revert previous commit !
	[r 1.5,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/cleanLostFiles.man:
	[r 1.4,2005-09-22,sponcec3] revert previous commit
	[r 1.3,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/deleteFileClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/deleteSvcClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/enterFileClass.c:
	[r 1.5,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/modifySvcClass.c:
	[r 1.6,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/job/stagerJob.shell:
	[r1.36,2005-08-11,jdurand] Recuperate client ip from arguments instead of using readlsfmsg
  * PROTO2/lib/Imakefile:
	[r1.19,2005-09-23,jdurand] Fixes for static version of libcastorCommonOra
	[r1.18,2005-09-16,jdurand] Re-enable rules for libcastorCommonOra.a that is now included in castor-devel-oracle package
	[r1.17,2005-08-18,itglp] Added rule to remove all .a files in make clean.
	[r1.17,2005-08-18,itglp] Commented out rules to create static libcastorCommonOra.a.
  * PROTO2/makerpm.sh:
	[r 1.2,2005-09-20,jdurand] Do not assume existence of fakeroot when building rpms
  * PROTO2/maketar.sh:
	[r1.33,2005-09-26,jdurand] When building the spec convert /lib/ to /lib64/ instead of /lib to /lib64 (otherwise this too greedy change, affecting file with basename starting with 'lib', like libshift.so!)
	[r1.32,2005-09-26,jdurand] Fix an sed call
	[r1.31,2005-09-26,jdurand] Handle am64 case (where libraries install under /lib64 !)
	[r1.30,2005-09-26,jdurand] Make directories owner by (root,bin) instead of (root,root)
	[r1.29,2005-09-26,jdurand] Use the debian/if.has_oracle, debian/if.has_stk_ssi and debian/if.has_lsf files to build RPM on-the-fly dependnencies
	[r1.28,2005-09-23,jdurand] Do not manipulate on-the-fly (by adding %config() prama) the "/etc/" string for castor-lsf-tools package (that WRONGLY contains production files in the /etc/ directory...)
	[r1.27,2005-09-22,jdurand] Added %attr() in a lot of places
	[r1.26,2005-09-22,jdurand] Now generate the spec using the *.install.perm files
	[r1.25,2005-09-20,jdurand] Added %defattr(-,root,root) to the spec file
	[r1.24,2005-09-15,jdurand] Remove the regexp about architecture: RPM is not good enough to be able to produce subpackages for different architectures (everything is i368, or noarch, or x64_64, or... impossible to distinguish rpms that contains only text than rpms that contain arch-specific things within a single spec file!)
	[r1.23,2005-09-15,jdurand] Added the mechanism to recuperate architecture (not yet translated into rpm language, though)
	[r1.23,2005-09-15,jdurand] Added a blank somewhere in the perl regexp to ensure we catch what we want (was working before, but sounds safer like that)
  * PROTO2/ns/Cns_procreq.c:
	[r 1.3,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() declaration
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
	[r1.76,2005-08-11,jdurand] Removed use of the client message box
  * PROTO2/rtcopy/TapeErrorHandler.c:
	[r 1.8,2005-09-18,obarring] Move free of iaddr
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
	[r1.135,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.135,2005-09-19,obarring] was found
  * PROTO2/rtcopy/rtcpcldcommon.c:
	[r1.31,2005-09-27,obarring] Recall candidates must have correct processing status and no flagged error
	[r1.30,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.30,2005-09-19,obarring] was found
  * PROTO2/scheduler/LSF/Imakefile:
	[r1.11,2005-09-27,jdurand] Removed esub
  * PROTO2/scheduler/LSF/schmod_castor.c:
	[r1.33,2005-09-14,jdurand] Removed unused routine Castor_DebugLsfJobid2Handle
	[r1.33,2005-09-14,jdurand] Hashed internal array using lsf_jobid % hash_size (current hash size is 1000)
	[r1.32,2005-08-11,jdurand] Removed use of the client message box
  * PROTO2/shlib/Imakefile:
	[r1.39,2005-09-16,itglp] Removed dependency upon libcastorCnvs, which for the time being is only for development.
	[r1.38,2005-09-16,jdurand] Fixed production of libcastorCnvs.so (was having the soname libshift.so!)
	[r1.37,2005-08-24,itglp] Added PostgreSql library, fixed dependencies.
  * PROTO2/stager/Imakefile:
	[r1.48,2005-09-26,jdurand] Move MANPAGES_STAGER and EMANPAGES_STAGER outside of the #id BuildStagerDaemon
  * PROTO2/stager/stager.c:
	[r1.84,2005-09-13,jdurand] Loop on sleep() every second in the FileSystem thread so that we can catch a signal (killall stager) much more quickly
  * PROTO2/stager/stager_fs_service.c:
	[r1.38,2005-09-20,jdurand] Added TotalSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Removed minFreeSpace and maxFreeSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Fill filesystem totalSize in any case
	[r1.38,2005-09-20,jdurand] Fill filesystem minFreeSpace and maxFreeSpace only at creation time with 0.2 and 0.3 respectively
  * PROTO2/stager/stager_gc_service.cpp:
	[r 1.9,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_job_service.cpp:
	[r1.33,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_query_service.cpp:
	[r1.24,2005-09-26,sponcec3] Do not consider queries on non existing files as errors from the point of view of the server
	[r1.23,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_service.c:
	[r 1.8,2005-09-07,jdurand] stager_notifyService_v2() implementation
  * PROTO2/stager/stager_service_run.c:
	[r1.29,2005-09-12,jdurand] In the service threads, decrement stagerService[service].notified only if it is > 0
	[r1.29,2005-09-12,jdurand] In the notification threads, verify number of bytes received per version of notification protocol, and increment the stagerService[service].notified variable with the number of wanted threads.
	[r1.28,2005-09-07,jdurand] Support of version 2 (STAGER_NOTIFY_MAGIC2) of the notification, when the number of thread wanted is given by client
	[r1.27,2005-09-07,jdurand] Fix to make sure only one thread is waked up per notification
	[r1.26,2005-09-05,jdurand] Make sure only one thread is waked per notification per service
  * PROTO2/test/castor/db/Imakefile:
	[r 1.8,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * PROTO2/test/castor/db/testdb.cpp:
	[r1.15,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * PROTO2/tools/makeMagicNumbers.csh:
	[r 1.2,2005-08-29,sponcec3] smaller font so that it fits on one page
  * PROTO2/vmgr/vmgr_procreq.c:
	[r 1.5,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() definition
  * PROTO2/CASTOR.spec:
	[r1.35,2005-09-26,jdurand] Typo %fi -> %endif
	[r1.34,2005-09-26,jdurand] Tentative support of amd64
	[r1.33,2005-09-26,jdurand] Exclude BuildRmMaster also in the RPM execution if there is no LSF available
	[r1.32,2005-09-26,jdurand] Implementation of has_stk_ssi, has_lsf and has_oracle a-la-RPM
	[r1.31,2005-09-22,jdurand] Stop calling 'install' with user/group/mode
	[r1.30,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.29,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.29,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.29,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.29,2005-09-15,jdurand] 
	[r1.29,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/castor/BaseCnvSvc.cpp:
	[r1.17,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseCnvSvc.hpp:
	[r1.14,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseObject.cpp:
	[r1.13,2005-08-22,itglp] Added proper cleanup in the destructor.
  * PROTO2/castor/Constants.cpp:
	[r1.28,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.27,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Constants.hpp:
	[r1.51,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.50,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/ICnvSvc.hpp:
	[r1.13,2005-08-26,sponcec3] fully qualify some names and paths
	[r1.12,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Imakefile:
	[r1.108,2005-08-24,itglp] Moved some classes to db/cnv/Imakefile.
	[r1.107,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Services.cpp:
	[r1.20,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/db/Imakefile:
	[r 1.5,2005-08-23,itglp] Upgraded Imakefiles to reflect new packages.
  * PROTO2/castor/db/castor_oracle_create.sql:
	[r 1.9,2005-08-18,itglp] Updated to reflect latest changes in oracleTrailer.sql.
	[r1.22,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.21,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.20,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.20,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.19,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.18,2005-09-22,sponcec3] Fixed isSubRequestToSchedule : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.17,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.16,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.15,2005-09-20,sponcec3] Fixed typo
	[r1.14,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.13,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.12,2005-09-15,itglp] Updated scripts due to latest changes in RH.xmi and oracleTrailer.sql.
	[r1.11,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] 
	[r1.11,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.10,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/castor_oracle_drop.sql:
	[r 1.6,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.5,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r 1.5,2005-09-22,itglp] Fixed comments in the drop script.
	[r 1.4,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/mysql/Imakefile:
	[r 1.9,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.9,2005-08-18,itglp] abstracted database converters.
	[r 1.9,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.cpp:
	[r1.10,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r1.10,2005-08-18,itglp] abstracted database converters.
	[r1.10,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.hpp:
	[r 1.5,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.5,2005-08-18,itglp] abstracted database converters.
	[r 1.5,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/ora/OraCastorFileCnv.cpp:
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraCnvSvc.cpp:
	[r1.51,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
  * PROTO2/castor/db/ora/OraCommonSvc.cpp:
	[r 1.7,2005-09-19,sponcec3] fixe type of min/maxFreeSpace in FileSystem
	[r 1.6,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r 1.5,2005-09-19,sponcec3] empty log message ***
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraCommonSvc.hpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraDiskCopyCnv.cpp:
	[r1.40,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskPoolCnv.cpp:
	[r1.35,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.34,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.33,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskServerCnv.cpp:
	[r1.32,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFileSystemCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Added totalSize field
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletedCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletionFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.cpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
	[r1.19,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r1.18,2005-08-17,itglp] Fixed in reset() a missing call to the inherited method.
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
	[r 1.8,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraStageFileQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageFindRequestRequestCnv.cpp:
	[r1.23,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToPutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutDoneRequestCnv.cpp:
	[r1.26,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageReleaseFilesRequestCnv.cpp:
	[r1.18,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRequestQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRmRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
	[r1.72,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/db/ora/OraStreamCnv.cpp:
	[r1.47,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.46,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.45,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraSvcClassCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.38,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.37,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.cpp:
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.hpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
  * PROTO2/castor/db/ora/OraTapeCopyCnv.cpp:
	[r1.45,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.44,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.cpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.17,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
	[r1.16,2005-08-29,sponcec3] Fixes going along with the codegeneration fix concerning 1 to 1 relations with one end having no name
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.11,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
	[r 1.4,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.3,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/db/ora/OraTapePoolCnv.cpp:
	[r1.38,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.37,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.36,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeRequestCnv.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
  * PROTO2/castor/db/ora/OraTapeServerCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
	[r1.23,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.22,2005-09-05,mbraeger] server.
	[r1.21,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.20,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
	[r1.19,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.19,2005-09-05,mbraeger] server.
	[r1.18,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.17,2005-08-17,itglp] Removed a method which is now in the ancestor class.
  * PROTO2/castor/db/oracleHeader_drop.sql:
	[r 1.3,2005-09-19,itglp] Fixed some comments.
  * PROTO2/castor/db/oracleTrailer.sql:
	[r1.198,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.197,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.196,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.196,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.195,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.194,2005-09-22,sponcec3] Fixed getUpdateStart : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.193,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.192,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.191,2005-09-20,sponcec3] Fixed typo
	[r1.190,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.189,2005-09-12,sponcec3] Added missing constraint on tape table leading to double insertion of some rows
	[r1.188,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.188,2005-09-05,mbraeger] server.
	[r1.187,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] 
	[r1.187,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.186,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/oracleTrailer_drop.sql:
	[r 1.3,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.2,2005-08-18,itglp] Added DROP statement for matchTape2TapeDrive.
  * PROTO2/castor/dlfbuf.h:
	[r 1.9,2005-09-12,sponcec3] Do not forget mutex unlocking in case of exception !
  * PROTO2/castor/gc/Imakefile:
	[r 1.7,2005-09-20,jdurand] Install gcDaemon with mode bits 0750 instead of 0755
  * PROTO2/castor/io/StreamAbortResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBaseAddressCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBasicResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamCastorFileCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientIdentificationCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDeviceGroupNameCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDisk2DiskCopyDoneRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyForRecallCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamEndResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamErrorHistoryCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileQueryResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileResponseCnv.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileSystemCnv.cpp:
	[r1.20,2005-09-19,sponcec3] Added totalSize field
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFiles2DeleteCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletedCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletionFailedCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFindReqResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFileCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFilesResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCLocalFileCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateDoneCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartResponseCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamIOResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMessageAckCnv.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMoverCloseRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutDoneStartCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamQueryParameterCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamRequestQueryResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSegmentCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageAbortRequestCnv.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFileQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFindRequestRequestCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetNextRequestCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToPutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutDoneRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageReleaseFilesRequestCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRequestQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRmRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStartResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStringResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSubRequestCnv.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeAccessSpecificationCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyForMigrationCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
	[r1.10,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/io/StreamTapeDriveCompatibilityCnv.cpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveDedicationCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.5,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapePoolCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeRequestCnv.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeServerCnv.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.4,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/biniostream.h:
	[r 1.5,2005-09-19,itglp] Changed implementation to make it endianess-aware: the default endianess
	[r 1.5,2005-09-19,itglp] is the LITTLE one as in the production setup, and macros are defined to
	[r 1.5,2005-09-19,itglp] convert from/to host and 'inverted network' representation.
	[r 1.4,2005-09-01,mbraeger] Return to the version 1.2
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/query/IQuerySvc.hpp:
	[r 1.9,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/rh/AbortResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/BasicResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Client.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/EndResponse.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileQueryResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileResponse.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FindReqResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GCFilesResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GetUpdateStartResponse.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/IOResponse.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/RequestQueryResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Response.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Server.cpp:
	[r1.41,2005-09-07,sponcec3] Notify of the number of subrequests for fileRequests so that the right number of threads are waked up
	[r1.40,2005-09-06,sponcec3] only notify the service concerned when a request arrives
	[r1.39,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/rh/StartResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/StringResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/CastorFile.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ClientIdentification.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Disk2DiskCopyDoneRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopy.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyForRecall.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyInfo.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskPool.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskServer.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileClass.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.cpp:
	[r1.17,2005-09-19,sponcec3] Added totalSize field
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.h:
	[r1.21,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystem.hpp:
	[r1.13,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystemCInt.cpp:
	[r1.14,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/Files2Delete.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeleted.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeletionFailed.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFile.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFileList.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCLocalFile.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateDone.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ICommonSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/IFSSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IGCSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.h:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IStagerSvc.h:
	[r1.63,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvc.hpp:
	[r1.65,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvcCInt.cpp:
	[r1.54,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/ITapeSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/MoverCloseRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutDoneStart.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QryRequest.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QueryParameter.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/RemoteGCSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteGCSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/ReqIdRequest.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Request.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Segment.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageAbortRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFileQueryRequest.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFindRequestRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetNextRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToPutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutDoneRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageReleaseFilesRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRequestQueryRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRmRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StartRequest.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Stream.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SubRequest.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SvcClass.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Tape.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopy.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopyForMigration.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapePool.cpp:
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.h:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/DeviceGroupName.hpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/ErrorHistory.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.21,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.21,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldProtocolInterpreter.cpp:
	[r 1.5,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.5,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldRequestFacade.cpp:
	[r 1.4,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.3,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.3,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/TapeAccessSpecification.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.cpp:
	[r1.14,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.h:
	[r1.13,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDrive.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCInt.cpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCompatibility.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.7,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeRequest.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeRequest.h:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequest.hpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequestCInt.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeServer.h:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.hpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerCInt.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.h:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.hpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/VdqmServer.cpp:
	[r1.39,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.38,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.37,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r1.36,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.35,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.34,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.34,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
	[r1.33,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/vdqm/VdqmServer.hpp:
	[r 1.9,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.hpp:
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
	[r 1.8,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.8,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
	[r1.16,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.15,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.14,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.13,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.12,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.12,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
	[r1.11,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
	[r 1.9,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r 1.8,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.hpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
	[r1.13,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.12,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.11,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/newVdqm.h:
	[r 1.3,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/clips/castor.clp:
	[r1.12,2005-09-26,jdurand] Support of space
  * PROTO2/clips/castorweight.clp:
	[r1.15,2005-09-26,jdurand] Support of space
  * PROTO2/codeGeneration/RH.xmi:
	[r1.105,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.104,2005-09-07,mbraeger] Revision of the vdqm db diagram, due to the vdqm meeting of this afternoon
	[r1.103,2005-09-05,mbraeger] Bug fix in the TapeDriveDedication class of the cdqm diagram
	[r1.102,2005-08-29,mbraeger] Modification of the assoziation between TapeRequest and Tape.
	[r1.101,2005-08-22,mbraeger] Added the library Name to the DeviceGroupName Table of the VDQM diagram
  * PROTO2/codeGeneration/gencastor/Makefile:
	[r 1.7,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/changelog:
	[r1.16,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.15,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.14,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.13,2005-08-29,sponcec3] New gencastor release
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/files:
	[r1.15,2005-09-16,itglp] Version 3.4.4.
	[r1.14,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.13,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.12,2005-08-29,sponcec3] New gencastor release
	[r1.11,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/genCastor.cpp:
	[r1.17,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.16,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.15,2005-09-14,itglp] Version 3.4.2.
	[r1.14,2005-08-25,sponcec3] fixed typo
	[r1.13,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/gencastor:
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppbasewriter.cpp:
	[r1.16,2005-08-29,sponcec3] Remove equivalence of no multiplicity and 1
	[r1.15,2005-08-26,sponcec3] Improved parsing of multiplicity (none and 1..n understood now)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.cpp:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.h:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r 1.4,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppclasswriter.cpp:
	[r1.15,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppmycnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcpporacnvwriter.cpp:
	[r1.60,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.59,2005-08-29,sponcec3] Fixed bug in 1 to 1 relations when one end has no name
	[r1.58,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.57,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.56,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppstreamcnvwriter.cpp:
	[r1.12,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.11,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.10,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphbasecnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphmycnvwriter.cpp:
	[r 1.3,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphoracnvwriter.cpp:
	[r1.17,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.16,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphstreamcnvwriter.cpp:
	[r 1.4,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.cpp:
	[r1.22,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.21,2005-08-25,sponcec3] removes comment I introduced by mistake
	[r1.20,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.19,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.h:
	[r 1.6,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/common/Cstrerror.c:
	[r 1.2,2005-09-16,jdurand] Added #include <stdlib.h> for malloc() declaration
  * PROTO2/common/serror.c:
	[r 1.8,2005-09-16,jdurand] Added EDLFNOTCONNECTED error message
  * PROTO2/config/Imake.rules:
	[r1.15,2005-09-20,jdurand] Make the install rules working even if we are not root
	[r1.15,2005-09-20,jdurand] Note: on debian 'fakeroot' indeed pretends that your login is "root")
  * PROTO2/config/Library.tmpl:
	[r1.23,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/LibraryDeps.tmpl:
	[r 1.7,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/Project.tmpl:
	[r1.47,2005-09-26,jdurand] Do not force BuildJob to YES if BuildRmnode is YES
	[r1.46,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/site.def:
	[r1.74,2005-09-22,jdurand] Make "castorexpert" the default expert host
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
	[r 1.3,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.2,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/castor.conf:
	[r 1.6,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.5,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/changelog:
	[r1.65,2005-09-12,jdurand] Fix typo LSF -> DLF
  * PROTO2/debian/control:
	[r1.33,2005-09-26,jdurand] Suppress unused and somewhat dangerous package castor-lsf-tools
	[r1.32,2005-09-22,jdurand] Added Recommends: castor-lib, castor-lib-oracle for castor*-conf packages
  * PROTO2/debian/rules:
	[r1.36,2005-09-27,jdurand] A fix to build debs on amd64 (untested)
	[r1.35,2005-09-26,jdurand] Move creation of $(CURDIR)/debian/castor/usr/lib/perl/CASTOR outside of amd64 or not
	[r1.34,2005-09-26,jdurand] Added dpkg compat rules
	[r1.34,2005-09-26,jdurand] Added pragmas for amd64 (untested)
	[r1.33,2005-09-22,jdurand] Build the *.install from the *.install.perm
	[r1.32,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.31,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.31,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.31,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.31,2005-09-15,jdurand] 
	[r1.31,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/debian/stager.init:
	[r 1.3,2005-09-13,jdurand] Always redirect kill output to /dev/null (we handle the error afterwards)
	[r 1.2,2005-09-13,jdurand] Stop stager using kill -2, poll process status every second, exit if ok, and kill -9 if process is still alive after 60 seconds
  * CASTOR/dlf/dlf_mysql_drop.sql:
	[r 1.2,2005-09-07,kotlyar] fixed the right order to drop DLF tables
  * CASTOR/dlf/dlf_mysql_ifce.c:
	[r1.11,2005-09-16,kotlyar] added support for read buffer in dlf_get_host_id and dlf_get_ns_host_id
  * CASTOR/dlf/dlf_oracle_ifce.pc:
	[r1.12,2005-09-20,kotlyar] replaced sigalarm handler to Cthread+sleep for timing buffers flush
  * CASTOR/dlf/dlf_oracle_tbl.sql:
	[r1.10,2005-08-30,sponcec3] Added correct tablespace for the indexes
  * CASTOR/dlf/dlf_procreq.c:
	[r 1.7,2005-09-21,kotlyar] added some checks for synchronization with buffers flushing
  * CASTOR/dlf/dlfquery/config.ora.php:
	[r 1.2,2005-08-12,kotlyar] fixed minor bug "if facility was not all then second level link didn't use it in a GET string"
  * CASTOR/dlf/dlfquery/dlf_showmsg.mysql.log.php:
	[r 1.4,2005-08-12,kotlyar] added support for the subrequest id in query parameters
  * CASTOR/dlf/dlfquery/dlf_showmsg.mysql.php:
	[r 1.4,2005-08-12,kotlyar] added support for the subrequest id in query parameters
  * CASTOR/dlf/dlfquery/dlf_showmsg.ora.log.php:
	[r 1.4,2005-08-12,kotlyar] fixed minor bug "if facility was not all then second level link didn't use it in a GET string"
  * CASTOR/dlf/dlfquery/dlf_showmsg.ora.php:
	[r 1.6,2005-08-26,kotlyar] added access for several DBs form dlfquery (by mapping)
  * CASTOR/dlf/dlfquery/dlf_start.php:
	[r 1.4,2005-08-12,kotlyar] year lists at the start page now is not static
  * CASTOR/dlf/dlfquery/main.css:
	[r 1.3,2005-08-24,kotlyar] added new useful styles
  * CASTOR/dlf/dlfserver.c:
	[r1.13,2005-09-20,kotlyar] replaced sigalarm handler to Cthread+sleep for timing buffers flush
  * PROTO2/doc/package/rtcopy/mrOperation.tex:
	[r1.15,2005-08-12,obarring] Remove --Name option in printSvcClass examples
  * PROTO2/doc/uml/StagerSvcs.xmi:
	[r 1.6,2005-09-16,itglp] Updated to reflect latest changements in db services.
	[r 1.5,2005-08-23,itglp] Updated class diagrams to represent the new CDBC API.
  * CASTOR/h/dlf_server.h:
	[r 1.3,2005-09-16,kotlyar] added buffers for messages in the dlf_srv_thread_info structure
  * PROTO2/h/serrno.h:
	[r 1.9,2005-08-22,itglp] Added SQLERR used by the new SQLError exception.
	[r1.10,2005-09-16,jdurand] Added EDLFNOTCONNECTED
  * PROTO2/h/stager_constants.h:
	[r1.17,2005-09-22,jdurand] Make "castorstager" the default notification host
	[r1.16,2005-09-07,jdurand] Definition of STAGER_NOTIFY_MAGIC2
	[r1.16,2005-09-07,jdurand] Make STAGER_NOTIFY_MAGIC equal to STAGER_NOTIFY_MAGIC2 (default value is latest available protocol)
  * PROTO2/h/stager_service_api.h:
	[r1.11,2005-09-07,jdurand] New member for per-thread-per-service structure: int nbTotalThreads;
	[r1.11,2005-09-07,jdurand] New prototype: stager_notifyService_v2(), i.e. notification using version 2 of the notif. protocol, where client gives the wanted number of threads
  * PROTO2/hsmtools/cleanLostFiles:
	[r 1.6,2005-09-22,sponcec3] revert previous commit !
	[r 1.5,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/cleanLostFiles.man:
	[r 1.4,2005-09-22,sponcec3] revert previous commit
	[r 1.3,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/deleteFileClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/deleteSvcClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/enterFileClass.c:
	[r 1.5,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/modifySvcClass.c:
	[r 1.6,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/job/stagerJob.shell:
	[r1.36,2005-08-11,jdurand] Recuperate client ip from arguments instead of using readlsfmsg
  * PROTO2/lib/Imakefile:
	[r1.19,2005-09-23,jdurand] Fixes for static version of libcastorCommonOra
	[r1.18,2005-09-16,jdurand] Re-enable rules for libcastorCommonOra.a that is now included in castor-devel-oracle package
	[r1.17,2005-08-18,itglp] Added rule to remove all .a files in make clean.
	[r1.17,2005-08-18,itglp] Commented out rules to create static libcastorCommonOra.a.
  * PROTO2/makerpm.sh:
	[r 1.2,2005-09-20,jdurand] Do not assume existence of fakeroot when building rpms
  * PROTO2/maketar.sh:
	[r1.33,2005-09-26,jdurand] When building the spec convert /lib/ to /lib64/ instead of /lib to /lib64 (otherwise this too greedy change, affecting file with basename starting with 'lib', like libshift.so!)
	[r1.32,2005-09-26,jdurand] Fix an sed call
	[r1.31,2005-09-26,jdurand] Handle am64 case (where libraries install under /lib64 !)
	[r1.30,2005-09-26,jdurand] Make directories owner by (root,bin) instead of (root,root)
	[r1.29,2005-09-26,jdurand] Use the debian/if.has_oracle, debian/if.has_stk_ssi and debian/if.has_lsf files to build RPM on-the-fly dependnencies
	[r1.28,2005-09-23,jdurand] Do not manipulate on-the-fly (by adding %config() prama) the "/etc/" string for castor-lsf-tools package (that WRONGLY contains production files in the /etc/ directory...)
	[r1.27,2005-09-22,jdurand] Added %attr() in a lot of places
	[r1.26,2005-09-22,jdurand] Now generate the spec using the *.install.perm files
	[r1.25,2005-09-20,jdurand] Added %defattr(-,root,root) to the spec file
	[r1.24,2005-09-15,jdurand] Remove the regexp about architecture: RPM is not good enough to be able to produce subpackages for different architectures (everything is i368, or noarch, or x64_64, or... impossible to distinguish rpms that contains only text than rpms that contain arch-specific things within a single spec file!)
	[r1.23,2005-09-15,jdurand] Added the mechanism to recuperate architecture (not yet translated into rpm language, though)
	[r1.23,2005-09-15,jdurand] Added a blank somewhere in the perl regexp to ensure we catch what we want (was working before, but sounds safer like that)
  * PROTO2/ns/Cns_procreq.c:
	[r 1.3,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() declaration
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
	[r1.76,2005-08-11,jdurand] Removed use of the client message box
  * CASTOR/rtcopy/Ctape_dummies.c:
	[r1.18,2005-08-30,mbraeger] Remove Ctape_seterrbuf() and stage_setlog() due to duplicate definition in libshift
  * PROTO2/rtcopy/TapeErrorHandler.c:
	[r 1.8,2005-09-18,obarring] Move free of iaddr
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
	[r1.135,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.135,2005-09-19,obarring] was found
  * PROTO2/rtcopy/rtcpcldcommon.c:
	[r1.31,2005-09-27,obarring] Recall candidates must have correct processing status and no flagged error
	[r1.30,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.30,2005-09-19,obarring] was found
  * PROTO2/scheduler/LSF/Imakefile:
	[r1.11,2005-09-27,jdurand] Removed esub
  * PROTO2/scheduler/LSF/schmod_castor.c:
	[r1.33,2005-09-14,jdurand] Removed unused routine Castor_DebugLsfJobid2Handle
	[r1.33,2005-09-14,jdurand] Hashed internal array using lsf_jobid % hash_size (current hash size is 1000)
	[r1.32,2005-08-11,jdurand] Removed use of the client message box
  * PROTO2/shlib/Imakefile:
	[r1.39,2005-09-16,itglp] Removed dependency upon libcastorCnvs, which for the time being is only for development.
	[r1.38,2005-09-16,jdurand] Fixed production of libcastorCnvs.so (was having the soname libshift.so!)
	[r1.37,2005-08-24,itglp] Added PostgreSql library, fixed dependencies.
  * PROTO2/stager/Imakefile:
	[r1.48,2005-09-26,jdurand] Move MANPAGES_STAGER and EMANPAGES_STAGER outside of the #id BuildStagerDaemon
  * PROTO2/stager/stager.c:
	[r1.84,2005-09-13,jdurand] Loop on sleep() every second in the FileSystem thread so that we can catch a signal (killall stager) much more quickly
  * PROTO2/stager/stager_fs_service.c:
	[r1.38,2005-09-20,jdurand] Added TotalSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Removed minFreeSpace and maxFreeSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Fill filesystem totalSize in any case
	[r1.38,2005-09-20,jdurand] Fill filesystem minFreeSpace and maxFreeSpace only at creation time with 0.2 and 0.3 respectively
  * PROTO2/stager/stager_gc_service.cpp:
	[r 1.9,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_job_service.cpp:
	[r1.33,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_query_service.cpp:
	[r1.24,2005-09-26,sponcec3] Do not consider queries on non existing files as errors from the point of view of the server
	[r1.23,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_service.c:
	[r 1.8,2005-09-07,jdurand] stager_notifyService_v2() implementation
  * PROTO2/stager/stager_service_run.c:
	[r1.29,2005-09-12,jdurand] In the service threads, decrement stagerService[service].notified only if it is > 0
	[r1.29,2005-09-12,jdurand] In the notification threads, verify number of bytes received per version of notification protocol, and increment the stagerService[service].notified variable with the number of wanted threads.
	[r1.28,2005-09-07,jdurand] Support of version 2 (STAGER_NOTIFY_MAGIC2) of the notification, when the number of thread wanted is given by client
	[r1.27,2005-09-07,jdurand] Fix to make sure only one thread is waked up per notification
	[r1.26,2005-09-05,jdurand] Make sure only one thread is waked per notification per service
  * PROTO2/test/castor/db/Imakefile:
	[r 1.8,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * PROTO2/test/castor/db/testdb.cpp:
	[r1.15,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * CASTOR/test/dlf/dlftest.c:
	[r 1.5,2005-09-21,kotlyar] added a command line parameter [-t number_of_threads]
  * PROTO2/tools/makeMagicNumbers.csh:
	[r 1.2,2005-08-29,sponcec3] smaller font so that it fits on one page
  * PROTO2/vmgr/vmgr_procreq.c:
	[r 1.5,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() definition

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue, 27 Sep 2005 13:20:27 +0200

castor (2.0.0-64) unstable; urgency=low

  * Fill content of castor-allservicesbuttapeservers-config package

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 11 Aug 2005 11:52:17 +0200

castor (2.0.0-63) unstable; urgency=low

  * Fix in the generation of specfile again, a '$1' got expanded by the script doing the generation
  * New package castor-allservicesbuttapeservers-config containing /etc/castor/castor.conf to be installed on any service, except tape servers where this file needs other entries for RTCOPY

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 11 Aug 2005 11:42:42 +0200

castor (2.0.0-62) unstable; urgency=low

  * Another fix for specfile, unfortunately

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 10 Aug 2005 14:02:56 +0200

castor (2.0.0-61) unstable; urgency=low

  * Fixed in specfile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 10 Aug 2005 13:53:05 +0200

castor (2.0.0-60) unstable; urgency=low

  * Fixed Ctape_Position() prototype
  * Cstrerror() new function - wrapper on strerror preventing errno change - not used for the moment
  * Cmonitd startup script
  * New package castor-scriptlets that externalize scriptlets used on debian or redhat, all service packages depend on it
  * Removal of vmgr*weight*
  * Force ldconfig for lib packages
  * VDQM schema: two new oracle procedures, new tool vdqmDBInit
  * New package castor-rtcopy-mighunter (MigHunter previously was in castor-rtcopy-clientserver)
  * TapeMigrationAndRecall documentation update
  * Optimisation of LSF interface within rmmaster (now re-use the connection to the internal proxy)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 10 Aug 2005 11:58:01 +0200

castor (2.0.0-59) unstable; urgency=low

  * DLF gui
    added mutliple severity select
    added subrequest ID field for the SELECT query (in ORACLE part)
  * Oracle interface
    makeSubRequestWait fix
  * VDQM new schema
    One column added to table DeviceGroupName
    One new function for castor/vdqm/handler/TapeDriveDedicationHandler implemented in the db/ora/OraVdqmSvc class
    Dedication of a tape drive fully implemented
    Log messages added to VdqmServer
  * Packaging
    Resurrected Provides: libshift.so for castor-lib package (needed by cernlib package)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon,  8 Aug 2005 12:28:33 +0200

castor (2.0.0-58) unstable; urgency=low

  * VDQM new schema: Revision of the RtCopyDConnection. Now, it uses the old C (un)marshall makros, because the old protocol can't deal with thebiniostram.h facility.
  * Fixed the clean rule in PROTO2/hsmtools/Imakefile
  * Splitted castor-devel into castor-devel and castor-devel-oracle

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  5 Aug 2005 11:24:34 +0200

castor (2.0.0-57) unstable; urgency=low

  * Fix for install of the perl module

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 18:15:02 +0200

castor (2.0.0-56) unstable; urgency=low

  * Again a fix in CASTOR.spec

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 18:00:13 +0200

castor (2.0.0-55) unstable; urgency=low

  * Fix in CASTOR.spec

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 17:53:58 +0200

castor (2.0.0-54) unstable; urgency=low

  * New package castor-config containing /etc/castor/castor.conf.example
  * Moved CASTOR-client meta package to rpm only (CASTOR.spec) - its name is anyway illegal on debian
  * New factorization of DB interface: now each service has its own explicit service interface
  * Continuing VDQM new schema integration
  * Separation of oracle create/drop statements into two different files
  * Changed logging level in castor/replier/[ClientConnection,RequestReplier].cpp
  * Removed explicit link with libcastorCommonOra.so
  * Added a new 'castor-db-interface' facility provided by DB packages, required by the packages containing the new servers
  * New executable: /usr/bin/diskUsage, /usr/bin/stager_rm
  * Revival of static libraries in the packaging
  * Make sure dlf_write is called with correct uuid in rtcopyclientd
  * New rtcopyclientd message: RTCPCLD_MSG_NOTPPOOLS, DLF_LVL_ERROR,"No tape pool for service class with migr candidates"
  * Skip segment without recall candidate and try to continue with next segment
  * Leak fixes in LSF plugin

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 16:47:45 +0200

castor (2.0.0-53) unstable; urgency=low

  * Vdqm new schema: New files added
  * Protect definitions of closesocket, ioclsocket, INVALID_SOCKET and SOCKET_ERROR
  * Resurected the "filesystem state" in rmnode so that rmnode will always send the filesystem's state. Important when, at startup, rmnode fails to initialize a filesystem
  * Added notion of fixed state per filesystem in rmmaster, because change in rmnode is then always overwriting a possible new state of a filesystem that an admin would decide by doing rmadminnode --node <nodename> --fs <filesystemname> --fsstate <newstate>
  * Support of the new fsstate "Auto", to be used in rmadminnode when the admin have finished with forcing a filesystem's state
  * Add flexibility in the scheduler plugin when DLF will not work - then plugin will log to syslog

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 15 Jul 2005 15:48:12 +0200

castor (2.0.0-52) unstable; urgency=low

  * Fix in the definition of CASTOR-client meta package

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 13 Jul 2005 17:22:18 +0200

castor (2.0.0-51) unstable; urgency=low

  * Fixes in putDoneStart and isSubRequestToSchedule. First ones were checked and are in prod, 2nd ones were not tested
  * Removal of segments in stageRm
  * Propagating the fix in getUpdateStart (see OraJobSvc.cpp)
  * Vdqm new schema: added one new variable to TapeDrive
  * Vdqm new schema: Changed to use the new stager services hierarchy
  * Vdqm new schema: new functions added
  * New remote services implementations, taken from RemoteStagerSvc. Not yet included into the Makefile, commited for backup
  * Port to gcc-4.0
  * Moved libshift.so and libcastorCommonOra.so from the libs to the devel package
  * Removed eexec
  * Fix for processing of -t option in nsdaemon
  * Make a filesystem disabled automatically when rmnode starts and have a problem with rmcreatdirs.sh
  * Use of NOTIFY_ALLOC flag in the LSF plugin scheduler
  * Removed double free in stager job service
  * Removed a print to stdout in stager query service
  * Added socklen_t typedef for _WIN32

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 13 Jul 2005 16:35:10 +0200

castor (2.0.0-50) unstable; urgency=low

  * Added a new functionality to selectTapeDrive()
  * Make Cns_selectsrvr()'s strtok reentrant

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  7 Jul 2005 14:55:46 +0200

castor (2.0.0-49) unstable; urgency=low

  * Renamed putDoneStart to putDoneStartProc to avoid oracle clashing with table having the same name.
  * fixed filerecalled and filerecallfailed for file sizes. Take the one of castorfile and not the one of the subrequest
  * VdqmServer: new log messages added
  * TapeDriveConsistencyChecker fully implemented.
  * Document 'recaller CHECKFILE' configuration
  * Scheduler plugin: work on temporary string rfs instead of the one that is in the job data specific handler
  * Scheduler plugin: Before calling Cstager_IStagerSvc_bestFileSystemForJob(), makes sure that when the job specifies a list of hosts and filesystems, we do not call the stored procedure with any host:filesystem that would NOT be in the candidate hosts as per LSF! Then the risk is to have the stored procedure returning a host:filesystem that does NOT match the candidates
  * Start to work with gcc-4.0

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  7 Jul 2005 11:10:59 +0200

castor (2.0.0-48) unstable; urgency=low

  * Added policies: fs_garbage.clp, migrator.pl, recaller.pl, migratorRetryPolicy.pl and recallerRetryPolicy.pl
  * Added missing prototype in h/rtcpcld.h
  * New alert message in case disk filesize is not correct after a recall
  * Add (configurable) check on disk filesize after recall

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  6 Jul 2005 12:07:24 +0200

castor (2.0.0-47) unstable; urgency=low

  * New files for the new VDQM schema in DB
  * Accept recalls when no subRequest is around. Also don't send EBUSY on a stageRm when recalling is going on, let it continue.
  * Fixed bestFileSystemForSegment for the space reservation. It was basically always 0
  * Fixed time window  by which a putDone could be processed before the last put on the same file was over
  * Fixed some gcc -Wall warnings and missing include files (some of them causing sigsegv on 64bits platform)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  6 Jul 2005 11:22:08 +0200

castor (2.0.0-46) unstable; urgency=low

  * PACKAGING.howto contains info about physical location for the www
  * VDQM's code and TapeRequest and TapeDrive table changes
  * Do not call Creplier_RequestReplier_terminate() in stagerJob and do polling of request replier status in any case

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon,  4 Jul 2005 12:08:17 +0200

castor (2.0.0-45) unstable; urgency=low

  * Fixed previous fixes on the memory leaks
  * Updated PACKAGING.howto
  * Changed behavior of stageRm and created a stageRelease that replaces the old stageRm
  * Bug fix in recreateCastorFile PL/SQL
  * New VDQM improvements
  * Fixed stager_job_service for sending NOTOK IOResponse to client
  * Fixed stager_fs_service 

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri,  1 Jul 2005 16:46:49 +0200

castor (2.0.0-44) unstable; urgency=low

  * Fixed memory leaks
  * Added rfiod open/close handlers
  * Added trigger to garbage collection
  * Fixed problem with nbtapecopiesinfs table with negative values

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 30 Jun 2005 13:04:52 +0200

castor (2.0.0-43) unstable; urgency=low

  * Revisited stager command-liens and man pages
  * Fixed plugin for dlf error buffer
  * timeouted all dlf protocol
  * Fixed logging typo in tape s/w
  * Fixed garbage collection stored procedure for zero-length files

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 22 Jun 2005 15:56:35 +0200

castor (2.0.0-42) unstable; urgency=low

  * Added move medium in smc
  * Added -t <number of threads> in dlfserer
  * Renamed initscripts to the name of the daemon they are dealing with
  * Revisited vdqm schema
  * Support of dynamic load of DB interface
  * Other fixes...

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 19 Jun 2005 09:00:03 +0200

castor (2.0.0-41) unstable; urgency=low

  * Get Provides section from debian/control and put it in CASTOR.spec
  * Support defaultSize with unit in modifySvcClass

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  7 Jun 2005 17:21:43 +0200

castor (2.0.0-40) unstable; urgency=low

  * Fixed putFailedProc where a variable name was the name of a table column
  * Support debug mode for "rootd" in job
  * Check if we are an end-point (no mover) in any case in job
  * Do not answer to client when a putDone is not successful after the call to stored procedure (stager error service should take care of that) in job
  * Check request type before using it (side effect: putDone on prepareToPut jobs had no source) in stager db service
  * Reject putDone's if there was no put in stager db service
  * Cleanup internal requests, even when thay fail in stager job service

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  7 Jun 2005 16:50:44 +0200

castor (2.0.0-39) unstable; urgency=low

  * dlf/dlfquery/dlf_showmsg.mysql.php: added a choice box presentating all existing facilities
  * test/rfio/dataSource.c: first version
  * c++ interface: several fixes
  * job: do not answer to client when putDone fails
  * new tag: v2_0_0_39

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  3 Jun 2005 13:14:51 +0200

castor (2.0.0-38) unstable; urgency=low

  * Added StageMapFile and StageTypeFile constants
  * Use SvcClass as a job feature instead of a job project name

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 30 May 2005 15:31:24 +0200

castor (2.0.0-37) unstable; urgency=low

  * Better GCpolicy taking into account the number of accesses to a file, and not deleting files that were never accessed (pinning problem)
  * Use concat=OPEN_NOTRUNC for tape recalls
  * Added stager_mapper.h for export
  * Fixed fileQuery to specify svcClass

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 30 May 2005 10:27:21 +0200

castor (2.0.0-36) unstable; urgency=low

  * Fixed interface to db in stager: changing a string is a free()/malloc() operation in the c++ interface, thus any previous pointer on that string should be updated
  * Added stager_mapper.h

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 27 May 2005 12:50:38 +0200

castor (2.0.0-35) unstable; urgency=low

  * Added stager mapping 

 -- Ben Couturier <ben.couturier@cern.ch>  Wed, 26 May 2005 11:00:35 +0200

castor (2.0.0-34) unstable; urgency=low

  * Guess major/minor versions from debian/changelog

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 25 May 2005 14:46:35 +0200

castor (2.0.0-33) unstable; urgency=low

  * Fixed man pages
  * Fixed package dependencies (castor-stager-clients in particular)
  * Export *CONFIG files as *CONFIG.example
  * Export sysconfig xxx files as xxx.example
  * Fixed clean/clobber rule in shlib/Imakefile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue, 24 May 2005 17:06:24 +0200

castor (2.0.0-32) unstable; urgency=low

  * Fix in the link of dbtools (in hsmtools dir)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 18:28:50 +0200

castor (2.0.0-31) unstable; urgency=low

  * spec file fix
  * support for the SvcClasses to the filequeries

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 18:02:48 +0200

castor (2.0.0-30) unstable; urgency=low

  * Fix in recreateCastorFile (put on a prepareToPut)
  * Fix in request replier (do not exit when attached in gdb)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 17:34:38 +0200

castor (2.0.0-29) unstable; urgency=low

  * New version, numerous fixes, 1st implementation of prepareToPut+put+putDone

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 11:33:10 +0200

castor (2.0.0-28) unstable; urgency=low

  * Few fixes in packaging

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  3 May 2005 11:01:27 +0200

castor (2.0.0-27) unstable; urgency=low

  * rtcopy fixes
  * CASTOR.spec file
  * etc.. (too many - sorry - see cvs log)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon,  2 May 2005 13:00:30 +0200

castor (2.0.0-26) unstable; urgency=low

  * Added all missing files in previous packaging
  * Added gcDaemon's sysconfig

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 17 Apr 2005 08:07:06 +0200

castor (2.0.0-25) unstable; urgency=low

  * Makes tank dependency outside of libshift
  * Removed lsf/maui modes in rmnode

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sat, 16 Apr 2005 20:59:06 +0200

castor (2.0.0-24) unstable; urgency=low

  * makedeb fix

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sat, 16 Apr 2005 09:39:47 +0200

castor (2.0.0-23) unstable; urgency=low

  * Trying to build 2.0.0-23, that contains:
  * stager/rtcopy/RequestReplier fixes
  * gcdaemon (C) replaced by gcDaemon (C++)
  * etc...

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sat, 16 Apr 2005 09:29:41 +0200

castor (2.0.0-22) unstable; urgency=low

  * Fixed man pages rules in PROTO2/rtcopy/Imakefile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 11 Mar 2005 12:19:53 +0100

castor (2.0.0-21) unstable; urgency=low

  * Fix in rtcopy Imakefile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 11 Mar 2005 10:49:55 +0100

castor (2.0.0-20) unstable; urgency=low

  * Fix in PROTO2/h/Castor_limits.h (IBM 3592 densities definition)
  * Fix in build of rtcopy binaries: only rtcpclientd should have dependency on oracle library
  * Fix in startup scripts when the daemon fails to start

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 11 Mar 2005 09:50:54 +0100

castor (2.0.0-19) unstable; urgency=low

  * Packaged to have up-to-date s/w to install on tape servers

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  9 Mar 2005 18:21:31 +0100

castor (2.0.0-18) unstable; urgency=low

  * Fix castor-job cron.hourly job
  * Fix in stager client
  * Fix in stagerJob (DISKCOPY_CANBEMIGR state)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  8 Feb 2005 14:06:25 +0100

castor (2.0.0-17) unstable; urgency=low

  * Fix in the stored procedure to handle the case where DELETE, for example, is done on no entry but there is nevertheless a binded value for output : that value should be explicitely initialized in the procedure

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  4 Feb 2005 14:45:13 +0100

castor (2.0.0-16) unstable; urgency=low

  * New DB schema (improving in particular requestsToDo and al. queries)
  * Request Replier taking more than one fd at a time
  * Fault tolerance improvement in recaller/migrator
  * Floating point exception fix in rmnode when there is no xfs filesystem

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  4 Feb 2005 10:06:56 +0100

castor (2.0.0-15) unstable; urgency=low

  * In version 2.0.0-14, the correction factor on i/o stat monitoring was wrongly applied to the number of blocks we get from filesystem stats, instead of the computed rate

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  2 Feb 2005 00:43:04 +0100

castor (2.0.0-14) unstable; urgency=low

  * Fix in shared i/o stat monitoring

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  1 Feb 2005 23:54:29 +0100

castor (2.0.0-13) unstable; urgency=low

  * In rmnode, and in case of shared i/o stat (like on xfs), redistribute the read stats to filesystems taking into account only those that have (observed) opened streams

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  1 Feb 2005 22:47:17 +0100

castor (2.0.0-12) unstable; urgency=low

  * Fix in monitoring
  * Fix in bestFileSystemForJob() occi interface
  * Added STAGER_TIMEOUT in the stage api

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  1 Feb 2005 16:55:56 +0100

castor (2.0.0-11) unstable; urgency=low

  * Fix in job crontab

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 31 Jan 2005 12:04:27 +0100

castor (2.0.0-10) unstable; urgency=low

  * Move job output to /var/spool/job
  * Enabled dh_installcron
  * Optimization of some SQL queries

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 31 Jan 2005 11:59:16 +0100

castor (2.0.0-9) unstable; urgency=low

  * Fix in stagerJob.shell

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 30 Jan 2005 14:00:32 +0100

castor (2.0.0-8) unstable; urgency=low

  * Fix typo in PROTO2/job/stagerJob.c
  * Added PROTO2/PACKAGING.howto

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 30 Jan 2005 13:14:48 +0100

castor (2.0.0-7) unstable; urgency=low

  * Make resource monitoring and job use the file invariants when logging
  * Added few logs in DLF from rmmaster

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 30 Jan 2005 09:07:13 +0100

castor (2.0.0-6) unstable; urgency=low

  * Test

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 28 Jan 2005 10:49:04 +0100

castor (2.0.0-4) unstable; urgency=low

  * Test

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 24 Jan 2005 14:46:37 +0100

castor (2.0.0-0) unstable; urgency=low

  * Initial Release.

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 19 Jan 2005 14:53:30 +0100
