castor (2.1.0-0) unstable; urgency=low

  * Identical to 2.0.4-1. Only the version number changed so that the soname
    of the libraries change since we introduced a lack of backward compatibility in version 2.0.4-* that force applications to relink.

 -- sponcec3 <sponcec3@seblap.cern.ch>  Mon, 15 May 2006 14:23:57 +0200

castor (2.0.4-1) unstable; urgency=low

  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/client/BaseClient.hpp:
  * CASTOR2/castor/io/ServerSocket.cpp:
  * CASTOR2/castor/io/ServerSocket.hpp:
    [2006-05-03,sponcec3] Implemented a port range for the callback from the stager
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.259,2006-05-02,itglp] Extend the getNext-like query to PrepareToUpdate requests
  * CASTOR2/castor/rh/Server.cpp:
  * CASTOR2/castor/rh/Server.hpp:
    [2006-05-02,itglp] Added correct help() with RH usage
  * CASTOR2/debian/castor-stager-server.install.perm:
    [r 1.7,2006-05-02,itglp] Added init.d script for cleaningDaemon
  * CASTOR2/debian/castor.conf:
    [r1.17,2006-05-03,sponcec3] New entry for the client port range
  * CASTOR2/rfio/rfio_HsmIf.c:
    [r1.14,2006-05-04,obarring] Add O_CREAT to mover open after a successful return from stage_open() with O_TRUNC
  * CASTOR2/rfio/RfioTURL.c:
  * CASTOR2/rfio/rfrm.c:
  * CASTOR2/rfio/rmdir.c:
    [2006-05-03,gtaur] now it is possible to use //castor in the path
  * CASTOR2/rfio/RfioTURL.c:
  * CASTOR2/rfio/rfcat.c:
  * CASTOR2/rfio/rfchmod.c:
  * CASTOR2/rfio/rfdir.c:
  * CASTOR2/rfio/rfmkdir.c:
  * CASTOR2/rfio/rfrename.c:
  * CASTOR2/rfio/rfrm.c:
  * CASTOR2/rfio/rfstat.c:
  * CASTOR2/rfio/rmdir.c:
    [2006-04-28,gtaur] patch
  * CASTOR2/stager/stager_client_api_open.cpp:
    [r 1.5,2006-05-03,sponcec3] Fixed the handling of read only file opens with only O_TRUNC or only O_CREAT set
  * CASTOR2/stager/stager_db_service.c:
    [r1.138,2006-05-03,sponcec3] Fixed updateRequest processing in the case of non existing files opened with O_CREAT set
    [r1.137,2006-05-03,obarring] Add missing file access permissions checks
  * CASTOR2/stager/stager_qry.man:
    [r1.15,2006-05-02,itglp] Updated queries for directories.
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.39,2006-04-28,itglp] Be aware of queries on directories and show the content as using the final '/'.

 -- sponcec3 <sponcec3@seblap.cern.ch>  Thu,  4 May 2006 17:32:39 +0200

castor (2.0.4-0) unstable; urgency=low

  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
    [r1.34,2006-04-24,felixehm] retrieving of DiskCopy Object crashed, when trying to get a double from db as int
  * CASTOR2/castor/Constants.cpp:
  * CASTOR2/castor/Constants.hpp:
  * CASTOR2/castor/Imakefile:
  * CASTOR2/castor/db/castor_postgres_create.sql:
  * CASTOR2/castor/db/castor_postgres_drop.sql:
  * CASTOR2/castor/db/ora/Imakefile:
  * CASTOR2/castor/db/ora/OraQuerySvc.cpp:
  * CASTOR2/castor/db/ora/OraQuerySvc.hpp:
  * CASTOR2/castor/db/oracleTrailer.sql:
  * CASTOR2/castor/query/IQuerySvc.hpp:
  * CASTOR2/h/stager_client_api.h:
  * CASTOR2/stager/stager_client_api_query.cpp:
  * CASTOR2/stager/stager_qry.c:
  * CASTOR2/stager/stager_query_service.cpp:
    [2006-04-13,sponcec3] Implementation of stager_qry -s
  * CASTOR2/stager/stager_qry.man:
    [r1.14,2006-04-24,sponcec3] Updated man page for -s option
  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/dlf/Dlf.cpp:
  * CASTOR2/castor/dlf/Param.cpp:
  * CASTOR2/castor/io/AbstractSocket.cpp:
  * CASTOR2/castor/io/ClientSocket.cpp:
  * CASTOR2/castor/io/ServerSocket.cpp:
  * CASTOR2/castor/logstream.cpp:
  * CASTOR2/castor/replier/ClientConnection.cpp:
  * CASTOR2/castor/replier/RequestReplier.cpp:
  * CASTOR2/ns/nsgetacl.c:
  * CASTOR2/resourcemonitoring/rmnode.c:
  * CASTOR2/rfio/Imakefile:
  * CASTOR2/rfio/rfio_call64.c:
  * CASTOR2/rfio/rfio_calls.c:
  * CASTOR2/rtcopy/Imakefile:
  * CASTOR2/rtcopy/rtcpapi.c:
  * CASTOR2/rtcopy/rtstat.c:
  * CASTOR2/shlib/Imakefile:
  * CASTOR2/stager/Imakefile:
  * CASTOR2/stager/stager_client_api_common.cpp:
  * CASTOR2/stager/stager_qry.c:
    [2006-04-11,motiakov] Port to Windows.
  * CASTOR2/castor/stager/FileSystem.cpp:
  * CASTOR2/castor/stager/FileSystem.h:
  * CASTOR2/castor/stager/FileSystem.hpp:
  * CASTOR2/castor/stager/FileSystemCInt.cpp:
    [2006-04-24,itglp] Added field minAllowedFreeSpace
  * CASTOR2/castor/db/analyze/cleanDiskCopyReplicas.sql:
    [r 1.4,2006-04-13,sponcec3] Fixed scripts by adding a check
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.258,2006-04-25,itglp] Replaced UNION by UNION ALL (thanks to Nilo).
    [r1.257,2006-04-24,itglp] Fixed parenthesis in describeDiskPools().
    [r1.256,2006-04-24,itglp] Fixed nullGCPolicy function.
    [r1.255,2006-04-24,itglp] Fixed declaration and usage of index for getNextStatus.
    [r1.255,2006-04-24,itglp] Improved fileSystem selection taking into account minAllowedFreeSpace.
    [r1.252,2006-04-13,sponcec3] Commented a constraint causing problems and added some commits inside the delete methods when to many files are commited
    [r1.251,2006-04-11,itglp] Commented out repack-aware queries in fileRecalled
  * CASTOR2/castor/stager/RemoteGCSvc.cpp:
  * CASTOR2/castor/stager/RemoteJobSvc.cpp:
    [2006-04-19,felixehm] Due to changes of BaseClient the Instantiation of it is not complete if there is no enviroment variables set. To set the correct ones, the memberBaseClient::setOption(NULL) has to be called, which reads the information for the stager and rh host from the castor config file.
  * CASTOR2/castor/stager/SubRequestStatusCodes.cpp:
  * CASTOR2/castor/stager/SubRequestStatusCodes.hpp:
    [2006-04-21,sponcec3] Added new status SUBREQUEST_ARCHIVED
  * CASTOR2/clips/castor.clp:
    [r1.14,2006-04-18,sponcec3] New set of defaults corresponding to the ITDC optimization
  * CASTOR2/h/rtcpcld.h:
    [r1.46,2006-04-12,obarring] Add prototype for new method (rtcpcld_putFailed())
  * CASTOR2/h/stager_client_api.h:
    [r1.30,2006-04-24,sponcec3] Correct handling of env variables using Giulia's new functions
  * CASTOR2/hsmtools/diskServer_qry:
    [r 1.2,2006-04-19,sponcec3] Take care of strange status
  * CASTOR2/hsmtools/cleanLostFiles.man:
  * CASTOR2/hsmtools/deleteFileClass.man:
  * CASTOR2/hsmtools/deleteSvcClass.man:
  * CASTOR2/hsmtools/diskServer_qry.man:
  * CASTOR2/hsmtools/diskUsage.man:
  * CASTOR2/hsmtools/enterFileClass.man:
  * CASTOR2/hsmtools/enterSvcClass.man:
  * CASTOR2/hsmtools/gcAllFS.man:
  * CASTOR2/hsmtools/houseKeeping.man:
  * CASTOR2/hsmtools/listFileClass.man:
  * CASTOR2/hsmtools/listSvcClass.man:
  * CASTOR2/hsmtools/modifyFileClass.man:
  * CASTOR2/hsmtools/modifySvcClass.man:
  * CASTOR2/hsmtools/moveDiskServer.man:
  * CASTOR2/hsmtools/printFileClass.man:
  * CASTOR2/hsmtools/printSvcClass.man:
  * CASTOR2/hsmtools/springCleaning.man:
  * CASTOR2/hsmtools/updateCastorFileName.man:
    [2006-04-24,sponcec3] man page for administration of multiple instances of CASTOR from a single node
  * CASTOR2/ns/nsls.c:
    [r 1.3,2006-04-11,motiakov] define F_OK for Windows.
  * CASTOR2/ns/nsrm.c:
    [r 1.3,2006-04-11,motiakov] define S_IFLNK 0120000 for Windows
  * CASTOR2/rfio/RfioTURL.c:
    [r 1.8,2006-04-20,gtaur] printf removed
    [r 1.7,2006-04-18,gtaur] right default
  * CASTOR2/rfio/rfcp.c:
    [r 1.9,2006-04-21,gtaur] still to fix from Castor to local
    [r 1.8,2006-04-21,gtaur] modified parameter used to call  rfio_open64 to be compatible with the new Turl
    [r 1.7,2006-04-20,gtaur] options for the stage_open retieved and used to call the function
  * CASTOR2/rfio/rfio_HsmIf.c:
    [r1.13,2006-04-21,gtaur] still to fix from Castor to local
    [r1.12,2006-04-20,gtaur] options for the stage_open retieved and used to call the function
  * CASTOR2/rfio/rfio_callhandlers.c:
    [r 1.7,2006-04-11,motiakov] Added missing include "rfio.h"
  * CASTOR2/rfio/rfio_serv.c:
    [r1.22,2006-04-24,obarring] Fix the setsockopt(SO_KEEPALIVE) call (was using an uninitialized variable)
  * CASTOR2/rtcopy/MigHunter.c:
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [2006-04-12,obarring] Add calls to new method rtcpcld_putFailed()
  * CASTOR2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.143,2006-04-17,obarring] Skip migration candidates failing with EISDIR until the stager has been fixed!
    [r1.142,2006-04-12,obarring] New method, rtcpcld_putFailed(), for cleaning up from failed migrations
  * CASTOR2/h/stager_client_api_common.h:
  * CASTOR2/stager/stager_client_api_common.cpp:
    [2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
  * CASTOR2/stager/stager_client_api_get.cpp:
    [r1.26,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r1.25,2006-04-19,gtaur] put back the request helper
    [r1.24,2006-04-18,gtaur] setOption added to the Client
  * CASTOR2/stager/stager_client_api_next.cpp:
    [r 1.4,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r 1.3,2006-04-19,gtaur] put back the request helper
  * CASTOR2/stager/stager_client_api_put.cpp:
    [r1.25,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r1.24,2006-04-19,gtaur] put back the request helper
    [r1.23,2006-04-18,gtaur] setOption added to the Client
  * CASTOR2/stager/stager_client_api_query.cpp:
    [r1.22,2006-04-24,sponcec3] Correct handling of env variables using Giulia's new functions
    [r1.21,2006-04-24,sponcec3] More fixes
    [r1.19,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r1.18,2006-04-19,gtaur] put back the request helper
    [r1.17,2006-04-18,gtaur] setOption added to the Client
    [r1.16,2006-04-13,sponcec3] Fix svcClassName usage
  * CASTOR2/stager/stager_client_api_rm.cpp:
    [r 1.6,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
    [r 1.5,2006-04-19,gtaur] put back the request helper
    [r 1.4,2006-04-18,gtaur] setOption added to the Client
  * CASTOR2/stager/stager_client_api_setFileGCWeight.cpp:
    [r 1.2,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
  * CASTOR2/stager/stager_client_api_update.cpp:
    [r 1.9,2006-04-19,gtaur] put back the request helper
    [r1.10,2006-04-20,gtaur] added default values for stage_option used by the BaseClient. New function to set that in stager_client_api_common.cpp
  * CASTOR2/stager/stager_db_service.c:
    [r1.136,2006-04-22,obarring] Log the castor fileid
    [r1.135,2006-04-22,obarring] Fix log message for attempt to open directory
    [r1.134,2006-04-22,obarring] 16265 fix. Add protection against put/get/update request on a directory
  * CASTOR2/stager/stager_fs_service.c:
    [r1.40,2006-04-24,itglp] Inizialize FileSystem.minAllowedFreeSpace
    [r1.39,2006-04-24,itglp] Inizialize FileSystem.minAllowedFreeSpace
  * CASTOR2/stager/stager_get.c:
    [r 1.8,2006-04-11,gtaur] getGlobal add
    [r 1.7,2006-04-11,gtaur] getGlobal add
  * CASTOR2/stager/stager_qry.c:
    [r1.20,2006-04-24,sponcec3] Correct handling of env variables using Giulia's new functions
    [r1.19,2006-04-24,sponcec3] More fixes
  * CASTOR2/test/stager/myTestSuite.py:
    [r 1.2,2006-04-26,gtaur] user tag is not lost anymore
  * CASTOR2/tools/castorRun.c:
    [r 1.4,2006-04-20,gtaur] to be compatible with new stage_options (maybe this file is just a test used)
  * CASTOR2/upgrades/2.0.3_to_2.0.4.sql:
    [r 1.5,2006-04-26,sponcec3] Do not drop non existent index
    [r 1.4,2006-04-24,sponcec3] Don't change the DB version since the DB code is backward compatible
    [r 1.3,2006-04-24,sponcec3] Don't recreate FilesDeletedProcOutput
    [r 1.2,2006-04-24,itglp] Generated SQL script for next version upgrade.

 -- sponcec3 <sponcec3@seblap.cern.ch>  Wed, 26 Apr 2006 15:19:28 +0200

castor (2.0.3-5) unstable; urgency=low

  * CASTOR2/castor/client/BaseClient.cpp:
  * CASTOR2/castor/client/BaseClient.hpp:
    [2006-04-07,gtaur] first version with options added (to be tested)
  * CASTOR2/castor/db/ora/OraCnvSvc.cpp:
  * CASTOR2/hsmtools/castor_tools.pm:
    [2006-03-27,motiakov] Added support for the CASTOR_INSTANCE environment variable.
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.250,2006-04-05,itglp] Fixed stageRm: pending requests on the file being removed are moved to
    [r1.250,2006-04-05,itglp] FAILED instead of being archived, so clients may get an answer.
    [r1.249,2006-03-31,sponcec3] New improvements in the indexes/table setups thanks to Nilo
  * CASTOR2/castor/repack/RepackFileStager.cpp:
    [r 1.3,2006-04-05,felixehm] Changing the Stager SubRequest : the isRepack contains now the vid
    [r 1.3,2006-04-05,felixehm] Before it was a bool, but because this information is needed for further
    [r 1.3,2006-04-05,felixehm] repack process, we have to set it here.
    [r 1.3,2006-04-05,felixehm] This info is used in Cns_replacetapecopy in the NameServer part.
  * CASTOR2/castor/stager/RequestHelper.cpp:
    [r 1.6,2006-04-07,gtaur] first version with options detailed for stager_client_api* (to be tested)
  * CASTOR2/common/sendscsicmd.c:
    [r1.16,2006-02-15,hcacote] tpdaemon uses sg0 device instead of sga
  * CASTOR2/debian/castor-devel.install.perm:
    [r 1.5,2006-03-29,sponcec3] Added missing Cns_struct.h in castor-devel package
  * CASTOR2/dlf/Imakefile:
    [r 1.5,2006-03-28,motiakov] Added man page for the dlf_shutdown() function.
  * CASTOR2/dlf/dlf_api.c:
  * CASTOR2/h/dlf_api.h:
    [2006-03-23,motiakov] Added new function dlf_shutdown();
    [2006-03-23,motiakov] It frees memory occupied by the dlf global structure.
    [2006-03-23,motiakov] This function should be called just before application exit.
  * CASTOR2/h/Castor_limits.h:
  * CASTOR2/h/stager_mapper.h:
    [2006-04-04,gtaur] first modification to be thread safe
  * CASTOR2/stager/stager_put.c:
  * CASTOR2/stager/stager_putdone.c:
  * CASTOR2/stager/stager_qry.c:
  * CASTOR2/stager/stager_rm.c:
  * CASTOR2/h/RfioTURL.h:
    [2006-04-07,gtaur] getDefaultForGlobal
  * CASTOR2/h/stager_client_api.h:
    [r1.28,2006-04-10,felixehm] Added stage_version and stager_port for correct compiling
    [r1.28,2006-04-10,felixehm] see 1.5->1.6 of RequestHelper.cpp)
  * CASTOR2/hsmtools/disknodeShutdown:
    [r 1.4,2006-03-31,aearl] change to test staged or canbemig from staged only
  * CASTOR2/job/stagerJob.shell:
    [r1.39,2006-03-24,itglp] Unset STAGE_HOST too
  * CASTOR2/maketar.sh:
    [r1.45,2006-03-31,sponcec3] Avoid to ship any binary in the source tar ball !
  * CASTOR2/rfio/RfioTURL.c:
    [r 1.6,2006-04-05,gtaur] complete parsing
    [r 1.5,2006-04-04,gtaur] first modification to be thread safe
  * CASTOR2/rmc/rmc_serv.c:
    [r 1.7,2006-03-20,hcacote] try 2 times to get the robot gemometry at startup to avoid scsi bus reset at reboot
  * CASTOR2/stager/stager_mapper.c:
    [r 1.9,2006-04-04,gtaur] first modification to be thread safe
  * CASTOR2/stager/stager_qry.c:
  * CASTOR2/stager/stager_qry.man:
    [2006-03-28,motiakov] Added support for the --regexp (-E) command line option.
  * CASTOR2/test/Imakefile:
    [r 1.9,2006-04-10,itglp] Removed also ns
    [r 1.8,2006-04-10,itglp] Removed vdqm and vmgr test dirs

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 10 Apr 2006 18:49:21 +0200

castor (2.0.3-4) unstable; urgency=low

  * CASTOR2/CASTOR.spec:
    [r1.42,2006-03-24,itglp] Removed castor-rfio-server from metapackage CASTOR-client
  * CASTOR2/castor/Constants.hpp:
    [r1.59,2006-03-14,felixehm] Added new Repack Acknowledgement
  * CASTOR2/castor/db/oracleTrailer.sql:
    [r1.247,2006-03-22,itglp] Fixed fileRecalled for the repack case.
    [r1.247,2006-03-22,itglp] Added 'standard' header comment.
    [r1.246,2006-03-22,itglp] Improved efficiency of bestTapeCopyForStream (credits to Nilo Segura).
    [r1.246,2006-03-22,itglp] Added nullGCPolicy function to be used for disk-only pools.
    [r1.246,2006-03-22,itglp] Reenabled generic garbage collector based on policies.
    [r1.246,2006-03-22,itglp] Fixed internalStageQuery (missing outer join).
    [r1.245,2006-03-17,itglp] Fixed internalStagerQuery to give an answer in case of ongoing recalls.
    [r1.245,2006-03-17,itglp] Enhanced stager_qry by filename by regexp, directory or exact match.
    [r1.244,2006-03-13,sponcec3] Fix problem of recall tape copies being created with a filesystem (Thanks to Olof)
  * CASTOR2/castor/repack/DatabaseHelper.cpp:
  * CASTOR2/castor/repack/DatabaseHelper.hpp:
  * CASTOR2/castor/repack/RepackClient.cpp:
  * CASTOR2/castor/repack/RepackClient.hpp:
    [2006-03-14,felixehm] Added new functionality: now the user can do requests on the tapes in the repack system
  * CASTOR2/castor/repack/RepackCommonHeader.hpp:
    [r 1.9,2006-03-10,felixehm] New Tools Header for the Tools.
    [r1.10,2006-03-14,felixehm] Added new functionality: now the user can do requests on the tapes in the repack system
  * CASTOR2/castor/repack/RepackFileMigrator.cpp:
  * CASTOR2/castor/repack/RepackFileMigrator.hpp:
    [2006-03-13,felixehm] added functionality, but not tested.
  * CASTOR2/castor/repack/RepackFileStager.cpp:
  * CASTOR2/castor/repack/RepackFileStager.hpp:
    [r 1.2,2006-03-10,felixehm] Now the Stager Request is created and send manually. Before we used the stager api.
    [r 1.2,2006-03-10,felixehm] Since I added a new Attribute in the Stager SubRequest (isRepack), the stage api should not be
    [r 1.2,2006-03-10,felixehm] changed. This option would then also be accessable for normal users, which we don't like.
    [r 1.2,2006-03-10,felixehm] So, the Requets is created with the option isrepack set to true.
    [r 1.2,2006-03-10,felixehm] 
    [r 1.2,2006-03-10,felixehm] This option would put the file in STAGEOUT and not (like the normal preparetoget request into STAGED).
    [r 1.2,2006-03-10,felixehm] Then we can use putdone from thge api to migrate the files.
  * CASTOR2/castor/repack/RepackServer.cpp:
    [r1.11,2006-03-10,felixehm] Added new messages and again renamed the RepackDaemon to RepackFileMigrator
  * CASTOR2/castor/repack/RepackWorker.cpp:
  * CASTOR2/castor/repack/RepackWorker.hpp:
    [2006-03-14,felixehm] Added new functionality: now the user can do requests on the tapes in the repack system
  * CASTOR2/codeGeneration/Repack.xmi:
    [r 1.3,2006-03-17,felixehm] Added new Attributes to Acknowledgement
    [r 1.2,2006-03-13,felixehm] new Acknowledgement for Client Requests,
    [r 1.2,2006-03-13,felixehm] added attributes for segment
  * CASTOR2/common/sendscsicmd.c:
    [r1.16,2006-02-15,hcacote] tpdaemon uses sg0 device instead of sga
  * CASTOR2/dlf/dlfquery/base.cfg.php:
    [r 1.2,2006-01-23,sponcec3] Removed logins and passwords from CVS !
  * CASTOR2/doc/uml/Repack.xmi:
    [r 1.2,2006-03-13,felixehm] Added overview for repack classes
  * CASTOR2/h/Crmd_recv_from_rmnode.h:
    [r 1.2,2006-03-14,motiakov] New function added (Crmd_strip_local_domain)
  * CASTOR2/h/RfioTURL.h:
    [r 1.2,2006-03-22,gtaur] New parsing for TURL with params
  * CASTOR2/h/rm_macros.h:
  * CASTOR2/h/rm_messages.h:
    [2006-03-21,motiakov] Added DLF messages
    [r 1.3,2006-03-21,motiakov] Added DLF messages
  * CASTOR2/resourcemonitoring/Crmd_checkpoint.c:
  * CASTOR2/resourcemonitoring/Crmd_recv_from_maui.c:
  * CASTOR2/resourcemonitoring/Crmd_recv_from_users.c:
  * CASTOR2/resourcemonitoring/Crmd_survey.c:
  * CASTOR2/resourcemonitoring/Crmd_tape_feature.c:
  * CASTOR2/resourcemonitoring/rm_messages.c:
  * CASTOR2/resourcemonitoring/rmmaster.c:
    [2006-03-21,motiakov] Added DLF logging to RMMASTER.
  * CASTOR2/resourcemonitoring/Crmd_recv_from_rmnode.c:
    [r1.24,2006-03-21,motiakov] Added DLF logging to RMMASTER.
    [r1.22,2006-03-14,motiakov] Search rmnode by name, not by IP address
  * CASTOR2/resourcemonitoring/rmnode.c:
    [r1.25,2006-03-14,motiakov] Issue error message if RMMASTER_HOST is not defined in the configuration file,
    [r1.25,2006-03-14,motiakov] not rely on the default.
  * CASTOR2/rfio/RfioTURL.c:
    [r 1.4,2006-03-22,gtaur] New parsing for TURL with params
  * CASTOR2/rtcopy/TapeErrorHandler.c:
    [r1.12,2006-03-22,obarring] Fix "TapeCopy not in TAPECOPY_SELECTED status" problems
  * CASTOR2/rtcopy/rtcpcldVmgrInterface.c:
    [r1.21,2006-03-21,obarring] Remove hacks for flagging tape FULL with freespace>0.
  * CASTOR2/stager/stager_mapper.c:
    [r 1.8,2006-03-22,gtaur] stage_mapper_setenv, fixed wrong variable line 162
  * CASTOR2/stager/stager_qry.man:
    [r1.12,2006-03-22,itglp] Files with diskcopies only in invalid status are returned as INVALID
    [r1.12,2006-03-22,itglp] by stager_qry. Man page updated accordingly.
    [r1.11,2006-03-16,itglp] Added the new syntax to be used for regexps
  * CASTOR2/stager/stager_query_service.cpp:
    [r1.37,2006-03-22,itglp] Files with diskcopies only in invalid status are returned as INVALID
    [r1.37,2006-03-22,itglp] by stager_qry. Man page updated accordingly.
    [r1.36,2006-03-17,itglp] Removed calls to the NS, only CastorFile.lastKnownFileName is used.
    [r1.36,2006-03-17,itglp] Minor refactoring.
    [r1.35,2006-03-16,itglp] Added delete statements, fixed bug #15381 (stager_qry giving the same status
    [r1.35,2006-03-16,itglp] for files in different statuses)
  * CASTOR2/vmgr/vmgr_procreq.c:
    [r 1.6,2006-03-21,motiakov] Set estimated free space to bytes_written when vmgr_update is called with
    [r 1.6,2006-03-21,motiakov] TAPE_FULL and number of written files is zero.

 -- Giuseppe LO PRESTI <itglp@localhost.localdomain>  Fri, 24 Mar 2006 14:35:24 +0100

castor (2.0.3-3) unstable; urgency=low

  * Bug fix release on top of the 2.0.3-0 one (branching)
  * PROTO2/castor/Imakefile:
    [r1.120.0.2,2006-03-16,sponcec3] Introduce the changes from v122 here in order to issue a bug fix release

 -- sponcec3 <sponcec3@seblap.cern.ch>  Thu, 16 Mar 2006 15:47:11 +0100

castor (2.0.3-2) unstable; urgency=low

  * PROTO2/castor/Services.cpp:
    [r1.21,2006-03-03,itglp] Enhanced algorithm to load and instantiate services.
    [r1.21,2006-03-03,itglp] Cdlopen() used instead of dlopen().
  * PROTO2/castor/cleaning/CleaningDaemon.cpp:
  * PROTO2/castor/cleaning/CleaningDaemon.hpp:
  * PROTO2/castor/cleaning/HouseKeeping.cpp:
  * PROTO2/castor/cleaning/HouseKeeping.hpp:
  * PROTO2/castor/cleaning/SpringCleaning.cpp:
  * PROTO2/castor/cleaning/SpringCleaning.hpp:
    [2006-03-07,gtaur] Just one object  for OraCleanSvc
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
    [2006-03-03,felixehm] added new attribute originpool
  * PROTO2/castor/db/ora/OraCleanSvc.hpp:
    [r 1.4,2006-03-08,itglp] Fixed includes.
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.hpp:
    [2006-03-03,felixehm] added new attribute originpool
  * PROTO2/castor/repack/Imakefile:
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
    [2006-03-03,felixehm] New Modules:
    [2006-03-03,felixehm] RepackFileMigrator : marks the file, with are staged in CANBEMIGRATED
    [2006-03-03,felixehm] RepackFileStager   : old RepackDaemon - stages the files of a new repack request
    [2006-03-03,felixehm] corrected Server and Imakefile for new modules
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
    [2006-03-03,felixehm] changes for corrected removal of Repack Requests. Now done by the parameter 'R'.
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.8,2006-03-03,felixehm] The normal command is also now added to the list of possible commands for the repack process. If the requets has no valid command set, the server will do nothing.
  * PROTO2/castor/repack/RepackSubRequest.cpp:
  * PROTO2/castor/repack/RepackSubRequest.hpp:
    [2006-03-03,felixehm] new Attribute : originPool.
    [2006-03-03,felixehm] this is needed for the migration process, so the files can be migrated to the origin tapepool.
  * PROTO2/castor/repack/RepackWorker.cpp:
    [r1.13,2006-03-03,felixehm] improving removal of repack request (still, this is not sure, since we don't get any answer from the stager call.
    [r1.13,2006-03-03,felixehm] the origin tape pool is now stored with the subrequest
  * PROTO2/common/serror.c:
  * PROTO2/h/serrno.h:
    [2006-03-07,sponcec3] Inserted DNS specific error messages. They will be used by Cgethostbyname/addr
    [2006-03-07,sponcec3] Fixed missing messages leading to segfault when one wants to display them
  * PROTO2/config/Imake.rules:
    [r1.18,2006-03-02,itglp] Fixed rule to make install shared libraries with correct versioning.
  * PROTO2/debian/castor-lsf-plugin.postinst:
    [r 1.3,2006-03-02,itglp] Changed chmod 777 -> 775 /var/spool/scheduler.
  * PROTO2/hsmtools/castorReconcile:
    [r 1.2,2006-03-09,aearl] bug fixed version - better handling of rmmaster and database failures so that
    [r 1.2,2006-03-09,aearl] processes don't hang around forever trying to get info from non-existant
    [r 1.2,2006-03-09,aearl] clusters
  * PROTO2/hsmtools/disknodeShutdown:
    [r 1.3,2006-03-09,aearl] three bug fixes - extra quotes in help section, @NODE -> @NODES in main and an extra } to solve issue in main
  * PROTO2/job/stagerJob.shell:
    [r1.38,2006-03-02,itglp] Unset STAGER_HOST & STAGER_PORT so that the job takes the parameters
    [r1.38,2006-03-02,itglp] from castor.conf and not from the user's profile.
  * PROTO2/rfio/Imakefile:
    [r1.12,2006-03-02,jdurand] Restrict -lxfs to rfiod
    [r1.12,2006-03-02,jdurand] Compile rfio_alignedbuf.Osuf rfio_xfsprealloc.Osuf only if UseXFSPrealloc is set (dependency problem: rfio_alignedbuf will call xfs routines within rfio_xfsprealloc)
  * PROTO2/shlib/makeshlib.sh:
    [r 1.4,2006-03-02,itglp] Fixed rule to make install shared libraries with correct versioning.
  * CASTOR/tape/wrttpmrk.c:
    [r 1.6,2006-03-09,hcacote] 
    [r 1.6,2006-03-09,hcacote] write filemark controlled by entry in castor.conf default immediate bit off
  * PROTO2/test/security/Csec_client.c:
    [r 1.5,2006-03-07,lopic3] 0 instead of delegation flag
  * PROTO2/test/security/Csec_server.c:
    [r 1.3,2006-03-07,lopic3] no delegation

 -- sponcec3 <sponcec3@seblap.cern.ch>  Fri, 10 Mar 2006 10:33:40 +0100

castor (2.0.3-1) unstable; urgency=low

  * PROTO2/castor/Constants.hpp:
    [r1.58,2006-02-20,gtaur] SVC_ORACLEANSVC = 37 added
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.hpp:
  * PROTO2/castor/repack/RepackSubRequest.cpp:
  * PROTO2/castor/repack/RepackSubRequest.hpp:
    [2006-02-17,felixehm] new member cuuid. the cuuid is stored with the subrequest, so it can be followd easily in the dlf
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.hpp:
    [2006-02-23,felixehm] Added command member for specifying repack commands like removal of tapes from repack, etc.
  * PROTO2/castor/repack/DatabaseHelper.cpp:
  * PROTO2/castor/repack/DatabaseHelper.hpp:
    [r 1.9,2006-02-17,felixehm] Added new function for RepackCleaner. substracted common part into new private method
    [r1.10,2006-02-23,felixehm] added new function to remove a subrequest. also the stager request is removed by calling the api function. added new function getSubRequestByVid. usefull if only the vid is known.
  * PROTO2/castor/repack/FileListHelper.cpp:
    [r1.11,2006-02-23,felixehm] the getFileListSegs method now returns a value if an error occurs
    [r1.10,2006-02-17,felixehm] Removed unnecessary parts (Cns_getpath) and changed a DLF Message Number
  * PROTO2/castor/repack/FileListHelper.hpp:
    [r 1.6,2006-02-23,felixehm] the getFileListSegs method now returns a value if an error occurs
  * PROTO2/castor/repack/FileOrganizer.cpp:
  * PROTO2/castor/repack/FileOrganizer.hpp:
    [r 1.7,2006-02-17,felixehm] Corrected copy of strings to stager request and added deallocation of them after use. The filelass is now a constant. renamed vars
  * PROTO2/castor/repack/Imakefile:
    [r 1.7,2006-02-23,felixehm] renamed FileOrganizer to RepackDaemon, this also has to be done here
    [r 1.6,2006-02-17,felixehm] added new Class for RepackServer : RepackCleaner
  * PROTO2/castor/repack/RepackClient.cpp:
    [r 1.9,2006-02-17,felixehm] the Repack port is now hard-coded, but still changeable in enviroment
    [r1.10,2006-02-23,felixehm] added new functionality: remove a running repack Request
    [r1.10,2006-02-23,felixehm] 
    [r1.10,2006-02-23,felixehm] added little helper method to add the given tapes to the subrequest
  * PROTO2/castor/repack/RepackClient.hpp:
    [r 1.7,2006-02-23,felixehm] added new functionality: remove a running repack Request
    [r 1.7,2006-02-23,felixehm] 
    [r 1.7,2006-02-23,felixehm] added little helper method to add the given tapes to the subrequest
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.7,2006-02-23,felixehm] added RepackCommands.
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
    [2006-02-23,felixehm] Added command member for specifying repack commands like removal of tapes from repack, etc.
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
    [2006-02-17,felixehm] new Thread running : RepackCleaner
  * PROTO2/castor/repack/RepackWorker.cpp:
  * PROTO2/castor/repack/RepackWorker.hpp:
    [r1.12,2006-02-23,felixehm] now better handling of the RepackRequest by checking the command member of a RepackRequest. there is now a own method for each functionality (repack and removal of tapes from repack)
    [r1.11,2006-02-17,felixehm] Renamed Method (better understanding)
    [r1.11,2006-02-17,felixehm] if a tape is not found, has invalid status or is marked as free the DLF message is an WARNING not an ERROR.

  * PROTO2/castor/server/BaseDaemon.cpp:
  * PROTO2/castor/server/BaseDaemon.hpp:
  * PROTO2/castor/server/BaseServer.cpp:
  * PROTO2/castor/server/BaseServer.hpp:
  * PROTO2/castor/server/BaseThreadPool.cpp:
  * PROTO2/castor/server/BaseThreadPool.hpp:
  * PROTO2/castor/server/ListenerThreadPool.hpp:
  * PROTO2/castor/server/Mutex.cpp:
  * PROTO2/castor/server/Mutex.hpp:
  * PROTO2/castor/server/NotificationThread.cpp:
  * PROTO2/castor/server/NotificationThread.hpp:
  * PROTO2/castor/server/SelectProcessThread.hpp:
  * PROTO2/castor/server/ServiceThread.cpp:
  * PROTO2/castor/server/ServiceThread.hpp:
  * PROTO2/castor/server/SignalThreadPool.cpp:
  * PROTO2/castor/server/SignalThreadPool.hpp:
    [2006-02-20,itglp] First implementation of NotificationThread. Mutex timeout can be specified as parameter, to be passed to BaseThreadPool's ctor.
  * PROTO2/castor/server/IThread.hpp:
    [r 1.6,2006-02-20,itglp] Removed throw() from run() method signature.
  * PROTO2/castor/server/Mutex.cpp:
  * PROTO2/castor/server/Mutex.hpp:
    [2006-02-22,itglp] Fixed timeout handling.
  * PROTO2/config/site.def:
    [r1.86,2006-02-22,gtaur] CleaningConfiFile path defined
    [r1.85,2006-02-20,gtaur] BuildCleaning added
    [r1.84,2006-02-20,jdurand] Added: #define UseXFSPrealloc YES
  * PROTO2/debian/control:
    [r1.40,2006-02-20,jdurand] Added xfslibs-dev in Build-Depends
  * PROTO2/maketar.sh:
    [r1.44,2006-02-20,jdurand] Consider only the first Build-Depend for debian/RedHat compat list
    [r1.43,2006-02-20,jdurand] Force UseXFSPrealloc to YES in any case
  * PROTO2/rfio/Imakefile:
    [r1.11,2006-02-20,jdurand] Added rfio_alignedbuf.Osuf rfio_xfsprealloc.Osuf objects
  * PROTO2/rfio/rfio_call64.c:
  * PROTO2/rfio/rfio_calls.c:
    [2006-02-20,jdurand] Peter Kelemen's xfs and direct i/o hooks
  * CASTOR/tape/rbtsubr.c:
  * CASTOR/tape/smcsubr2.c:
    [2006-03-01,hcacote] if medium not present smcdismount returns RBT_OK and tapedrive is not configured down
  * PROTO2/test/stager/graphicTest.py:
    [r 1.2,2006-02-28,gtaur] better solution for path to run test scripts.

 -- Sebastien Ponce <sponcec3@pcitds13>  Thu,  2 Mar 2006 09:09:36 +0100

castor (2.0.3-0) unstable; urgency=low

  * PROTO2/CASTOR.spec:
    [r1.40,2006-02-17,sponcec3] Fix castor version for the install rule and the building of hsmtools/dbtools when oracle is not present
    [r1.39,2006-02-16,sponcec3] Don't build hsmtools package if ORACLE is not present
    [r1.38,2006-02-16,sponcec3] Fix case for BuildVDQMCpp
    [r1.37,2006-02-15,sponcec3] Do not build new Vdqm when ORACLE not available
  * PROTO2/castor/BaseServer.cpp:
  * PROTO2/castor/BaseServer.hpp:
    [2006-02-07,itglp] Removed old BaseServer, now replaced by castor::server::BaseServer.
  * PROTO2/castor/Constants.cpp:
  * PROTO2/castor/Constants.hpp:
    [2006-02-07,itglp] FileQueryResponse flagged as deleted type, fixed constants for Repack.
  * PROTO2/castor/Imakefile:
    [r1.120,2006-02-07,itglp] Removed FileQueryResponse compilation.
    [r1.119,2006-02-01,sponcec3] Added TooBig exception to C++ framework, corresponding to E2BIG
  * PROTO2/castor/client/BaseClient.cpp:
    [r1.37,2006-02-16,sponcec3] Fix the choice of the RH port in the client
    [r1.36,2006-02-03,sponcec3] fix initialization of m_hasAuthorizationId
  * PROTO2/castor/db/DbBaseObj.cpp:
  * PROTO2/castor/db/DbBaseObj.hpp:
  * PROTO2/castor/db/DbCommonSvc.cpp:
  * PROTO2/castor/db/DbCommonSvc.hpp:
    [2006-02-01,itglp] Moved commit() and rollback() methods up one level.
  * PROTO2/castor/db/analyze/currentStatus.sql:
  * PROTO2/castor/db/analyze/solutions.sql:
    [2006-02-16,sponcec3] Added cleanup of finished subrequests
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_oracle_drop.sql:
    [2006-02-16,sponcec3] Integrated changes from oracleTrailer.sql up to version 1.240
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_postgres_create.sql:
  * PROTO2/castor/db/cnv/DbCastorFileCnv.cpp:
  * PROTO2/castor/db/ora/OraCastorFileCnv.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/ora/OraStagerSvc.cpp:
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
  * PROTO2/castor/db/oracleTrailer.sql:
  * PROTO2/castor/io/StreamCastorFileCnv.cpp:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/castor/stager/CastorFile.cpp:
  * PROTO2/castor/stager/CastorFile.h:
  * PROTO2/castor/stager/CastorFile.hpp:
  * PROTO2/castor/stager/CastorFileCInt.cpp:
  * PROTO2/castor/stager/DiskCopyInfo.cpp:
  * PROTO2/castor/stager/DiskCopyInfo.h:
  * PROTO2/castor/stager/DiskCopyInfo.hpp:
  * PROTO2/castor/stager/DiskCopyInfoCInt.cpp:
  * PROTO2/castor/stager/IStagerSvc.h:
  * PROTO2/castor/stager/IStagerSvc.hpp:
  * PROTO2/castor/stager/IStagerSvcCInt.cpp:
  * PROTO2/h/stager_catalogInterface.h:
  * PROTO2/stager/stager_db_service.c:
  * PROTO2/stager/stager_query_service.cpp:
    [2006-02-01,sponcec3] Implementation of stage_qry with regexp support
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackRequestCnv.hpp:
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.hpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSubRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackRequestCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSubRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackRequestCnv.hpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.cpp:
  * PROTO2/castor/io/StreamRepackSubRequestCnv.hpp:
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
  * PROTO2/castor/repack/RepackSegment.cpp:
  * PROTO2/castor/repack/RepackSegment.hpp:
  * PROTO2/castor/repack/RepackSubRequest.cpp:
  * PROTO2/castor/repack/RepackSubRequest.hpp:
    [2006-02-02,felixehm] changed RepackSubrequest.size to xsize, due to naming problems with oracle
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.cpp:
  * PROTO2/castor/db/cnv/DbRepackSegmentCnv.hpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.cpp:
  * PROTO2/castor/db/ora/OraRepackSegmentCnv.hpp:
  * PROTO2/castor/repack/RepackSegment.cpp:
  * PROTO2/castor/repack/RepackSegment.hpp:
    [2006-02-14,felixehm] compression and filesec for positioning now also stored
  * PROTO2/castor/db/cnv/Imakefile:
    [r 1.6,2006-02-15,sponcec3] Fixed clean rule
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/newora/OraCnvSvc.cpp:
  * PROTO2/castor/db/ora/OraCnvSvc.cpp:
  * PROTO2/castor/db/oracleTrailer.sql:
    [2006-02-16,sponcec3] Changed DB version
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.242,2006-02-14,gtaur] Fixed clashing commits. Revision 1.241 should never be used
    [r1.241,2006-02-07,gtaur] status for archived subrequests and procedures to delete old subrequests added.
    [r1.240,2006-02-07,sponcec3] Fix the query_line cursor for new stqger_query (forgot to commit it before)
  * PROTO2/castor/io/StreamFileQueryResponseCnv.cpp:
  * PROTO2/castor/io/StreamFileQueryResponseCnv.hpp:
  * PROTO2/castor/rh/FileQueryResponse.cpp:
  * PROTO2/castor/rh/FileQueryResponse.h:
  * PROTO2/castor/rh/FileQueryResponse.hpp:
  * PROTO2/castor/rh/FileQueryResponseCInt.cpp:
  * PROTO2/stager/stager_client_api_query.cpp:
    [2006-02-07,itglp] FileQueryResponse was replaced by FileQryResponse.
  * PROTO2/castor/repack/DatabaseHelper.cpp:
  * PROTO2/castor/repack/DatabaseHelper.hpp:
    [2006-02-14,felixehm] changed Method name (is_stored)
    [2006-02-14,felixehm] improve DLF logging
    [2006-02-14,felixehm] removed 1 possible memory leak
    [2006-02-07,felixehm] Changed update method for Subrequest.
    [2006-02-02,felixehm] 1.New function for polling DB (needed by FileOrganizer)
    [2006-02-02,felixehm] 2.New SQL Statements
    [2006-02-02,felixehm] 3.Inherits now from DbBaseObj for comfortable access to DB
    [2006-02-02,felixehm] 4.Provides function for updating Object in DB
    [2006-02-02,felixehm] 5.provides function to check, if a vid is already in DB (needed in storeRequest)
  * PROTO2/castor/repack/FileListHelper.cpp:
  * PROTO2/castor/repack/FileListHelper.hpp:
    [2006-02-14,felixehm] removed mem leak for m_ns
    [2006-02-14,felixehm] Added the initialisation of the m_ns (nameserver var) by castor config file
    [2006-02-14,felixehm] Added cuuid for message follow
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] very important : not parent_fileid, but fileid is the correct one!!
    [2006-02-14,felixehm] more information is stored with the segment
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] and last but not least, DLF
    [2006-02-03,felixehm] Experimental version for finding error during update in db.
    [2006-02-03,felixehm] two connections are opened, this cause a lock.
    [2006-02-02,felixehm] creation of sorted list of file, which are on tape
    [2006-02-02,felixehm] function returns now only the parent_fileids, not the full path -> faster
  * PROTO2/castor/repack/FileOrganizer.cpp:
  * PROTO2/castor/repack/FileOrganizer.hpp:
    [2006-02-14,felixehm] added cuuid information
    [2006-02-14,felixehm] storing request in to DB AFTER stage_command
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] stages file
    [2006-02-14,felixehm] 
    [2006-02-14,felixehm] removed mistake for putting filenames into stager_request
    [2006-02-14,felixehm] filehelper is now dynamically
    [2006-02-07,felixehm] Added new Messages for DLF
    [2006-02-07,felixehm] If a request job arrives, now the segments are added and the subrequest updated in DB
    [2006-02-07,felixehm] removed mem lack
    [2006-02-03,felixehm] Experimental version for finding error during update in db.
    [2006-02-03,felixehm] two connections are opened, this cause a lock.
    [2006-02-02,felixehm] Added polling time from CommonHeader
    [2006-02-02,felixehm] Inheritnace from IThread, so the Organizer can be started as a ThreadPool from RepackServer
    [2006-02-02,felixehm] now polling DB for new Requests and  get the filenames - no staging right until now
    [2006-02-02,felixehm] The state of the Request will be changed before staging files : implemented!
  * PROTO2/castor/repack/Imakefile:
    [r 1.5,2006-02-02,felixehm] 1.removed compilation of DbCnvSvc (this is already provied in Library
    [r 1.5,2006-02-02,felixehm] 2.Added new "Deamon" FileOrganzier"
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
    [2006-02-14,felixehm] added help section
    [2006-02-14,felixehm] removed DLF logging
    [2006-02-07,felixehm] Added new Feature : Tapepool can be repacked!
    [2006-02-07,felixehm] Added Header for MesageAck from Server (formerly included with RepackServer.hpp)
    [2006-02-02,felixehm] Added machine name to the Request
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.6,2006-02-14,felixehm] no macros  (removed defines)
    [r 1.5,2006-02-02,felixehm] Removed REPACK_POLL due to compiling probs - little mistake, yes, yes
    [r 1.4,2006-02-02,felixehm] added defines to namespace of castor::repack
  * PROTO2/castor/repack/RepackRequestCInt.cpp:
    [r 1.7,2006-02-02,felixehm] not neccessary
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
    [2006-02-14,felixehm] now the port is in repack namespace
    [2006-02-07,felixehm] Added new Messages
    [2006-02-07,felixehm] 
    [2006-02-07,felixehm] Test with new ListenerThread runs successfully. Former version of ListenerThreadPool
    [2006-02-07,felixehm] was not created properly (blocked the main process)
    [2006-02-03,felixehm] Experimental version for finding error during update in db.
    [2006-02-03,felixehm] two connections are opened, this cause a lock.
    [2006-02-02,felixehm] changed inheritance to BaseDaemon
    [2006-02-02,felixehm] added new ThreadPool FileOrganizer for querying the DB
    [2006-02-02,felixehm] removed Messages (they are in RepackWorker)
  * PROTO2/castor/repack/RepackWorker.cpp:
    [r 1.9,2006-02-07,felixehm] Removed storing Segments (takes to long for request handling)
    [r 1.9,2006-02-07,felixehm] changed some messages
    [r 1.9,2006-02-07,felixehm] now tape pool is handled
    [r 1.8,2006-02-03,felixehm] Experimental version for finding error during update in db.
    [r 1.8,2006-02-03,felixehm] two connections are opened, this cause a lock.
    [r 1.7,2006-02-02,felixehm] added new Messages for FileOrganizer;
    [r 1.7,2006-02-02,felixehm] removed init() due to changes of IThread
    [r1.10,2006-02-14,felixehm] Added new method to check tape status
    [r1.10,2006-02-14,felixehm] cleaned code and improve messages
  * PROTO2/castor/repack/RepackWorker.hpp:
    [r 1.8,2006-02-14,felixehm] Added new method to check tape status
    [r 1.8,2006-02-14,felixehm] cleaned code and improve messages
    [r 1.7,2006-02-02,felixehm] added new Messages for FileOrganizer;
    [r 1.7,2006-02-02,felixehm] removed init() due to changes of IThread
  * PROTO2/castor/rh/RHThread.cpp:
  * PROTO2/castor/rh/RHThread.hpp:
    [2006-02-01,itglp] Fixed thread-unsafe condition.
  * PROTO2/castor/rh/Server.cpp:
    [r1.45,2006-02-06,itglp] Use the ListenerPool without spawning a thread for the loop.
  * PROTO2/castor/server/BaseThreadPool.cpp:
    [r 1.8,2006-02-01,itglp] Changed interface of threads to fix thread-unsafe condition shown in the RH.
  * PROTO2/castor/server/BaseThreadPool.hpp:
    [r 1.8,2006-02-06,itglp] Made Listener pool on a separated thread by default.
    [r 1.7,2006-02-02,itglp] Made this class abstract to prevent direct usage.
  * PROTO2/castor/server/IThread.hpp:
    [r 1.5,2006-02-02,itglp] Better comment to explain the interface.
    [r 1.4,2006-02-01,itglp] Changed interface of threads to fix thread-unsafe condition shown in the RH.
  * PROTO2/castor/server/ListenerThreadPool.cpp:
  * PROTO2/castor/server/ListenerThreadPool.hpp:
    [2006-02-06,itglp] Made Listener pool on a separated thread by default.
  * PROTO2/castor/server/NotificationThread.cpp:
  * PROTO2/castor/server/NotificationThread.hpp:
  * PROTO2/castor/server/SelectProcessThread.hpp:
  * PROTO2/castor/server/ServiceThread.cpp:
  * PROTO2/castor/server/ServiceThread.hpp:
    [2006-02-01,itglp] Changed interface of threads to fix thread-unsafe condition shown in the RH.
  * CASTOR/common/sendscsicmd.c:
    [r1.16,2006-02-15,hcacote] tpdaemon uses sg0 device instead of sga
  * PROTO2/config/Imake.rules:
    [r1.17,2006-02-13,itglp] Revert last commit.
    [r1.16,2006-02-10,itglp] Added macro to check Castor version.
  * PROTO2/config/Project.tmpl:
  * PROTO2/config/site.def:
  * PROTO2/dlf/Imakefile:
  * PROTO2/debian/control:
  * PROTO2/debian/rules:
    [2006-02-16,sponcec3] dlfgui is now packaged. You can set BuildDlfGui to YES and make install will install it
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/MigHunter.init:
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rtcpclientd.init:
  * PROTO2/debian/stager.init:
  * PROTO2/debian/vmgrdaemon.init:
    [2006-02-07,itglp] Removed check for ORACLE_HOME since now it is not needed with oracle-instantclient.
  * PROTO2/debian/castor-dbtools.install.perm:
  * PROTO2/debian/castor-dbtools.manpages:
  * PROTO2/debian/castor-hsmtools.install.perm:
  * PROTO2/debian/castor-hsmtools.manpages:
    [2006-02-16,sponcec3] move vdqmDBInit from the hsmtools to the dbtools package
  * PROTO2/debian/castor-job.postinst:
    [r 1.3,2006-02-07,itglp] Fixed missing commands.
  * PROTO2/debian/castor.conf:
    [r1.12,2006-02-01,sponcec3] Included new option FILEQUERY MAXNBRESPONSES to default castor.conf
  * PROTO2/debian/castor.sysconfig:
    [r 1.3,2006-02-07,itglp] Removed db related settings, not needed with oracle-instantclient.
  * PROTO2/debian/if.has_oracle:
    [r 1.5,2006-02-16,sponcec3] it is not hsmtools but dbtools that should not be compile if ORACLE in not present
    [r 1.4,2006-02-16,sponcec3] Don't compile VDQM server if Oracle is not present
    [r 1.3,2006-02-16,sponcec3] Don't build hsmtools package if ORACLE is not present
  * PROTO2/debian/lsf.sysconfig:
    [r 1.2,2006-02-07,itglp] Removed db related settings, not needed with oracle-instantclient.
  * PROTO2/dlf/dlforasetup.sh:
    [r 1.6,2006-02-10,itglp] Added Repack in the list of facilities.
  * PROTO2/h/stager_client_api_common.h:
    [r 1.3,2006-02-02,sponcec3] Added stage_setid stage_getid and stage_resetid to stager client interface
  * PROTO2/job/stagerJob.c:
    [r1.148,2006-01-31,itglp] Fixed log call for setServer with the correct argument.
  * PROTO2/maketar.sh:
    [r1.41,2006-02-17,sponcec3] Fix castor version for the install rule
    [r1.40,2006-02-13,itglp] When version is overridden, override shlib/makeshlib.sh too.
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.81,2006-02-08,jdurand] Re-enabled the job submission in three steps otherwise there is a time-window where a job can be started by LSF without the message box No 1 posted (despite the plugin will say NO in all steps), i.e.:
    [r1.81,2006-02-08,jdurand] submit job in PSUSP state
    [r1.81,2006-02-08,jdurand] post the message box No 1
    [r1.81,2006-02-08,jdurand] Release job
  * PROTO2/scheduler/LSF/schmod_castor.c:
    [r1.37,2006-02-08,jdurand] Added JOBID when logging the normal tracing operation: New phase ok, Notify phase ok, Delete phase ok
    [r1.36,2006-02-08,jdurand] Add internal code debug, disabled by default
    [r1.36,2006-02-08,jdurand] Add jobid whenever possible to error logs
    [r1.35,2006-02-07,jdurand] Remove internal fork - works with LSF 6.1-24
  * PROTO2/shlib/Imakefile:
    [r1.46,2006-02-13,itglp] Changed the rule to build shared libraries: makeshlib.sh is used now.
  * PROTO2/stager/stager.c:
    [r1.85,2006-01-31,sponcec3] Allows the stager to start when dlf not running
  * PROTO2/stager/stager_client_api_common.cpp:
    [r1.20,2006-02-03,sponcec3] Made the setClientAuthorizationId method fully C++ compliant, by using exceptions instead of int return code
    [r1.19,2006-02-02,sponcec3] New version of setClientAuthorizationId, purely C++ and using namespaces

  * PROTO2/stager/stager_qry.man:
    [r1.10,2006-02-01,sponcec3] Implemented limitation on the number of responses a filequery may give
  * PROTO2/tape/Imakefile:
    [r 1.5,2006-02-16,sponcec3] Support for x86_64 (CDK lib is in a different place on this platform)
  * CASTOR/tape/wrttpmrk.c:
    [r 1.5,2006-02-14,hcacote] write filemarks with sg driver and immediate bit set
  * PROTO2/tools/makeMagicNumbers.csh:
    [r 1.6,2006-02-15,sponcec3] better script that parses more files in order to not forget constants and put better titles
    [r 1.5,2006-01-31,itglp] Improved scan to take into account more codes files.


 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 17 Feb 2006 16:40:00 +0100

castor (2.0.2-10) unstable; urgency=low

  * PROTO2/castor/Constants.hpp:
    [r1.56,2006-01-23,felixehm] Added new Repack Object for Request handling
  * PROTO2/castor/client/BaseClient.cpp:
  * PROTO2/castor/client/BaseClient.hpp:
    [r1.15,2006-01-30,bcouturi] AUTHID Added Authorization ID to client
  * PROTO2/castor/db/newora/Imakefile:
    [r 1.4,2006-01-20,itglp] Take into account the flag UseOraCDBC to compile the new db access layer for Oracle.
  * PROTO2/castor/db/newora/OraCnvSvc.cpp:
  * PROTO2/castor/db/newora/OraCommonSvc.cpp:
  * PROTO2/castor/db/newora/OraCommonSvc.hpp:
  * PROTO2/castor/db/newora/OraStatement.hpp:
  * PROTO2/castor/db/newora/OraTapeSvc.cpp:
  * PROTO2/castor/db/ora/OraFSSvc.cpp:
  * PROTO2/castor/db/ora/OraFSSvc.hpp:
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
  * PROTO2/castor/db/ora/OraJobSvc.cpp:
  * PROTO2/castor/db/ora/OraJobSvc.hpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/ora/OraStagerSvc.cpp:
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
  * PROTO2/castor/db/ora/OraTapeSvc.hpp:
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.25,2006-01-27,itglp] Fixes to compile libcastorCommonOra taking into account UseOraCDBC.
  * PROTO2/castor/dlfbuf.h:
    [r1.11,2006-01-30,sponcec3] Fixed proper output of error message in case of Unable to initialize DLF
  * PROTO2/castor/repack/DatabaseHelper.cpp:
  * PROTO2/castor/repack/DatabaseHelper.hpp:
  * PROTO2/castor/repack/FileListHelper.cpp:
  * PROTO2/castor/repack/Imakefile:
    [r 1.5,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
    [r 1.4,2006-01-25,felixehm] first implementation of database handling
    [r 1.4,2006-01-25,felixehm] SubRequest handling
    [r 1.3,2006-01-23,felixehm] Added new RepackSubRequest for multi-tape requests
    [r 1.4,2006-01-25,felixehm] first implementation of database handling
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
    [r 1.5,2006-01-27,felixehm] Added sending response to client, after storing the Request
    [r 1.4,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
    [r 1.3,2006-01-23,felixehm] Added new RepackSubRequest for multi-tape requests
  * PROTO2/castor/repack/RepackCommonHeader.hpp:
    [r 1.3,2006-01-26,felixehm] Added new FileOrganizer and added status flag to RepackSubRequest
    [r 1.2,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
  * PROTO2/castor/repack/RepackRequestCInt.cpp:
  * PROTO2/castor/repack/RepackSegment.cpp:
  * PROTO2/castor/repack/RepackSegment.hpp:
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
  * PROTO2/castor/repack/RepackWorker.cpp:
  * PROTO2/castor/repack/RepackWorker.hpp:
    [r 1.5,2006-01-26,felixehm] Added new FileOrganizer and added status flag to RepackSubRequest
    [r 1.4,2006-01-26,felixehm] Cleaned Header inclusions and added new common function to Common Repack Header
    [r 1.3,2006-01-25,felixehm] first implementation of database handling
    [r 1.3,2006-01-25,felixehm] SubRequest handling
    [r 1.2,2006-01-23,felixehm] Added new RepackSubRequest for multi-tape requests
  * PROTO2/castor/rh/Imakefile:
    [r 1.9,2006-01-27,itglp] Added explicitely RHThread to the sources (was included by dependencies).
  * PROTO2/castor/server/ListenerThreadPool.cpp:
    [r 1.3,2006-01-30,sponcec3] Removed double deletion of m_thread
  * PROTO2/config/Library.tmpl:
    [r1.28,2006-01-20,itglp] Fixed source path for the castor-oracle library.
    [r1.27,2006-01-20,itglp] Fixed rule for UseOraCDBC flag
  * PROTO2/config/LibraryDeps.tmpl:
    [r1.12,2006-01-26,bcouturi] Added dependency on Cupv to Cns when UseCupv is on
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/MigHunter.init:
    [r 1.5,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/castor-dlf-server.install.perm:
    [r 1.3,2006-01-27,itglp] Added sysconfig.
  * PROTO2/debian/castor-job.install.perm:
  * PROTO2/debian/castor-lsf-plugin.install.perm:
    [r 1.4,2006-01-27,itglp] Added sysconfig.
    [r 1.2,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/castor-rtcopy-clientserver.install.perm:
  * PROTO2/debian/castor-rtcopy-clientserver.postinst:
    [r 1.9,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/castor-stager-server.install.perm:
    [r 1.4,2006-01-30,itglp] Added RMNODECONFIG.example
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rmmaster.init:
    [r 1.3,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/rmmaster.sysconfig:
    [r 1.3,2006-01-30,itglp] Removed file, was already in resourcemonitoring.
  * PROTO2/debian/rtcpclientd.init:
    [r 1.5,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * PROTO2/debian/stager.init:
    [r 1.7,2006-01-23,itglp] Fixed check of TNS_ADMIN and ORACLE_HOME.
  * PROTO2/debian/vmgrdaemon.init:
    [r 1.5,2006-01-27,itglp] Fixed scripts and rules form RPM build.
  * CASTOR/dlf/dlfquery/base.cfg.php:
    [r 1.2,2006,sponcec3] Removed logins and passwords from CVS !
  * PROTO2/h/Castor_limits.h:
    [r 1.9,2006-01-26,bcouturi] Added new limit for name server with ACLs
  * PROTO2/h/Cns_api.h:
  * PROTO2/h/Cns_constants.h:
  * PROTO2/h/Cns_server.h:
    [r 1.6,2006-01-26,bcouturi] Changed Cns headers for NS with ACLs
  * PROTO2/h/serrno.h:
    [r1.12,2006-01-26,bcouturi] Added new error for NS with ACLs
  * PROTO2/h/stager_client_api_common.h:
    [r 1.2,2006-01-30,bcouturi] AUTHID Added new fields to stager per thread structure for Authorization ID
  * PROTO2/lib/Imakefile:
    [r1.20,2006-01-20,itglp] Fixed rule to take into account the new flag UseOraCDBC.
  * PROTO2/maketar.sh:
    [r1.39,2006-01-27,itglp] Removed UseMAUI from the 'YES' list.
  * PROTO2/ns/Cns_access.c:
  * PROTO2/ns/Cns_auth.c:
  * PROTO2/ns/Cns_chclass.c:
  * PROTO2/ns/Cns_chdir.c:
  * PROTO2/ns/Cns_chmod.c:
  * PROTO2/ns/Cns_chown.c:
  * PROTO2/ns/Cns_creat.c:
  * PROTO2/ns/Cns_delcomment.c:
  * PROTO2/ns/Cns_delete.c:
  * PROTO2/ns/Cns_deleteclass.c:
  * PROTO2/ns/Cns_enterclass.c:
  * PROTO2/ns/Cns_getcomment.c:
  * PROTO2/ns/Cns_getpath.c:
  * PROTO2/ns/Cns_getsegattrs.c:
  * PROTO2/ns/Cns_listclass.c:
  * PROTO2/ns/Cns_listtape.c:
  * PROTO2/ns/Cns_main.c:
  * PROTO2/ns/Cns_mkdir.c:
  * PROTO2/ns/Cns_modifyclass.c:
  * PROTO2/ns/Cns_opendir.c:
  * PROTO2/ns/Cns_procreq.c:
  * PROTO2/ns/Cns_queryclass.c:
  * PROTO2/ns/Cns_readdir.c:
  * PROTO2/ns/Cns_readdirc.c:
  * PROTO2/ns/Cns_readdirx.c:
  * PROTO2/ns/Cns_readdirxc.c:
  * PROTO2/ns/Cns_readdirxt.c:
  * PROTO2/ns/Cns_rename.c:
  * PROTO2/ns/Cns_replaceseg.c:
  * PROTO2/ns/Cns_rmdir.c:
  * PROTO2/ns/Cns_setatime.c:
  * PROTO2/ns/Cns_setcomment.c:
  * PROTO2/ns/Cns_setfsize.c:
  * PROTO2/ns/Cns_setsegattrs.c:
  * PROTO2/ns/Cns_stat.c:
  * PROTO2/ns/Cns_undelete.c:
  * PROTO2/ns/Cns_unlink.c:
  * PROTO2/ns/Cns_updateseg_checksum.c:
  * PROTO2/ns/Cns_utime.c:
  * PROTO2/ns/Imakefile:
  * PROTO2/ns/nsdaemon.sysconfig:
  * PROTO2/ns/send2nsd.c:
    [r 1.8,2006-01-26,bcouturi] Imported new version of name server with ACLs
  * PROTO2/resourcemonitoring/rmmaster.sysconfig:
    [r 1.2,2006-01-30,itglp] Fixed options to enable LSF in rmmaster.
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.141,2006-01-20,obarring] Don't log ENOENT from bestTapeCopyForStream() as an error
  * PROTO2/shlib/Imakefile:
    [r1.45,2006-01-25,felixehm] changed built order of libcastorCnvs.so, it has to be created before libshift.so
  * PROTO2/stager/stager_client_api_common.cpp:
    [r1.18,2006-01-30,bcouturi] AUTHID Added per thread Authorization ID to the API
  * CASTOR/tape/Ctape_dmpfil.c:
    [r1.25,2006,hcacote] use maxblksize from devinfo if no -b specified in cmmand line

 -- Giuseppe LO PRESTI <itglp@localhost.localdomain>  Tue, 31 Jan 2006 16:07:12 +0100

castor (2.0.2-9) unstable; urgency=low

  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.238,2006-01-18,sponcec3] Fixed getUpdateStart so that disk2diskcopies are allowed from nodes in DRAINING status
  * PROTO2/castor/io/AbstractSocket.cpp:
    [r 1.6,2006-01-17,itglp] Set errno when host not found.
  * PROTO2/castor/Constants.hpp:
    [r1.55,2006-01-17,felixehm] Added new Objects for Repack Project
  * PROTO2/castor/Imakefile:
    [r1.118,2006-01-18,felixehm] Added Repack directory for autom. compilation
  * PROTO2/castor/repack/FileListHelper.cpp:
  * PROTO2/castor/repack/Imakefile:
  * PROTO2/castor/repack/RepackClient.cpp:
  * PROTO2/castor/repack/RepackClient.hpp:
  * PROTO2/castor/repack/RepackRequest.cpp:
  * PROTO2/castor/repack/RepackRequest.hpp:
  * PROTO2/castor/repack/RepackRequestCInt.cpp:
  * PROTO2/castor/repack/RepackServer.cpp:
  * PROTO2/castor/repack/RepackServer.hpp:
  * PROTO2/castor/repack/RepackWorker.cpp:
  * PROTO2/castor/repack/RepackWorker.hpp:
    [2006-01-18,felixehm] changed Server to new BaseServer, new filelisthelper
  * PROTO2/castor/rh/RHThread.cpp:
    [r 1.2,2006-01-18,sponcec3] Added missing include that made compilation fail on gcc 4
  * PROTO2/castor/server/SelectProcessThread.hpp:
    [r 1.3,2006-01-17,itglp] Fixed run() method declaration.
  * PROTO2/config/LibraryDeps.tmpl:
    [r1.11,2006-01-18,jdurand] Fixed dependencies for rfio
  * PROTO2/config/Project.tmpl:
    [r1.51,2006-01-20,itglp] Added UseOraCDBC to enable the new db access layer for Oracle.
    [r1.50,2006-01-18,felixehm] Added Repack Project
  * PROTO2/config/site.def:
    [r1.78,2006-01-20,itglp] Added UseOraCDBC to enable the new db access layer for Oracle.
    [r1.77,2006-01-18,felixehm] Corrected Buildname for Repack
    [r1.76,2006-01-18,felixehm] Added Repack Project
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.17,2006-01-16,motiakov] Commented non thread-safe code.
  * PROTO2/rtcopy/rtcpcldcommon.c:
    [r1.32,2006-01-20,obarring] Don't log TAPE VOLUMEs OVERFLOW as an error
  * PROTO2/shlib/Imakefile:
    [r1.44,2006-01-20,itglp] Fix the dependencies on the libcastorCnvs.so.
  * PROTO2/stager/stager_qry.c:
    [r1.12,2006-01-17,itglp] Fixed segfault when the stager host is not properly setup.

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 20 Jan 2006 10:54:28 +0100

castor (2.0.2-8) unstable; urgency=low

  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.39,2005-12-08,mbraeger] Solved the bug of showqueues in another way, than in the last version. Both ways are equivalent and works, but this version is more elegant and faster.
  * PROTO2/castor/Imakefile:
    [r1.117,2006-01-13,itglp] Changes to compile the castor::server package.
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
    [2006-01-12,itglp] Fixed a function header with the right exception.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.236,2006-01-12,itglp] Added missing DELETE clause in recreateCastorFile.
    [r1.235,2006-01-05,sponcec3] Fixed updateFsFileClosed to modify fsDeviation and deltaWeight, taking into account that there is one less stream on the filesystem
  * PROTO2/castor/rh/Server.cpp:
  * PROTO2/castor/rh/Server.hpp:
    [2006-01-13,itglp] Request Handler refactorization using the castor::server framework for thread handling.
  * PROTO2/castor/server/BaseDaemon.cpp:
  * PROTO2/castor/server/BaseServer.cpp:
  * PROTO2/castor/server/BaseServer.hpp:
  * PROTO2/castor/server/BaseThreadPool.cpp:
  * PROTO2/castor/server/BaseThreadPool.hpp:
  * PROTO2/castor/server/IThread.hpp:
  * PROTO2/castor/server/NotificationThread.cpp:
  * PROTO2/castor/server/NotificationThread.hpp:
  * PROTO2/castor/server/ServiceThread.cpp:
  * PROTO2/castor/server/ServiceThread.hpp:
  * PROTO2/castor/server/SignalThreadPool.hpp:
    [2006-01-13,itglp] Added a new thread pool to be used for listening servers (like the RH). Updated/improved other classes in the framework.
  * PROTO2/castor/server/BaseServer.cpp:
    [r 1.7,2005-12-08,itglp] Fixed parseCommandLine.
    [r 1.6,2005-12-08,itglp] Added option to parseCommandLine to handle the configuration file.
    [r1.10,2006-01-16,felixehm] Fix memory leak.
  * PROTO2/castor/server/BaseServer.hpp:
    [r 1.3,2005-12-08,itglp] Fixed getThreadPool signature, fixed some comments.
  * PROTO2/castor/server/BaseThreadPool.cpp:
    [r 1.5,2005-12-12,itglp] Minor fixes; handling SIGCHLD signal.
  * PROTO2/castor/server/ServiceThread.cpp:
    [r 1.3,2005-12-08,itglp] Initialized the user thread with the shared Mutex. This feature is not used for the time being.
  * PROTO2/castor/server/BaseServer.cpp:
  * PROTO2/castor/server/SignalThreadPool.cpp:
  * PROTO2/castor/server/SignalThreadPool.hpp:
    [r 1.7,2005-12-12,itglp] Minor fixes; handling SIGCHLD signal.
    [r 1.6,2005-12-08,itglp] Fixed getThreadPool signature, fixed some comments.
  * PROTO2/config/Project.tmpl:
    [r1.49,2005-12-09,waldron] added BuildCupvLibrary dependancy for DLF
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/DLFCONFIG:
  * PROTO2/debian/EXPCONFIG:
  * PROTO2/debian/MYSTAGERCONFIG:
  * PROTO2/debian/MigHunter.init:
  * PROTO2/debian/castor.conf:
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rtcpclientd.init:
  * PROTO2/debian/stager.init:
  * PROTO2/debian/vmgrdaemon.init:
    [2006-01-12,itglp] Fixed configuration & initialization scripts. Added sysconfig files for castor, LSF, rmmaster; to be packaged.
  * PROTO2/debian/castor-rtcopy-clientserver.postinst:
    [r 1.8,2006-01-12,itglp] Added chown stage.st /var/spool/rtcpclientd.
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.17,2006-01-16,motiakov] Commented non thread-safe code.
  * PROTO2/dlf/dlfmysetup.sh:
  * PROTO2/dlf/dlforasetup.sh:
    [2005-12-09,sponcec3] Added SRM facilities to the DLF setup scripts
  * PROTO2/ns/Cns_main.c:
  * PROTO2/castor/io/AuthClientSocket.cpp:
  * PROTO2/castor/io/AuthServerSocket.cpp:
  * PROTO2/rfio/connect.c:
  * PROTO2/rfio/rfio_serv.c:
  * PROTO2/security/Csec_api.man:
  * PROTO2/tape/tpdaemon.c:
  * PROTO2/upv/Cupv_main.c:
  * PROTO2/vdqm/vdqm_Listen.c:
  * PROTO2/vmgr/vmgr_main.c:
    [2005-12-12,lopic3] changed Csec_geterrmsg() to Csec_getErrorMessage()
  * PROTO2/rtcopy/TapeErrorHandler.c:
    [r1.11,2006-01-13,obarring] Make sure that failure calling the expert system is not interpreted as an exhausted retry limit.
  * CASTOR/rtcopy/err_messages:
    [r1.18,2005-12-13,obarring] Classify new message (rtcpd_StartTapeIO(): Thread interface call error) under OTHER errors (6)
    [r1.17,2005-12-13,obarring] Change some USER and SHIFT errors to TAPE. See remedy ticket CT0000000300180.
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.140,2006-01-13,obarring] Try to ensure a retry in case of a communication failure or other client errors
  * PROTO2/shlib/Imakefile:
    [r1.43,2005-12-09,itglp] Fixed rules to properly compile libCastorCnvs.
  * PROTO2/stager/stager_query_service.cpp:
    [r1.32,2005-12-09,itglp] Fixed missing delete leading to a memory leak in case of exception.

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 16 Jan 2006 16:08:34 +0100

castor (2.0.2-7) unstable; urgency=low

  * PROTO2/debian/castor.conf
    Fixed default castor.conf for VDQM log and library
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp
    Fixed a bug for the showqueue command. Now the right status is sent back to the client.
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp
    Fixed access to relationships in case the relation leads to a null pointer
    Fixed the showqueue problem in the selectTapeDriveQueue() function
  * PROTO2/security/Imakefile
  * PROTO2/config/site.def
    Fixed build rules
  * PROTO2/h/serrno.h
  * PROTO2/common/serrno.c
    Added security errors

 -- Sebastien Ponce <sponcec3@pcitds13>  Wed,  7 Dec 2005 15:38:05 +0100

castor (2.0.2-6) unstable; urgency=low

  * Somehow I've lost this part. Everything is merged in 2.0.2-7
    
 -- Sebastien Ponce <sponcec3@pcitds13>  Wed,  7 Dec 2005 10:??:?? +0100

castor (2.0.2-5) unstable; urgency=low

  * PROTO2/castor/db/castor_postgres_create.sql:
  * PROTO2/castor/db/cnv/DbTapeDriveCnv.cpp:
  * PROTO2/castor/db/cnv/DbTapeDriveDedicationCnv.cpp:
  * PROTO2/castor/db/cnv/DbTapeRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraTapeDriveCnv.cpp:
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
  * PROTO2/castor/db/ora/OraTapeRequestCnv.cpp:
      [2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.35,2005-12-02,mbraeger] Fixed the recall of the time, which is now stored as double
    [r1.34,2005-11-26,mbraeger] Fixed small bugs in the selectTapeAccessSpecifications()
    [r1.34,2005-11-26,mbraeger] and selectCompatibilitiesForDriveModel() function.
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.24,2005-11-26,mbraeger] Fixed small bugs in the selectTapeAccessSpecifications()
    [r1.24,2005-11-26,mbraeger] and selectCompatibilitiesForDriveModel() function.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.233,2005-12-03,mbraeger] Bug fixes in the matchTape2TapeDrive procedure
    [r1.232,2005-12-02,itglp] Implementation of the matchTape2TapeDrive logic taking into account dedications.
    [r1.231,2005-12-02,sponcec3] Fixed wrong exception catching in putFailedProd leading to SubRequest staying in READY state
  * PROTO2/castor/io/StreamTapeDriveCnv.cpp:
  * PROTO2/castor/io/StreamTapeDriveDedicationCnv.cpp:
  * PROTO2/castor/io/StreamTapeRequestCnv.cpp:
  * PROTO2/castor/vdqm/TapeDrive.h:
  * PROTO2/castor/vdqm/TapeDrive.hpp:
  * PROTO2/castor/vdqm/TapeDriveCInt.cpp:
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
  * PROTO2/castor/vdqm/TapeRequest.h:
  * PROTO2/castor/vdqm/TapeRequest.hpp:
  * PROTO2/castor/vdqm/TapeRequestCInt.cpp:
      [2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
  * PROTO2/castor/vdqm/VdqmServer.cpp:
    [r1.46,2005-11-30,mbraeger] Fixed a bug, in the parseCommandLine() function. Now, it is finally possible to specify the amount of threads in the pools.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
    [r1.15,2005-11-30,mbraeger] Removed unneeded code.
    [r1.14,2005-11-26,mbraeger] Fixed a bug for the TapeDriveCompatibility storage
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.33,2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
    [r1.32,2005-11-28,mbraeger] Included a small work around for the asymmetric tape drive problem: If the tape drive model is not provided by the client (which is the case for the moment), then the TapeDriveCompatibility table will be filled with the cartridge model name instead.
    [r1.31,2005-11-26,mbraeger] Fixed a bug for the TapeDriveCompatibility storage
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
      [2005-12-02,mbraeger] Changed the time fields in the VDQM database to u_signed64
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
    [r1.25,2005-11-30,mbraeger] Synchronized the modification time and the creation time of a TapeRequest. The modification time of a tape request will now only be different to the creation time, if the assign of a tape to a tape drive has failed on RTCPD side.
    [r1.24,2005-11-25,mbraeger] Solved a segmentation fault, which occured on the VDQM Ping request from the vdqm_admin command.
  * CASTOR/common/sendscsicmd.c:
    [r1.15,2005-11-30,bcouturi] On linux, check /proc/scsi/sg/def_reserved_size if it exists to get the maximum buffer size for the sg driver
  * PROTO2/debian/castor-rmc-server.postinst:
  * PROTO2/debian/castor-rmc-server.postrm:
  * PROTO2/debian/castor-rmc-server.prerm:
      [2005-11-30,jdurand] rmdaemon -> rmcdaemon
  * PROTO2/debian/Cmonitd.init:
  * PROTO2/debian/Cupvdaemon.init:
  * PROTO2/debian/MigHunter.init:
  * PROTO2/debian/dlfserver.init:
  * PROTO2/debian/expertd.init:
  * PROTO2/debian/gcDaemon.init:
  * PROTO2/debian/msgdaemon.init:
  * PROTO2/debian/nsdaemon.init:
  * PROTO2/debian/rfiod.init:
  * PROTO2/debian/rhserver.init:
  * PROTO2/debian/rmcdaemon.init:
  * PROTO2/debian/rmmaster.init:
  * PROTO2/debian/rmnode.init:
  * PROTO2/debian/rtcpclientd.init:
  * PROTO2/debian/rtcpd.init:
  * PROTO2/debian/stager.init:
  * PROTO2/debian/tpdaemon.init:
  * PROTO2/debian/vdqmserv.init:
  * PROTO2/debian/vdqmserver.init:
  * PROTO2/debian/vmgrdaemon.init:
      [2005-11-30,jdurand] grep " 1 program" -> egrep " 1 program\$"
      [2005-11-30,jdurand] grep program -> egrep "\/program *\$"
  * PROTO2/hsmtools/Imakefile:
    [r1.23,2005-12-02,bcouturi] Added dedicateTapeDrive and  listDedications
  * PROTO2/hsmtools/modifySvcClass.c:
    [r 1.7,2005-11-30,obarring] Revoke change made 31/5. Pass empty string instead of NULL when revoking the
    [r 1.7,2005-11-30,obarring] policy values. NULL caused a segv in Cstager_SvcClass_setMigratorPolicy
  * PROTO2/resourcemonitoring/rmnode.c:
    [r1.24,2005-12-05,jdurand] Exit if configfile contains partitions that rmnode cannot map to a device
  * CASTOR/rmc/rmcdaemon.sysconfig:
    [r 1.2,2005-11-30,jdurand] RUN_RMCDAEMON="NO" -> RUN_RMCDAEMON="yes"
  * PROTO2/rtcopy/TapeErrorHandler.c:
    [r1.10,2005-11-30,obarring] Fix processing of migration candidates where the castor file has been deleted from the name server
  * CASTOR/tape/smc.c:
    [r 1.9,2005-12-05,bcouturi] Fixed tape slot range checking

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon,  5 Dec 2005 11:42:57 +0100

castor (2.0.2-4) unstable; urgency=low

  * Added setFileGCWeight request for setting the GC weight of a given file
    This includes : UML design, C++ objects, Streaming facility, ORACLE interface, C++ API, public C API, stager server side support, command line and man page
  * Fixed creation of converters and services factories by explicitely allocating them. This fixes segfaults that occured when 2 converters/services are created for the same type of objects
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
    [r 1.5,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.33,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.32,2005-11-21,mbraeger] Inserted a function, called 'selectTapeRequest', which solves the downcast
    [r1.32,2005-11-21,mbraeger] problem of the big unique id's of the database for the VDQM_DEL_VOLREQ request.
    [r1.31,2005-11-18,sponcec3] Fixed double delete for services. This was leading to seg fault when unloading a service
    [r1.30,2005-11-17,mbraeger] Ordered the results for the TapeAccessSpecificationTable by accessMode DESC
    [r1.29,2005-11-17,mbraeger] Two new functions inserted into OraVdqmSvc class, to handle queries on the TapeAccessSpecification
    [r1.29,2005-11-17,mbraeger] and TapeDriveCompatibility table.
    [r1.29,2005-11-17,mbraeger] I put in oracleTrailer.sql in comments a possible second algorithm for the matchTape2TapeDrive procedure
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.23,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.22,2005-11-21,mbraeger] Inserted a function, called 'selectTapeRequest', which solves the downcast
    [r1.22,2005-11-21,mbraeger] problem of the big unique id's of the database for the VDQM_DEL_VOLREQ request.
    [r1.21,2005-11-17,mbraeger] Two new functions inserted into OraVdqmSvc class, to handle queries on the TapeAccessSpecification
    [r1.21,2005-11-17,mbraeger] and TapeDriveCompatibility table.
    [r1.21,2005-11-17,mbraeger] I put in oracleTrailer.sql in comments a possible second algorithm for the matchTape2TapeDrive procedure
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.230,2005-11-25,sponcec3] added a file cleared procedure to be used in the future for clearing files abruptly. Also fixed fileDeleted for missing deletions in Id2Type
    [r1.229,2005-11-24,itglp] Fixed handling of getLastRecalls queries for files already staged.
    [r1.228,2005-11-23,sponcec3] Attempt to fix counters in nbTapeCopiesInFS. This table now only take into account files in CANBEMIGR with a tapecopy in WAITINSTREAM. Also fixed the trigger dealing with disk2disk copies : it should handle CANBEMIGR case, not STAGEOUT
    [r1.227,2005-11-17,mbraeger] Two new functions inserted into OraVdqmSvc class, to handle queries on the TapeAccessSpecification
    [r1.227,2005-11-17,mbraeger] and TapeDriveCompatibility table.
    [r1.227,2005-11-17,mbraeger] I put in oracleTrailer.sql in comments a possible second algorithm for the matchTape2TapeDrive procedure
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
    [r1.26,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.25,2005-11-21,mbraeger] Fixed the problem with the protocol restriction for the big unique id's.
    [r1.25,2005-11-21,mbraeger] Now, VDQM_DEL_VOLREQ should also work with 64 bit id's
    [r1.24,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r1.24,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/OldRequestFacade.cpp:
    [r 1.7,2005-11-22,mbraeger] Removed unused code
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
    [r 1.8,2005-11-23,mbraeger] Switched back to the previous version.
  * PROTO2/castor/vdqm/RTCopyDConnection.hpp:
    [r 1.5,2005-11-23,mbraeger] Switched back to the previous version.
  * PROTO2/castor/vdqm/TapeDriveDedication.cpp:
    [r 1.9,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
    [r 1.8,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
    [r 1.8,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
    [r 1.8,2005-11-16,itglp] Add 'reason' column to TapeDriveDedication table
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.cpp:
    [r 1.7,2005-11-22,mbraeger] This files have changed due to a revision of the database diagram. The UNIT_WAITDOWN status
    [r 1.7,2005-11-22,mbraeger] has been removed.
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.hpp:
    [r 1.7,2005-11-22,mbraeger] This files have changed due to a revision of the database diagram. The UNIT_WAITDOWN status
    [r 1.7,2005-11-22,mbraeger] has been removed.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.hpp:
    [r 1.7,2005-11-22,mbraeger] This files have changed due to a revision of the database diagram. The UNIT_WAITDOWN status
    [r 1.7,2005-11-22,mbraeger] has been removed.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
    [r1.13,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r1.13,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
    [r1.15,2005-11-22,mbraeger] Remove the VDQM_UNIT_WAITDOWN status from the code, because it is never used.
    [r1.14,2005-11-21,mbraeger] Fixed the problem with the protocol restriction for the big unique id's.
    [r1.14,2005-11-21,mbraeger] Now, VDQM_DEL_VOLREQ should also work with 64 bit id's
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.30,2005-11-22,mbraeger] Remove the VDQM_UNIT_WAITDOWN status from the code, because it is never used.
    [r1.29,2005-11-17,mbraeger] Forgot to check, if the result from IVdqmService is != NULL
    [r1.28,2005-11-17,mbraeger] All priorityLevels for WRITE_ENABLE are set to 0 and
    [r1.28,2005-11-17,mbraeger] all priorityLevels for WRITE_DISABLE are set to 1 for table entries in TapeDriveCompatibility
    [r1.27,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r1.27,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
    [r 1.9,2005-11-17,mbraeger] Wrote a function in the BaseRequestHandler class, which fills automatically the
    [r 1.9,2005-11-17,mbraeger] tapeDriveComaptibility table, if there are no entries for a new tapeDriveModel.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
    [r1.23,2005-11-22,mbraeger] Revision of the checkTapeRequest() function in OraVdqmSvc
    [r1.22,2005-11-21,mbraeger] Fixed the problem with the protocol restriction for the big unique id's.
    [r1.22,2005-11-21,mbraeger] Now, VDQM_DEL_VOLREQ should also work with 64 bit id's
    [r1.21,2005-11-18,mbraeger] Reduced the severity of an error message from ERROR to WARNING
  * PROTO2/codeGeneration/RH.xmi:
    [r1.115,2005-11-25,sponcec3] Added SetFileGCWeight request
    [r1.114,2005-11-24,itglp] Cosmetic changes by Matthias.
    [r1.113,2005-11-22,mbraeger] Removed the UNIT_WAITDOWN status of the TapeDriveStatusCodes table in the VDQM database diagram.
    [r1.113,2005-11-22,mbraeger] It is not used any more!
    [r1.112,2005-11-16,itglp] field for a 'reason' added to the TapeDriveDedication table in the VDQM diagram
  * PROTO2/codeGeneration/gencastor/debian/changelog:
    [r1.19,2005-11-24,itglp] Version 3.6-0.
  * PROTO2/codeGeneration/gencastor/debian/files:
    [r1.18,2005-11-24,itglp] Version 3.6-0.
  * PROTO2/codeGeneration/gencastor/genCastor.cpp:
    [r1.20,2005-11-24,itglp] Version 3.6-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppbasecnvwriter.cpp:
    [r 1.5,2005-11-18,sponcec3] Fixed the way static factories are instantiated so that they can be freed
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
    [r 1.6,2005-11-23,jdurand] Added RMMASTER HOST
  * PROTO2/debian/castor.conf:
    [r 1.9,2005-11-23,jdurand] Added RMMASTER HOST
  * CASTOR/dlf/dlfquery/func.php:
    [r 1.2,2005-11-25,waldron] missing 'arrtostr' function
  * PROTO2/h/rm_constants.h:
    [r1.21,2005-11-23,jdurand] Default rmmaster host is castorrmmaster
    [r1.21,2005-11-23,jdurand] Definition of RMMASTER_USER_PROTO "tcp"
  * PROTO2/h/stager_client_api.h:
    [r1.27,2005-11-25,sponcec3] Added setFileGCWeight request for setting the GC weight of a given file
  * PROTO2/resourcemonitoring/Imakefile:
    [r1.25,2005-11-22,jdurand] Replaced a target by ProgramTargetName(target) in some LinkFile() directives
  * PROTO2/resourcemonitoring/usersend2rmd.c:
    [r1.15,2005-11-23,jdurand] User RMMASTER_USER_PORT instead of RMMASTER_PORT when checking for config, to avoid confusion with udp messages sent in file send2rmd.c
    [r1.14,2005-11-23,jdurand] Cast explicitely ntohs argument and output in the log() call when connect fails
    [r1.13,2005-11-23,jdurand] Use RMMASTER_USER_PROTO (tcp) instead of RMMASTER_PROTO (udp) to get port from /etc/services
    [r1.12,2005-11-22,jdurand] Now get rmmaster host from: environment, or master config file, or RMNODECONFIG, or default
    [r1.12,2005-11-22,jdurand] Now get rmmaster port from: environment, or master config file, or RMNODECONFIG, or services, or default
    [r1.12,2005-11-22,jdurand] Do not strerror(errno) if Cgethostbyname() fails (irrelevant - h_errno is setted then, not errno)
    [r1.12,2005-11-22,jdurand] Put to error buffer the port number together with the hostname when connection fails
    [r1.11,2005-11-22,jdurand] Change a test that is always true per def (test pointer != NULL instead of *pointer - pointer is a variable on the stack)
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.139,2005-11-22,obarring] Remove temporary hack forcing blocksize
  * PROTO2/stager/stager_db_service.c:
    [r1.131,2005-11-24,itglp] Fixed handling of getLastRecalls queries for files already staged.

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 25 Nov 2005 15:44:59 +0100

castor (2.0.2-3) unstable; urgency=low

  * CASTOR/h/Ctape.h:
    [r1.47,2005-11-15,bcouturi] Changed value of D500G/D500GC as it should be the index of the density as defined in cvtden.c
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.226,2005-11-16,sponcec3] Fixed GC policies. The ordering was wrong !
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/oracleTrailer.sql:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/castor/query/IQuerySvcCInt.cpp:
  * PROTO2/stager/stager_query_service.cpp:
      [2005-11-11,itglp] Enhanced query by reqId and userTag: if the queried reqId/userTag was not found, the reply is EINVAL, while ENOENT is given when no file is found and the request is still there (meaningful for the getLastRecalls mode).
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.28,2005-11-14,mbraeger] Extension of selectServer()
    [r1.27,2005-11-11,itglp] Optimized some queries.
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
    [r1.20,2005-11-14,mbraeger] Extension of selectServer()
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
      [2005-11-14,mbraeger] Extension of the selectServer() function in OraVdqmSvc
  * PROTO2/common/Cdlopen.c:
    [r 1.4,2005-11-14,jdurand] Fix segfault in Cdlerror
  * PROTO2/debian/changelog:
    [r1.83,2005-11-10,sponcec3] Added tape blocksize change to release
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.80,2005-11-14,jdurand] Automatic close of connection between rmmaster thread and the LSF proxy - otherwise the LSF proxy will wait for an event until netread timeout (not fatal, though)
    [r1.79,2005-11-14,jdurand] Stop submitting the job in PSUSP: now the job is submitted in a normal state, a message box sent afterwards (which triggers another parsing of resources)
    [r1.78,2005-11-11,jdurand] Optimization of rmmaster <-> LSF protocol (now rmmaster posts in a single message box instead of 8 previously)
  * PROTO2/scheduler/LSF/schmod_castor.c:
    [r1.34,2005-11-11,jdurand] Optimization of rmmaster <-> LSF protocol (now rmmaster posts in a single message box instead of 8 previously)

 -- Sebastien Ponce <sponcec3@pcitds13>  Tue, 15 Nov 2005 18:25:37 +0100

castor (2.0.2-2) unstable; urgency=low

  * PROTO2/Imakefile:
    [r1.18,2005-11-01,mbraeger] Changes the make command to create the doxygen documentation.
                                Now you have to type: make doxygen
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.223,2005-10-28,itglp] Fixed isSubrequestToSchedule to avoid putDone before put.
    [r1.223,2005-10-28,itglp] Fixed getNext status update.
  * PROTO2/castor/rh/Server.cpp:
    [r1.43,2005-11-07,sponcec3] Added type of request to 'Processing Request' message
  * PROTO2/castor/vdqm/VdqmServer.cpp:
  * PROTO2/castor/vdqm/Imakefile:
  * PROTO2/castor/vdqm/VdqmServer.hpp:
      [2005-11-07,mbraeger] Code revision: The decision, which Protocol version has to be used is now taken in the ProtocolFacade class. Now, the VdqmServer doesn't care any more, which protocol is sent via the socket.
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
  * PROTO2/castor/vdqm/RTCopyDConnection.hpp:
    [2005-11-10,mbraeger] In case of errors on RTCPD side during a tape assign, the error message is now written to the ErrorHistory db table.
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.cpp:
  * PROTO2/castor/vdqm/TapeDriveStatusCodes.hpp:
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
      [2005-11-07,mbraeger] Revision of the tape drive status Codes. The intermediate status UNIT_RELEASED is not needed any more.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
      [2005-11-10,mbraeger] Solved a core dump error in the TapeDriveHandler.cpp
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
    [r1.16,2005-10-31,mbraeger] Solved an Error in the handleVolMountStatus() function. The Tape was not right selected and caused sometimes errors.
  * PROTO2/codeGeneration/RH.xmi:
    [r1.111,2005-11-08,itglp] Added a simplified class diagram for the catalog db.
    [r1.110,2005-11-07,mbraeger] Removed from the VDQM db diagram the UNIT_RELEASED status of the TapeDriveStatusCodes enumeration class.
  * CASTOR/dlf/dlf_oracle_grant.sql:
    [r 1.2,2005-11-09,sponcec3] New views for lemon monitoring
  * CASTOR/dlf/dlf_oracle_tbl.sql:
    [r1.12,2005-11-09,sponcec3] New index on dlf_messages based on hostid
  * PROTO2/doc/uml/vdqm.xmi:
    [r 1.8,2005-11-10,mbraeger] Sequence diagram for an incoming tape drive requested added
    [r 1.7,2005-11-09,mbraeger] Updated all diagrams for Umbrello 1.4.2. ProtocolFacade Sequence diagram included
    [r 1.6,2005-11-07,mbraeger] Revision of the class diagram. Actualization of the vdqm class diagram
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.138,2005-10-31,obarring] Set serrno in case the checkFile fails in fileRecalled()
  * CASTOR/rtcopy/rtcpd_MainCntl.c:
    [r1.96,2005-10-28,obarring] Change (stupid) check preventing the default blocksize to be set
  * PROTO2/stager/stager_service_run.c:
    [r1.31,2005-10-31,jdurand] Variations on time to wait at the next round
    [r1.30,2005-10-31,jdurand] Use a single cond_wait instead of a cond_waits broken down per second
  * CASTOR/tape/Ctape_devinfo.c:
    [r1.16,2005-11-10,bcouturi] Changed LTO Block size to 256K
    [r1.15,2005-11-04,bcouturi] Added T10000 support
    [r1.14,2005-11-03,bcouturi] 3592B support - Added 500GB density
  * CASTOR/tape/Ctape_dmpfil.c:
    [r1.24,2005-11-04,bcouturi] Added T10000 support
  * CASTOR/tape/getcompstat.c:
    [r1.19,2005-11-04,bcouturi] Added T10000 support
  * CASTOR/vmgr/vmgr_db_init.sh:
    [r1.10,2005-11-04,bcouturi] Fixed VMGR init script for T10000, 3592 and LTO3

 -- Sebastien Ponce <sponcec3@pcitds13>  Thu, 10 Nov 2005 15:52:11 +0100

castor (2.0.2-1) unstable; urgency=low

  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_oracle_drop.sql:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/castor/stager/RequestQueryType.cpp:
  * PROTO2/castor/stager/RequestQueryType.hpp:
  * PROTO2/stager/stager_qry.c:
  * PROTO2/stager/stager_qry.man:
  * PROTO2/stager/stager_query_service.cpp:
        [2005-10-27,itglp] New 'getNext'-like stager_qry fully implemented on the server side.
  * PROTO2/doc/StgSvcsMethods.hpp:
  * PROTO2/doc/uml/StagerSvcs.xmi:
        [2005-10-27,itglp] Updated docs with the new stager queries.
  * PROTO2/h/stager_client_api.h:
    [r1.26,2005-10-27,itglp] Extended query type enum.
  * PROTO2/codeGeneration/RH.xmi:
    [r1.109,2005-10-27,itglp] Extended RequestQueryType for the new 'getNext'-like query.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.222,2005-10-27,sponcec3] Added index on the copy column of the Segment table
    [r1.221,2005-10-27,itglp] New 'getNext'-like stager_qry fully implemented on the server side.
    [r1.220,2005-10-25,itglp] Added function based index for the new getNextStatus field in SubRequest.
    [r1.219,2005-10-25,sponcec3] remove a close cursor that should not be there(+ cosmetic changes)
  * PROTO2/castor/vdqm/Imakefile:
    [r1.13,2005-10-25,mbraeger] Removed the genereted classes by Umbrello
  * PROTO2/castor/vdqm/VdqmServer.cpp:
    [r1.44,2005-10-27,mbraeger] Changed the log level of two log messages from ERROR to WARNING in the deleteTapeRequest() function.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
        [2005-10-28,mbraeger] Solved a deadlock problem in the TapeRequestHandler.cpp
        [2005-10-27,mbraeger] Solved memory leaks.
  * PROTO2/common/Cdlopen.c:
    [r 1.3,2005-10-26,jdurand] Moved necessary includes in the header file, added definition of RT_* for _WIN32
  * PROTO2/config/Win32.rules:
    [r 1.5,2005-10-26,jdurand] Added MakeDepSharedLibrary() rule
    [r 1.4,2005-10-26,jdurand] Better rules, especially when source file is locate in a subdirectory
  * PROTO2/h/Cdlopen_api.h:
    [r 1.2,2005-10-26,jdurand] Moved necessary includes in the header file, added definition of RT_* for _WIN32
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
    [r1.77,2005-10-26,jdurand] Map LSBE_BAD_HOST, LSBE_BAD_QUEUE and LSBE_BAD_RESREQ to serrno = EINVAL
  * PROTO2/resourcemonitoring/rm_api.c:
    [r1.18,2005-10-26,jdurand] Definition of S_ISDIR() on _WIN32
  * PROTO2/resourcemonitoring/usersend2rmd.c:
    [r1.10,2005-10-26,jdurand] Do not use strtok_r() on _WIN32
  * PROTO2/rfio/RfioTURL.c:
    [r 1.3,2005-10-26,jdurand] Added #include "net.h" on _WIN32
  * PROTO2/rfio/connect.c:
    [r1.13,2005-10-26,jdurand] Restrict use of strtok_r() where applicable
  * PROTO2/rfio/parse.c:
    [r 1.4,2005-10-26,jdurand] Use Csnprintf() instead of snprintf()
  * PROTO2/rfio/stream.c:
    [r 1.5,2005-10-26,jdurand] Restrict use of strtok_r() where applicable
  * PROTO2/rtcopy/migrator.c:
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
        [2005-10-27,obarring] Remove temporary hack setting default blocksize. From now on, we rely on that
        [2005-10-27,obarring] it is properly set on the tape server

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri, 28 Oct 2005 14:39:50 +0200

castor (2.0.2-0) unstable; urgency=low

  * PROTO2/castor/Constants.cpp:
  * PROTO2/castor/Constants.hpp:
  * PROTO2/castor/Imakefile:
  * PROTO2/castor/rh/FileQueryResponse.h:
  * PROTO2/castor/rh/FileQueryResponse.hpp:
  * PROTO2/castor/stager/RequestQueryType.cpp:
  * PROTO2/castor/stager/RequestQueryType.hpp:
  * PROTO2/castor/stager/SubRequest.cpp:
  * PROTO2/castor/stager/SubRequest.h:
  * PROTO2/castor/stager/SubRequest.hpp:
  * PROTO2/castor/stager/SubRequestCInt.cpp:
        Added a new 'getNext'-like query to get latest recalled files for a get request.
  * PROTO2/castor/Imakefile:
    [r1.114,2005-10-21,jdurand] Add -I ../win32 for _WIN32
  * PROTO2/castor/client/BaseClient.cpp:
    [r1.34,2005-10-21,jdurand] fix < into <<
  * PROTO2/castor/db/castor_oracle_create.sql:
  * PROTO2/castor/db/castor_oracle_drop.sql:
  * PROTO2/castor/db/castor_postgres_create.sql:
  * PROTO2/castor/db/cnv/DbSubRequestCnv.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
  * PROTO2/castor/db/ora/OraSubRequestCnv.cpp:
  * PROTO2/castor/db/oracleTrailer.sql:
  * PROTO2/castor/query/IQuerySvc.hpp:
  * PROTO2/stager/stager_client_api_query.cpp:
  * PROTO2/stager/stager_qry.c:
  * PROTO2/stager/stager_qry.man:
  * PROTO2/stager/stager_query_service.cpp:
        Fixed stager_qry to retrieve castorFileName, added a new 'getNext'-like query to get latest recalled files for a get request.
  * PROTO2/h/stager_client_api.h:
    [r1.25,2005-10-25,itglp] Added castorfilename to stage_filequery_resp, extended query_type enum.
    [r1.25,2005-10-25,itglp] This affects the public API stage_filequery().
  * PROTO2/codeGeneration/RH.xmi:
    [r1.108,2005-10-25,itglp] Added GETNEXT to RequestQueryType for the new getNext stager query.
    [r1.107,2005-10-24,itglp] Fixed type for FileQryResponse.castorFileName.
    [r1.106,2005-10-24,itglp] New enumeration added for GetNext status in SubRequests.
  * PROTO2/castor/logstream.h:
    [r1.18,2005-10-21,jdurand] On VC7 (.NET) ERROR will expand to 0 ./..
    [r1.17,2005-10-21,jdurand] Fix for bug #12528, localtime_r on _WIN32
  * CASTOR/commands/newacct.c:
    [r 1.8,2005-10-20,jdurand] Added #include <stdlib.h> (definition of exit())
    [r 1.7,2005-10-20,jdurand] execl() should end with NULL instead of 0
  * PROTO2/common/Imakefile:
  * PROTO2/h/Imakefile:
        CASTOR thread-safe portable dlopen() interface [_WIN32 + unix-like only]
  * CASTOR/h/Cuuid.h:
    [r 1.8,2005-10-21,jdurand] Fix for bugs #12562, compilation on _WIN32
  * CASTOR/h/osdep.h:
    [r1.19,2005-10-21,jdurand] VC6->VC7 port (VC7 already defined BYTE, SHORT, LONG + I don't know why but QUAD structure does not compile using a LONG on VC7 - but compiled with 'int'...)
  * CASTOR/msg/oper.c:
    [r 1.6,2005-10-20,bcouturi] Terminate execl command by NULL rather than 0 to avoid cast problem on IA64
  * PROTO2/tape/tpdaemon.c:
    [r 1.4,2005-10-20,bcouturi] Terminate execlp command by NULL rather than 0 to avoid cast problem on IA64

 -- Sebastien Ponce <sponcec3@pcitds13>  Tue, 25 Oct 2005 15:58:49 +0200

castor (2.0.1-10) unstable; urgency=low

  * PROTO2/castor/db/castor_oracle_create.sql:
    [r1.34,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r1.34,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/castor_oracle_drop.sql:
    [r 1.7,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.7,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/castor_postgres_drop.sql:
    [r 1.2,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.2,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/cnv/Db*:
        Fixed db exception handling.
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
    [r1.25,2005-10-20,sponcec3] Fixed previous commit
    [r1.24,2005-10-20,sponcec3] Put back check of service class in the stager_query
  * PROTO2/castor/db/ora/OraStagerSvc.cpp:
    [r1.176,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
    [r1.73,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.217,2005-10-20,sponcec3] Put back check of service class in the stager_query
    [r1.216,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
    [r1.215,2005-10-19,mbraeger] Forgot at the last commit the semicolon at the end of the SELECT Statement
    [r1.214,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r1.214,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
    [r1.213,2005-10-19,sponcec3] Fixed wrong SQL statement having an extra table in the from clause
  * PROTO2/castor/db/oracleTrailer_drop.sql:
    [r 1.4,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.4,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/db/postgresTrailer_drop.sql:
    [r 1.2,2005-10-19,itglp] Added hints in the stager query, updated generated scripts.
    [r 1.2,2005-10-19,itglp] Removed _drop scripts which are now autogenerated.
  * PROTO2/castor/stager/IStagerSvc.hpp:
    [r1.66,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.21,2005-10-19,mbraeger] Fixed a memory leak problem.
  * PROTO2/stager/stager_query_service.cpp:
    [r1.27,2005-10-20,sponcec3] Put back check of service class in the stager_query
  * PROTO2/stager/stager_rm.man:
    [r 1.2,2005-10-20,sponcec3] Return EBUSY in stager_rm if file is not yet migrated. This avoids losing files.

 -- Sebastien Ponce <sponcec3@pcitds13>  Thu, 20 Oct 2005 17:06:12 +0200

castor (2.0.1-9) unstable; urgency=low

  * PROTO2/castor/Imakefile:
    [r1.113,2005-10-19,jdurand] Fixed clean rule because of 'cmd' shell length limit when doing shell expansion
  * PROTO2/config/Win32.rules:
    [r 1.3,2005-10-19,jdurand] Go back to original version of RemoveFiles()
  * PROTO2/h/Castor_limits.h:
    [r 1.8,2005-10-19,jdurand] Increase CA_MAXDENNUM from 25 to 27
  * PROTO2/resourcemonitoring/Crmd_recv_from_rmnode.c:
    [r1.21,2005-10-19,jdurand] Changed two logs levels from LOG_INFO to LOG_WARNING+LOG_ERR
    [r1.20,2005-10-19,jdurand] When a filesystem's automatic state differs from what admin setted, log that as a warning, and add host in the log-line
  * PROTO2/resourcemonitoring/Crmd_survey.c:
    [r1.21,2005-10-19,jdurand] Changed two logs levels from LOG_INFO to LOG_WARNING+LOG_ERR
  * CASTOR/win32/uxid.c:
    [r1.10,2005-10-19,jdurand] Removed explicit (and wrong) definition of fopen() and getenv()

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 19 Oct 2005 17:19:54 +0200

castor (2.0.1-8) unstable; urgency=low

  * PROTO2/castor/BaseCnvSvc.cpp:
    [r1.18,2005-10-17,sponcec3] Remove return statement that should not be there
  * PROTO2/castor/Imakefile:
    [r1.112,2005-10-17,jdurand] Go back to MakeCondSubdirs() but this time with a valid parameter
    [r1.111,2005-10-17,jdurand] Replaced MakeCondSubdirs() with a dummy or irrelevant argument with MakeSubDirs()
    [r1.110,2005-10-17,jdurand] Added a '-' to ignore error coming from for loop on empty list (is fatal on win32)
    [r1.109,2005-10-17,jdurand] Made _WIN32 compliant
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.212,2005-10-18,sponcec3] Added error handling in garbage collector main method
  * PROTO2/castor/gc/GcDaemon.cpp:
    [r1.31,2005-10-18,jdurand] Fix for #12479 (gcDaemon sleep interval corrupted)
  * PROTO2/codeGeneration/gencastor/gencastor:
    [r 1.8,2005-10-17,itglp] Improved script to autogenerate DROP part of the SQL scripts.
  * PROTO2/config/Win32.rules:
    [r 1.2,2005-10-17,jdurand] use a temporary file to delete a list of files (risk to exceed 'cmd' max number of characters)
    [r 1.2,2005-10-17,jdurand] ignore failure in case of a for () loop (case of empty list)
  * PROTO2/debian/castor-job.cron.hourly:
    [r 1.5,2005-10-17,jdurand] Load the sysconfig after setting the default value for RUN_CLEANUP
  * CASTOR/dlf/dlf_procreq.c:
    [r1.10,2005-10-18,kotlyar] added missed checks for start/stop dlf transaction
  * PROTO2/h/stager_client_api.h:
    [r1.24,2005-10-17,jdurand] On _WIN32 only, add inclusion of <io.h> and <sys/stat.h>, necessary for _umask() declaration at least
  * PROTO2/hsmtools/Imakefile:
    [r1.20,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
  * PROTO2/job/Imakefile:
    [r1.22,2005-10-17,jdurand] Support of OPTIONS from /etc/sysconfig/stagerJob: job will then use them - example: --nodlf --log stderr --debug
  * PROTO2/job/stagerJob.shell:
    [r1.37,2005-10-17,jdurand] Support of OPTIONS from /etc/sysconfig/stagerJob: job will then use them - example: --nodlf --log stderr --debug
  * PROTO2/job/stagerJob.sysconfig:
    [r 1.2,2005-10-17,jdurand] Support of OPTIONS from /etc/sysconfig/stagerJob: job will then use them - example: --nodlf --log stderr --debug
  * PROTO2/maketar.sh:
    [r1.38,2005-10-18,jdurand] Added /bin/true at the end of every scriptlet so that they never fail
  * PROTO2/resourcemonitoring/Imakefile:
    [r1.24,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
    [r1.24,2005-10-17,jdurand] Make declaration of LFSLIBS without +=, but simply =
    [r1.24,2005-10-17,jdurand] Remove call of MakeDir for undefined variable $(SPOOL)
  * PROTO2/rtcopy/Imakefile:
    [r1.26,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
    [r1.26,2005-10-17,jdurand] Make the 1st DEPLIB and GLOBLIB declarations without +=, but simply =
  * PROTO2/scheduler/LSF/Imakefile:
    [r1.12,2005-10-17,jdurand] Do not call FileName() with empty argument (win32's name does not like that)
  * PROTO2/stager/Imakefile:
    [r1.50,2005-10-17,jdurand] Do not call FileName() macro with an empty argument (win32's nmake does not like that)
  * PROTO2/stager/stager_client_api_get.cpp:
    [r1.23,2005-10-17,jdurand] On windows, umask() is called _umask()

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue, 18 Oct 2005 16:07:44 +0200

castor (2.0.1-7) unstable; urgency=low

  * PROTO2/castor/db/analyze/useful.sql:
    [r 1.3,2005-10-17,itglp] Modified queries related to GC analysis.
  * PROTO2/castor/db/castor_oracle_create.sql:
    [r1.33,2005-10-17,itglp] Fixed castor sql package for the new stager_qry.
    [r1.32,2005-10-17,itglp] Modified procedure for the lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
    [r 1.6,2005-10-17,sponcec3] Better implementation of files2Delete that should reduce the impact on the DB
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
    [r 1.4,2005-10-17,sponcec3] Better implementation of files2Delete that should reduce the impact on the DB
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
    [r1.23,2005-10-17,itglp] Further fix, now it works.
    [r1.22,2005-10-17,itglp] Fixed call to procedures.
    [r1.21,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
    [r 1.9,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.211,2005-10-17,sponcec3] Better implementation of files2Delete that should reduce the impact on the DB
    [r1.210,2005-10-17,itglp] Fixed castor sql package for the new stager_qry.
    [r1.209,2005-10-17,itglp] Modified procedure for the lighter version of stager_qry without svcClass and tape infos.
    [r1.208,2005-10-13,mbraeger] Remove the FOR UPDATE statement from matchTapeToTapeDrive procedure, because nobody else is selecting a free tape drive or a queued tape request.
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
    [r1.12,2005-10-13,mbraeger] Add a new function, called freeMemory() and solved a memory leak.
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.hpp:
    [r 1.7,2005-10-13,mbraeger] Add a new function, called freeMemory() and solved a memory leak.
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.16,2005-10-13,kotlyar] fixed incorrect assignment
  * CASTOR/h/Castor_limits.h:
    [r1.30,2005-10-13,bcouturi] LTO3 Patch - Added new densities
  * CASTOR/h/Ctape.h:
    [r1.46,2005-10-13,bcouturi] LTO3 Patch - Added new densities
  * PROTO2/h/rm_struct.h:
    [r1.14,2005-10-13,jdurand] Bad luck, s_addr is already used on _WIN32 - renamed to rm_s_addr (ok until rmmaster isn't compiled)
    [r1.13,2005-10-13,jdurand] map in_addr_r to int on _WIN32
  * PROTO2/resourcemonitoring/rm_api.c:
    [r1.17,2005-10-13,jdurand] Added #include <limits.h> for _WIN32
  * PROTO2/resourcemonitoring/rmenterjob.c:
    [r 1.6,2005-10-13,jdurand] Enclose signal(SIGPIPE,...) with #ifdef SIGPIPE/#endif
  * PROTO2/rfio/RfioTURL.c:
    [r 1.2,2005-10-13,jdurand] Do not #include <unistd.h> on _WIN32
  * PROTO2/rfio/rfio_HsmIf.c:
    [r1.11,2005-10-13,jdurand] On windows ECONNREFUSED is called WSAECONNREFUSED - one should use WSAGetLastError() in addition but this should be done in the layer below (stager api)
    [r1.10,2005-10-13,jdurand] Added #include <winsock2.h> to get ECONNREFUSED defined
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
    [r1.136,2005-10-14,obarring] Remove useless updateRep() after segmentsForTape(). This was a remnant from
    [r1.136,2005-10-14,obarring] an old implementation where the status had to be updated for each segment.
  * PROTO2/stager/stager_admin_api.c:
    [r1.26,2005-10-13,jdurand] On _WIN32 only, replace serrno = ECONNREFUSED with serrno = SECOMERR
  * PROTO2/stager/stager_client_api_common.cpp:
    [r1.17,2005-10-13,jdurand] Use Cvsnprintf() instead of vsnprintf() [CASTOR portable wrapper - on _WIN32 vsnprintf() is called... _vsnprintf()]
  * PROTO2/stager/stager_qry.c:
    [r 1.9,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * PROTO2/stager/stager_query_service.cpp:
    [r1.26,2005-10-17,itglp] Lighter version of stager_qry without svcClass and tape infos.
  * CASTOR/tape/Ctape_devinfo.c:
    [r1.13,2005-10-13,bcouturi] LTO3 Patch - New densities and LTO3 support
  * CASTOR/tape/Ctape_dmpfil.c:
    [r1.23,2005-10-13,bcouturi] LTO3 Patch - New densities and LTO3 support
  * CASTOR/tape/cvtden.c:
    [r1.10,2005-10-13,bcouturi] LTO3 Patch - New densities and LTO3 support

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 17 Oct 2005 12:21:55 +0200

castor (2.0.1-6) unstable; urgency=low

  * PROTO2/castor/replier/RequestReplier.cpp:
    [r1.23,2005-10-11,bcouturi] Changed messages from ERROR to WARNING
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
    [r1.12,2005-10-11,mbraeger] There was a wrong behavior, when a tapeDrive received a VDQM_FORCED_UNMOUNT reequest. The problem should be fixed now.
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
    [r1.15,2005-10-12,mbraeger] Changed two log message status from ERROR to WARNING
    [r1.14,2005-10-11,mbraeger] There was a wrong behavior, when a tapeDrive received a VDQM_FORCED_UNMOUNT reequest. The problem should be fixed now.
  * CASTOR/dlf/dlf_procreq.c:
    [r 1.9,2005-10-11,kotlyar] added convert from IP address form to Domain name form for Cupv check when dlfshutdown
  * PROTO2/hsmtools/Imakefile:
    [r1.19,2005-10-12,sponcec3] new utility to get castor file names
  * PROTO2/hsmtools/cleanLostFiles:
    [r 1.8,2005-10-12,sponcec3] Improved version removing file from the nameserver when they have no tape copy
    [r 1.7,2005-10-11,sponcec3] updated call to filesDeletedProc, using the new signature. Will need more work to do something with the output
  * PROTO2/hsmtools/cleanLostFiles.man:
    [r 1.5,2005-10-12,sponcec3] Improved version removing file from the nameserver when they have no tape copy
  * PROTO2/rtcopy/MigHunter.c:
    [r1.29,2005-10-12,obarring] Add logging of database key in case of failing fillRep()
  * PROTO2/stager/stager_client_api_update.cpp:
    [r 1.8,2005-10-11,bcouturi] Fixed stage_update to fill in the IOResponse properly

 -- Sebastien Ponce <sponcec3@pcitds13>  Wed, 12 Oct 2005 21:53:22 +0200

castor (2.0.1-5) unstable; urgency=low

  * PROTO2/castor/BaseSvc.hpp:
    [r 1.4,2005-10-07,sponcec3] Added missing virutal keyword leading to bad multiple heritance from BaseObject
  * PROTO2/castor/db/ora/OraBaseObj.hpp:
    [r 1.4,2005-10-07,sponcec3] Added missing virutal keyword leading to bad multiple heritance from BaseObject
  * PROTO2/castor/db/castor_oracle_create.sql:
    [r1.31,2005-10-07,sponcec3] Modified filesDeleted procedure so that it deletes files from the nameserver when they have no tape copies
    [r1.30,2005-10-06,sponcec3] Fixed bestFileSystemForJob : do not take draining machines and filesystems into account
    [r1.29,2005-10-05,sponcec3] Fix stageQuery so that the check on filesystem and diskserver status works properly
    [r1.28,2005-10-04,sponcec3] Fixed filequery so that only PRODUCTION status filesystems are taken into account
  * PROTO2/castor/db/ora/Imakefile:
    [r1.56,2005-10-03,mbraeger] ErrorHistory.cpp removed from libcastorCommonOra
  * PROTO2/castor/db/ora/OraCommonSvc.hpp:
    [r 1.6,2005-10-07,sponcec3] Removed bad inline keyword leading to warnings when compiling with gcc 4.0
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
    [r 1.5,2005-10-10,sponcec3] Better handling of errors + improved efficiency by not calling Cns methods when not needed | fix bug in the commit timing
    [r 1.4,2005-10-07,sponcec3] Modified filesDeleted procedure so that it deletes files from the nameserver when they have no tape copies
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
    [r1.26,2005-10-07,mbraeger] Solved bug in function selectTapeDrive
    [r1.25,2005-10-05,mbraeger] fixed a bug in selectTapeRequestQueue, due to a new column in the TapeRequest table.
    [r1.24,2005-10-05,mbraeger] Fixed the initialisation bug of m_selectTapeDriveQueueStatement.
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.207,2005-10-07,sponcec3] Modified filesDeleted procedure so that it deletes files from the nameserver when they have no tape copies
    [r1.206,2005-10-06,sponcec3] Fixed bestFileSystemForJob : do not take draining machines and filesystems into account
    [r1.205,2005-10-05,sponcec3] Fix stageQuery so that the check on filesystem and diskserver status works properly
    [r1.204,2005-10-04,sponcec3] Fixed filequery so that only PRODUCTION status filesystems are taken into account
  * PROTO2/castor/gc/GcDaemon.cpp:
    [r1.30,2005-10-10,sponcec3] Cleaned code. Removed limitations on string lengths when possible and dropped storage tank specific code
  * PROTO2/castor/replier/RequestReplier.cpp:
    [r1.22,2005-10-10,bcouturi] Ignore DONE_FAILURE as the connection will be garbage collected anyway - Should not be logged as an error there
    [r1.21,2005-10-07,sponcec3] Fixed initalization of a struct where one field was not initialized
  * PROTO2/castor/vdqm/VdqmServer.cpp:
    [r1.43,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
    [r1.42,2005-10-07,mbraeger] Debug message added
    [r1.41,2005-10-04,mbraeger] Fixed Unmarshalling bug for Magic Numbers.
  * PROTO2/castor/vdqm/VdqmServerSocket.cpp:
    [r1.13,2005-10-04,mbraeger] Fixed Unmarshalling bug for Magic Numbers.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
    [r1.12,2005-10-05,mbraeger] try{...}catch()  block added
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
    [r1.11,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
    [r1.10,2005-10-07,mbraeger] Debug message added
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.hpp:
    [r 1.7,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
    [r1.20,2005-10-10,mbraeger] Solved some memory leaks
    [r1.19,2005-10-07,mbraeger] copyTapeDriveInformations() function bugs fixed.
    [r1.18,2005-10-05,mbraeger] Fixed segmentation fault errors
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
    [r 1.8,2005-10-07,mbraeger] copyTapeDriveInformations() function bugs fixed.
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
    [r1.13,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.hpp:
    [r 1.7,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
    [r1.11,2005-10-10,mbraeger] Due to compiling problems a made a revision of these files.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
    [r1.15,2005-10-05,mbraeger] Fixed segmentation fault errors
  * PROTO2/debian/changelog:
    [r1.72,2005-10-10,sponcec3] Remove tabs from the log. dch does not like them
  * PROTO2/debian/control:
    [r1.38,2005-10-10,jdurand] Make castor-vdqm2-server depends on castor-db-interface (that castor-lib-<anydb> will have to provide)
  * PROTO2/debian/if.has_oracle:
    [r 1.2,2005-10-03,jdurand] Added castor-vdqm2-lib-oracle
  * CASTOR/dlf/dlf_mysql_ifce.c:
    [r1.12,2005-10-05,kotlyar] added new function dlf_end_tr_nocommit
    [r1.12,2005-10-05,kotlyar] added improved sequence usage for oracle
    [r1.12,2005-10-05,kotlyar] added some border checks for buffers
  * CASTOR/dlf/dlf_oracle_ifce.pc:
    [r1.15,2005-10-07,kotlyar] perform 1 commit per 1 sec if dlf server in high load
    [r1.14,2005-10-06,kotlyar] reduced commits number
    [r1.13,2005-10-05,kotlyar] added new function dlf_end_tr_nocommit
    [r1.13,2005-10-05,kotlyar] added improved sequence usage for oracle
    [r1.13,2005-10-05,kotlyar] added some border checks for buffers
  * CASTOR/dlf/dlf_oracle_tbl.sql:
    [r1.11,2005-10-05,kotlyar] added new function dlf_end_tr_nocommit
    [r1.11,2005-10-05,kotlyar] added improved sequence usage for oracle
    [r1.11,2005-10-05,kotlyar] added some border checks for buffers
  * CASTOR/dlf/dlf_procreq.c:
    [r 1.8,2005-10-05,kotlyar] replaced dlf_end_tr to dlf_end_tr_nocommit for dlf_insert_message (commit when flushing buffers)
  * CASTOR/dlf/dlfserver.c:
    [r1.14,2005-10-05,kotlyar] commented gethostbyaddr for each message cause it used used nowhere
  * CASTOR/h/dlf_server.h:
    [r 1.4,2005-10-05,kotlyar] added  new variables for sequences usage
  * PROTO2/hsmtools/castor_tools.pm:
    [r 1.4,2005-10-10,jdurand] Updated parsing in conformity with new schema OraCnvSvc -> DbCnvSvc
  * PROTO2/rtcopy/TapeErrorHandler.c:
    [r 1.9,2005-10-10,obarring] Set serrno=SERTYEXHAUST if Cns segment is no longer valid. This will cause
    [r 1.9,2005-10-10,obarring] the request to fail. In the longer term a new catalog interface will allow
    [r 1.9,2005-10-10,obarring] for restarting the original request, which will retrieve the new segment information
  * PROTO2/stager/Imakefile:
    [r1.49,2005-10-10,jdurand] Removed #ifdef STAGE_LINK_STATIC
    [r1.49,2005-10-10,jdurand] Removed MakeDepLibrary(lib,castorCommonOra)
  * PROTO2/stager/stager_db_service.c:
    [r1.130,2005-10-07,jdurand] When Cstager_IStagerSvc_isSubRequestToSchedule() returns 0, update our copy of subrequest's status to SUBREQUEST_WAITSUBREQ, even if the stored procedure already changed it: we have a subsequent call to Cstager_IStagerSvc_updateAndCheckSubRequest() that will overwrite the status's request using our copy
    [r1.129,2005-10-06,sponcec3] The title of the log has to be STRING for strings.
    [r1.128,2005-10-06,sponcec3] Moved message from ERROR to SYSTEM when a file requested by a client does not exist in the nameserver. Also added the file name in the message

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon, 10 Oct 2005 21:31:38 +0200

castor (2.0.1-4) unstable; urgency=low

  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
    [r1.20,2005-10-03,sponcec3] Close unclosed cursors potentially leading to memory leaks
  * PROTO2/castor/db/oracleTrailer.sql:
    [r1.203,2005-10-03,sponcec3] Fixed getUpdateStart so that we don't start 2 disk2disk copies at the same time
    [r1.202,2005-10-03,sponcec3] Fixed usage of maxFreeSpace that is now relative to the totalSize
    [r1.200,2005-10-03,sponcec3] Fixed diskcopy name for replicated files
  * PROTO2/castor/io/StreamCnvSvc.cpp:
    [r 1.9,2005-10-03,sponcec3] Fix signednes of type when unmarshalled
  * PROTO2/castor/io/biniostream.h:
    [r 1.7,2005-10-03,sponcec3] Fixed unmarshalling of u_signed64 on 64 bits platforms
  * PROTO2/castor/gc/GcDaemon.cpp:
    [r1.29,2005-10-03,sponcec3] Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/castor/replier/RequestReplier.cpp:
    [r1.20,2005-10-03,sponcec3] Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/castor/rh/Server.cpp:
    [r1.42,2005-10-03,sponcec3] Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/castor/vdqm :  Use SYSTEM instead of USAGE level for logging regular operations
  * PROTO2/clips/castor.clp:
    [r1.13,2005-10-03,jdurand] Decrease spaceImportance from 5 to 3 (ioImportance is 5)
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
    [r 1.5,2005-09-29,jdurand] var/spool/rh/ -> /var/spool/rhserver/
  * PROTO2/debian/castor.conf:
    [r 1.8,2005-09-29,jdurand] var/spool/rh/ -> /var/spool/rhserver/
  * PROTO2/stager/stager_query_service.cpp:
    [r1.25,2005-10-03,sponcec3] Fixed memory leak

 -- Sebastien Ponce <sponcec3@pcitds13>  Mon,  3 Oct 2005 17:16:38 +0200

castor (2.0.1-3) unstable; urgency=low

  * Added vdqm2
  * Revisited debian/changelog parsing for spec creation

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 28 Sep 2005 19:29:26 +0200

castor (2.0.1-2) unstable; urgency=low

  * Fix for marshalling on 64 bits machines
  * Fix for the scriptlets: now package scriptlets are dumped directly into the rpm spec file. In addition they were wrongly putted in *.install.perm

 -- Sebastien Ponce <sponcec3@pcitds13>  Wed, 28 Sep 2005 13:01:42 +0200

castor (2.0.1-0) unstable; urgency=low

  * PROTO2/CASTOR.spec:
	[r1.35,2005-09-26,jdurand] Typo %fi -> %endif
	[r1.34,2005-09-26,jdurand] Tentative support of amd64
	[r1.33,2005-09-26,jdurand] Exclude BuildRmMaster also in the RPM execution if there is no LSF available
	[r1.32,2005-09-26,jdurand] Implementation of has_stk_ssi, has_lsf and has_oracle a-la-RPM
	[r1.31,2005-09-22,jdurand] Stop calling 'install' with user/group/mode
	[r1.30,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.29,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.29,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.29,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.29,2005-09-15,jdurand] 
	[r1.29,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/castor/BaseCnvSvc.cpp:
	[r1.17,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseCnvSvc.hpp:
	[r1.14,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseObject.cpp:
	[r1.13,2005-08-22,itglp] Added proper cleanup in the destructor.
  * PROTO2/castor/Constants.cpp:
	[r1.28,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.27,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Constants.hpp:
	[r1.51,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.50,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/ICnvSvc.hpp:
	[r1.13,2005-08-26,sponcec3] fully qualify some names and paths
	[r1.12,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Imakefile:
	[r1.108,2005-08-24,itglp] Moved some classes to db/cnv/Imakefile.
	[r1.107,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Services.cpp:
	[r1.20,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/db/Imakefile:
	[r 1.5,2005-08-23,itglp] Upgraded Imakefiles to reflect new packages.
  * PROTO2/castor/db/castor_oracle_create.sql:
	[r 1.9,2005-08-18,itglp] Updated to reflect latest changes in oracleTrailer.sql.
	[r1.22,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.21,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.20,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.20,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.19,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.18,2005-09-22,sponcec3] Fixed isSubRequestToSchedule : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.17,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.16,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.15,2005-09-20,sponcec3] Fixed typo
	[r1.14,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.13,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.12,2005-09-15,itglp] Updated scripts due to latest changes in RH.xmi and oracleTrailer.sql.
	[r1.11,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] 
	[r1.11,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.10,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/castor_oracle_drop.sql:
	[r 1.6,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.5,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r 1.5,2005-09-22,itglp] Fixed comments in the drop script.
	[r 1.4,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/mysql/Imakefile:
	[r 1.9,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.9,2005-08-18,itglp] abstracted database converters.
	[r 1.9,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.cpp:
	[r1.10,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r1.10,2005-08-18,itglp] abstracted database converters.
	[r1.10,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.hpp:
	[r 1.5,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.5,2005-08-18,itglp] abstracted database converters.
	[r 1.5,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/ora/OraCastorFileCnv.cpp:
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraCnvSvc.cpp:
	[r1.51,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
  * PROTO2/castor/db/ora/OraCommonSvc.cpp:
	[r 1.7,2005-09-19,sponcec3] fixe type of min/maxFreeSpace in FileSystem
	[r 1.6,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r 1.5,2005-09-19,sponcec3] empty log message ***
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraCommonSvc.hpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraDiskCopyCnv.cpp:
	[r1.40,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskPoolCnv.cpp:
	[r1.35,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.34,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.33,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskServerCnv.cpp:
	[r1.32,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFileSystemCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Added totalSize field
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletedCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletionFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.cpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
	[r1.19,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r1.18,2005-08-17,itglp] Fixed in reset() a missing call to the inherited method.
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
	[r 1.8,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraStageFileQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageFindRequestRequestCnv.cpp:
	[r1.23,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToPutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutDoneRequestCnv.cpp:
	[r1.26,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageReleaseFilesRequestCnv.cpp:
	[r1.18,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRequestQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRmRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
	[r1.72,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/db/ora/OraStreamCnv.cpp:
	[r1.47,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.46,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.45,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraSvcClassCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.38,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.37,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.cpp:
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.hpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
  * PROTO2/castor/db/ora/OraTapeCopyCnv.cpp:
	[r1.45,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.44,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.cpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.17,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
	[r1.16,2005-08-29,sponcec3] Fixes going along with the codegeneration fix concerning 1 to 1 relations with one end having no name
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.11,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
	[r 1.4,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.3,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/db/ora/OraTapePoolCnv.cpp:
	[r1.38,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.37,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.36,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeRequestCnv.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
  * PROTO2/castor/db/ora/OraTapeServerCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
	[r1.23,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.22,2005-09-05,mbraeger] server.
	[r1.21,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.20,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
	[r1.19,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.19,2005-09-05,mbraeger] server.
	[r1.18,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.17,2005-08-17,itglp] Removed a method which is now in the ancestor class.
  * PROTO2/castor/db/oracleHeader_drop.sql:
	[r 1.3,2005-09-19,itglp] Fixed some comments.
  * PROTO2/castor/db/oracleTrailer.sql:
	[r1.198,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.197,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.196,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.196,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.195,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.194,2005-09-22,sponcec3] Fixed getUpdateStart : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.193,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.192,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.191,2005-09-20,sponcec3] Fixed typo
	[r1.190,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.189,2005-09-12,sponcec3] Added missing constraint on tape table leading to double insertion of some rows
	[r1.188,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.188,2005-09-05,mbraeger] server.
	[r1.187,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] 
	[r1.187,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.186,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/oracleTrailer_drop.sql:
	[r 1.3,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.2,2005-08-18,itglp] Added DROP statement for matchTape2TapeDrive.
  * PROTO2/castor/dlfbuf.h:
	[r 1.9,2005-09-12,sponcec3] Do not forget mutex unlocking in case of exception !
  * PROTO2/castor/gc/Imakefile:
	[r 1.7,2005-09-20,jdurand] Install gcDaemon with mode bits 0750 instead of 0755
  * PROTO2/castor/io/StreamAbortResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBaseAddressCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBasicResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamCastorFileCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientIdentificationCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDeviceGroupNameCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDisk2DiskCopyDoneRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyForRecallCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamEndResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamErrorHistoryCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileQueryResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileResponseCnv.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileSystemCnv.cpp:
	[r1.20,2005-09-19,sponcec3] Added totalSize field
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFiles2DeleteCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletedCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletionFailedCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFindReqResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFileCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFilesResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCLocalFileCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateDoneCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartResponseCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamIOResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMessageAckCnv.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMoverCloseRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutDoneStartCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamQueryParameterCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamRequestQueryResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSegmentCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageAbortRequestCnv.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFileQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFindRequestRequestCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetNextRequestCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToPutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutDoneRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageReleaseFilesRequestCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRequestQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRmRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStartResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStringResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSubRequestCnv.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeAccessSpecificationCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyForMigrationCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
	[r1.10,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/io/StreamTapeDriveCompatibilityCnv.cpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveDedicationCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.5,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapePoolCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeRequestCnv.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeServerCnv.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.4,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/biniostream.h:
	[r 1.5,2005-09-19,itglp] Changed implementation to make it endianess-aware: the default endianess
	[r 1.5,2005-09-19,itglp] is the LITTLE one as in the production setup, and macros are defined to
	[r 1.5,2005-09-19,itglp] convert from/to host and 'inverted network' representation.
	[r 1.4,2005-09-01,mbraeger] Return to the version 1.2
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/query/IQuerySvc.hpp:
	[r 1.9,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/rh/AbortResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/BasicResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Client.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/EndResponse.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileQueryResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileResponse.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FindReqResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GCFilesResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GetUpdateStartResponse.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/IOResponse.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/RequestQueryResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Response.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Server.cpp:
	[r1.41,2005-09-07,sponcec3] Notify of the number of subrequests for fileRequests so that the right number of threads are waked up
	[r1.40,2005-09-06,sponcec3] only notify the service concerned when a request arrives
	[r1.39,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/rh/StartResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/StringResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/CastorFile.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ClientIdentification.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Disk2DiskCopyDoneRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopy.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyForRecall.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyInfo.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskPool.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskServer.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileClass.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.cpp:
	[r1.17,2005-09-19,sponcec3] Added totalSize field
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.h:
	[r1.21,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystem.hpp:
	[r1.13,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystemCInt.cpp:
	[r1.14,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/Files2Delete.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeleted.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeletionFailed.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFile.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFileList.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCLocalFile.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateDone.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ICommonSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/IFSSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IGCSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.h:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IStagerSvc.h:
	[r1.63,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvc.hpp:
	[r1.65,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvcCInt.cpp:
	[r1.54,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/ITapeSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/MoverCloseRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutDoneStart.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QryRequest.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QueryParameter.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/RemoteGCSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteGCSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/ReqIdRequest.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Request.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Segment.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageAbortRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFileQueryRequest.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFindRequestRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetNextRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToPutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutDoneRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageReleaseFilesRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRequestQueryRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRmRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StartRequest.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Stream.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SubRequest.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SvcClass.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Tape.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopy.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopyForMigration.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapePool.cpp:
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.h:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/DeviceGroupName.hpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/ErrorHistory.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.21,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.21,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldProtocolInterpreter.cpp:
	[r 1.5,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.5,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldRequestFacade.cpp:
	[r 1.4,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.3,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.3,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/TapeAccessSpecification.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.cpp:
	[r1.14,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.h:
	[r1.13,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDrive.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCInt.cpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCompatibility.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.7,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeRequest.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeRequest.h:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequest.hpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequestCInt.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeServer.h:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.hpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerCInt.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.h:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.hpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/VdqmServer.cpp:
	[r1.39,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.38,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.37,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r1.36,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.35,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.34,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.34,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
	[r1.33,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/vdqm/VdqmServer.hpp:
	[r 1.9,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.hpp:
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
	[r 1.8,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.8,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
	[r1.16,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.15,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.14,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.13,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.12,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.12,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
	[r1.11,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
	[r 1.9,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r 1.8,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.hpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
	[r1.13,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.12,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.11,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/newVdqm.h:
	[r 1.3,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/clips/castor.clp:
	[r1.12,2005-09-26,jdurand] Support of space
  * PROTO2/clips/castorweight.clp:
	[r1.15,2005-09-26,jdurand] Support of space
  * PROTO2/codeGeneration/RH.xmi:
	[r1.105,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.104,2005-09-07,mbraeger] Revision of the vdqm db diagram, due to the vdqm meeting of this afternoon
	[r1.103,2005-09-05,mbraeger] Bug fix in the TapeDriveDedication class of the cdqm diagram
	[r1.102,2005-08-29,mbraeger] Modification of the assoziation between TapeRequest and Tape.
	[r1.101,2005-08-22,mbraeger] Added the library Name to the DeviceGroupName Table of the VDQM diagram
  * PROTO2/codeGeneration/gencastor/Makefile:
	[r 1.7,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/changelog:
	[r1.16,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.15,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.14,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.13,2005-08-29,sponcec3] New gencastor release
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/files:
	[r1.15,2005-09-16,itglp] Version 3.4.4.
	[r1.14,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.13,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.12,2005-08-29,sponcec3] New gencastor release
	[r1.11,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/genCastor.cpp:
	[r1.17,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.16,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.15,2005-09-14,itglp] Version 3.4.2.
	[r1.14,2005-08-25,sponcec3] fixed typo
	[r1.13,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/gencastor:
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppbasewriter.cpp:
	[r1.16,2005-08-29,sponcec3] Remove equivalence of no multiplicity and 1
	[r1.15,2005-08-26,sponcec3] Improved parsing of multiplicity (none and 1..n understood now)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.cpp:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.h:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r 1.4,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppclasswriter.cpp:
	[r1.15,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppmycnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcpporacnvwriter.cpp:
	[r1.60,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.59,2005-08-29,sponcec3] Fixed bug in 1 to 1 relations when one end has no name
	[r1.58,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.57,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.56,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppstreamcnvwriter.cpp:
	[r1.12,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.11,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.10,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphbasecnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphmycnvwriter.cpp:
	[r 1.3,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphoracnvwriter.cpp:
	[r1.17,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.16,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphstreamcnvwriter.cpp:
	[r 1.4,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.cpp:
	[r1.22,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.21,2005-08-25,sponcec3] removes comment I introduced by mistake
	[r1.20,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.19,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.h:
	[r 1.6,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/common/Cstrerror.c:
	[r 1.2,2005-09-16,jdurand] Added #include <stdlib.h> for malloc() declaration
  * PROTO2/common/serror.c:
	[r 1.8,2005-09-16,jdurand] Added EDLFNOTCONNECTED error message
  * PROTO2/config/Imake.rules:
	[r1.15,2005-09-20,jdurand] Make the install rules working even if we are not root
	[r1.15,2005-09-20,jdurand] Note: on debian 'fakeroot' indeed pretends that your login is "root")
  * PROTO2/config/Library.tmpl:
	[r1.23,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/LibraryDeps.tmpl:
	[r 1.7,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/Project.tmpl:
	[r1.47,2005-09-26,jdurand] Do not force BuildJob to YES if BuildRmnode is YES
	[r1.46,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/site.def:
	[r1.74,2005-09-22,jdurand] Make "castorexpert" the default expert host
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
	[r 1.3,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.2,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/castor.conf:
	[r 1.6,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.5,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/changelog:
	[r1.65,2005-09-12,jdurand] Fix typo LSF -> DLF
  * PROTO2/debian/control:
	[r1.33,2005-09-26,jdurand] Suppress unused and somewhat dangerous package castor-lsf-tools
	[r1.32,2005-09-22,jdurand] Added Recommends: castor-lib, castor-lib-oracle for castor*-conf packages
  * PROTO2/debian/rules:
	[r1.36,2005-09-27,jdurand] A fix to build debs on amd64 (untested)
	[r1.35,2005-09-26,jdurand] Move creation of $(CURDIR)/debian/castor/usr/lib/perl/CASTOR outside of amd64 or not
	[r1.34,2005-09-26,jdurand] Added dpkg compat rules
	[r1.34,2005-09-26,jdurand] Added pragmas for amd64 (untested)
	[r1.33,2005-09-22,jdurand] Build the *.install from the *.install.perm
	[r1.32,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.31,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.31,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.31,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.31,2005-09-15,jdurand] 
	[r1.31,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/debian/stager.init:
	[r 1.3,2005-09-13,jdurand] Always redirect kill output to /dev/null (we handle the error afterwards)
	[r 1.2,2005-09-13,jdurand] Stop stager using kill -2, poll process status every second, exit if ok, and kill -9 if process is still alive after 60 seconds
  * PROTO2/doc/package/rtcopy/mrOperation.tex:
	[r1.15,2005-08-12,obarring] Remove --Name option in printSvcClass examples
  * PROTO2/doc/uml/StagerSvcs.xmi:
	[r 1.6,2005-09-16,itglp] Updated to reflect latest changements in db services.
	[r 1.5,2005-08-23,itglp] Updated class diagrams to represent the new CDBC API.
  * PROTO2/h/serrno.h:
	[r 1.9,2005-08-22,itglp] Added SQLERR used by the new SQLError exception.
	[r1.10,2005-09-16,jdurand] Added EDLFNOTCONNECTED
  * PROTO2/h/stager_constants.h:
	[r1.17,2005-09-22,jdurand] Make "castorstager" the default notification host
	[r1.16,2005-09-07,jdurand] Definition of STAGER_NOTIFY_MAGIC2
	[r1.16,2005-09-07,jdurand] Make STAGER_NOTIFY_MAGIC equal to STAGER_NOTIFY_MAGIC2 (default value is latest available protocol)
  * PROTO2/h/stager_service_api.h:
	[r1.11,2005-09-07,jdurand] New member for per-thread-per-service structure: int nbTotalThreads;
	[r1.11,2005-09-07,jdurand] New prototype: stager_notifyService_v2(), i.e. notification using version 2 of the notif. protocol, where client gives the wanted number of threads
  * PROTO2/hsmtools/cleanLostFiles:
	[r 1.6,2005-09-22,sponcec3] revert previous commit !
	[r 1.5,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/cleanLostFiles.man:
	[r 1.4,2005-09-22,sponcec3] revert previous commit
	[r 1.3,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/deleteFileClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/deleteSvcClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/enterFileClass.c:
	[r 1.5,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/modifySvcClass.c:
	[r 1.6,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/job/stagerJob.shell:
	[r1.36,2005-08-11,jdurand] Recuperate client ip from arguments instead of using readlsfmsg
  * PROTO2/lib/Imakefile:
	[r1.19,2005-09-23,jdurand] Fixes for static version of libcastorCommonOra
	[r1.18,2005-09-16,jdurand] Re-enable rules for libcastorCommonOra.a that is now included in castor-devel-oracle package
	[r1.17,2005-08-18,itglp] Added rule to remove all .a files in make clean.
	[r1.17,2005-08-18,itglp] Commented out rules to create static libcastorCommonOra.a.
  * PROTO2/makerpm.sh:
	[r 1.2,2005-09-20,jdurand] Do not assume existence of fakeroot when building rpms
  * PROTO2/maketar.sh:
	[r1.33,2005-09-26,jdurand] When building the spec convert /lib/ to /lib64/ instead of /lib to /lib64 (otherwise this too greedy change, affecting file with basename starting with 'lib', like libshift.so!)
	[r1.32,2005-09-26,jdurand] Fix an sed call
	[r1.31,2005-09-26,jdurand] Handle am64 case (where libraries install under /lib64 !)
	[r1.30,2005-09-26,jdurand] Make directories owner by (root,bin) instead of (root,root)
	[r1.29,2005-09-26,jdurand] Use the debian/if.has_oracle, debian/if.has_stk_ssi and debian/if.has_lsf files to build RPM on-the-fly dependnencies
	[r1.28,2005-09-23,jdurand] Do not manipulate on-the-fly (by adding %config() prama) the "/etc/" string for castor-lsf-tools package (that WRONGLY contains production files in the /etc/ directory...)
	[r1.27,2005-09-22,jdurand] Added %attr() in a lot of places
	[r1.26,2005-09-22,jdurand] Now generate the spec using the *.install.perm files
	[r1.25,2005-09-20,jdurand] Added %defattr(-,root,root) to the spec file
	[r1.24,2005-09-15,jdurand] Remove the regexp about architecture: RPM is not good enough to be able to produce subpackages for different architectures (everything is i368, or noarch, or x64_64, or... impossible to distinguish rpms that contains only text than rpms that contain arch-specific things within a single spec file!)
	[r1.23,2005-09-15,jdurand] Added the mechanism to recuperate architecture (not yet translated into rpm language, though)
	[r1.23,2005-09-15,jdurand] Added a blank somewhere in the perl regexp to ensure we catch what we want (was working before, but sounds safer like that)
  * PROTO2/ns/Cns_procreq.c:
	[r 1.3,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() declaration
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
	[r1.76,2005-08-11,jdurand] Removed use of the client message box
  * PROTO2/rtcopy/TapeErrorHandler.c:
	[r 1.8,2005-09-18,obarring] Move free of iaddr
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
	[r1.135,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.135,2005-09-19,obarring] was found
  * PROTO2/rtcopy/rtcpcldcommon.c:
	[r1.31,2005-09-27,obarring] Recall candidates must have correct processing status and no flagged error
	[r1.30,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.30,2005-09-19,obarring] was found
  * PROTO2/scheduler/LSF/Imakefile:
	[r1.11,2005-09-27,jdurand] Removed esub
  * PROTO2/scheduler/LSF/schmod_castor.c:
	[r1.33,2005-09-14,jdurand] Removed unused routine Castor_DebugLsfJobid2Handle
	[r1.33,2005-09-14,jdurand] Hashed internal array using lsf_jobid % hash_size (current hash size is 1000)
	[r1.32,2005-08-11,jdurand] Removed use of the client message box
  * PROTO2/shlib/Imakefile:
	[r1.39,2005-09-16,itglp] Removed dependency upon libcastorCnvs, which for the time being is only for development.
	[r1.38,2005-09-16,jdurand] Fixed production of libcastorCnvs.so (was having the soname libshift.so!)
	[r1.37,2005-08-24,itglp] Added PostgreSql library, fixed dependencies.
  * PROTO2/stager/Imakefile:
	[r1.48,2005-09-26,jdurand] Move MANPAGES_STAGER and EMANPAGES_STAGER outside of the #id BuildStagerDaemon
  * PROTO2/stager/stager.c:
	[r1.84,2005-09-13,jdurand] Loop on sleep() every second in the FileSystem thread so that we can catch a signal (killall stager) much more quickly
  * PROTO2/stager/stager_fs_service.c:
	[r1.38,2005-09-20,jdurand] Added TotalSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Removed minFreeSpace and maxFreeSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Fill filesystem totalSize in any case
	[r1.38,2005-09-20,jdurand] Fill filesystem minFreeSpace and maxFreeSpace only at creation time with 0.2 and 0.3 respectively
  * PROTO2/stager/stager_gc_service.cpp:
	[r 1.9,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_job_service.cpp:
	[r1.33,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_query_service.cpp:
	[r1.24,2005-09-26,sponcec3] Do not consider queries on non existing files as errors from the point of view of the server
	[r1.23,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_service.c:
	[r 1.8,2005-09-07,jdurand] stager_notifyService_v2() implementation
  * PROTO2/stager/stager_service_run.c:
	[r1.29,2005-09-12,jdurand] In the service threads, decrement stagerService[service].notified only if it is > 0
	[r1.29,2005-09-12,jdurand] In the notification threads, verify number of bytes received per version of notification protocol, and increment the stagerService[service].notified variable with the number of wanted threads.
	[r1.28,2005-09-07,jdurand] Support of version 2 (STAGER_NOTIFY_MAGIC2) of the notification, when the number of thread wanted is given by client
	[r1.27,2005-09-07,jdurand] Fix to make sure only one thread is waked up per notification
	[r1.26,2005-09-05,jdurand] Make sure only one thread is waked per notification per service
  * PROTO2/test/castor/db/Imakefile:
	[r 1.8,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * PROTO2/test/castor/db/testdb.cpp:
	[r1.15,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * PROTO2/tools/makeMagicNumbers.csh:
	[r 1.2,2005-08-29,sponcec3] smaller font so that it fits on one page
  * PROTO2/vmgr/vmgr_procreq.c:
	[r 1.5,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() definition
  * PROTO2/CASTOR.spec:
	[r1.35,2005-09-26,jdurand] Typo %fi -> %endif
	[r1.34,2005-09-26,jdurand] Tentative support of amd64
	[r1.33,2005-09-26,jdurand] Exclude BuildRmMaster also in the RPM execution if there is no LSF available
	[r1.32,2005-09-26,jdurand] Implementation of has_stk_ssi, has_lsf and has_oracle a-la-RPM
	[r1.31,2005-09-22,jdurand] Stop calling 'install' with user/group/mode
	[r1.30,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.29,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.29,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.29,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.29,2005-09-15,jdurand] 
	[r1.29,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/castor/BaseCnvSvc.cpp:
	[r1.17,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseCnvSvc.hpp:
	[r1.14,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/BaseObject.cpp:
	[r1.13,2005-08-22,itglp] Added proper cleanup in the destructor.
  * PROTO2/castor/Constants.cpp:
	[r1.28,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.27,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Constants.hpp:
	[r1.51,2005-09-19,itglp] Added an identifier for the Srm service.
	[r1.50,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/ICnvSvc.hpp:
	[r1.13,2005-08-26,sponcec3] fully qualify some names and paths
	[r1.12,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Imakefile:
	[r1.108,2005-08-24,itglp] Moved some classes to db/cnv/Imakefile.
	[r1.107,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/Services.cpp:
	[r1.20,2005-08-23,itglp] Core' files upgraded to manage CDBC API.
  * PROTO2/castor/db/Imakefile:
	[r 1.5,2005-08-23,itglp] Upgraded Imakefiles to reflect new packages.
  * PROTO2/castor/db/castor_oracle_create.sql:
	[r 1.9,2005-08-18,itglp] Updated to reflect latest changes in oracleTrailer.sql.
	[r1.22,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.21,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.20,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.20,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.19,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.18,2005-09-22,sponcec3] Fixed isSubRequestToSchedule : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.17,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.16,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.15,2005-09-20,sponcec3] Fixed typo
	[r1.14,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.13,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.12,2005-09-15,itglp] Updated scripts due to latest changes in RH.xmi and oracleTrailer.sql.
	[r1.11,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] 
	[r1.11,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.11,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.10,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/castor_oracle_drop.sql:
	[r 1.6,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.5,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r 1.5,2005-09-22,itglp] Fixed comments in the drop script.
	[r 1.4,2005-08-22,itglp] Updated to the latest changes in RH.xmi
  * PROTO2/castor/db/mysql/Imakefile:
	[r 1.9,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.9,2005-08-18,itglp] abstracted database converters.
	[r 1.9,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.cpp:
	[r1.10,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r1.10,2005-08-18,itglp] abstracted database converters.
	[r1.10,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/mysql/MyCnvSvc.hpp:
	[r 1.5,2005-08-18,itglp] Removed generated converters, not needed anymore with the upcoming
	[r 1.5,2005-08-18,itglp] abstracted database converters.
	[r 1.5,2005-08-18,itglp] Added MySql implementation for access to database.
  * PROTO2/castor/db/ora/OraCastorFileCnv.cpp:
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraCnvSvc.cpp:
	[r1.51,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
  * PROTO2/castor/db/ora/OraCommonSvc.cpp:
	[r 1.7,2005-09-19,sponcec3] fixe type of min/maxFreeSpace in FileSystem
	[r 1.6,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r 1.5,2005-09-19,sponcec3] empty log message ***
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraCommonSvc.hpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraDiskCopyCnv.cpp:
	[r1.40,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskPoolCnv.cpp:
	[r1.35,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.34,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.33,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraDiskServerCnv.cpp:
	[r1.32,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFileSystemCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Added totalSize field
	[r1.38,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletedCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraFilesDeletionFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraGCSvc.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraGCSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.cpp:
	[r 1.5,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraJobSvc.hpp:
	[r 1.3,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraQuerySvc.cpp:
	[r1.19,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r1.18,2005-08-17,itglp] Fixed in reset() a missing call to the inherited method.
  * PROTO2/castor/db/ora/OraQuerySvc.hpp:
	[r 1.8,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/db/ora/OraStageFileQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageFindRequestRequestCnv.cpp:
	[r1.23,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToGetRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToPutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePrepareToUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutDoneRequestCnv.cpp:
	[r1.26,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagePutRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageReleaseFilesRequestCnv.cpp:
	[r1.18,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRequestQueryRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageRmRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStageUpdateRequestCnv.cpp:
	[r1.24,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraStagerSvc.hpp:
	[r1.72,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/db/ora/OraStreamCnv.cpp:
	[r1.47,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.46,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.45,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraSvcClassCnv.cpp:
	[r1.39,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.38,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.37,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.cpp:
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeCnv.hpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
  * PROTO2/castor/db/ora/OraTapeCopyCnv.cpp:
	[r1.45,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.44,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.43,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.cpp:
	[r1.18,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.17,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
	[r1.16,2005-08-29,sponcec3] Fixes going along with the codegeneration fix concerning 1 to 1 relations with one end having no name
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeDriveCnv.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have also changed
	[r1.11,2005-08-29,sponcec3] Modifications due to the further fix for 1 to 1 associations on the code generation
  * PROTO2/castor/db/ora/OraTapeDriveDedicationCnv.cpp:
	[r 1.4,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.3,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/db/ora/OraTapePoolCnv.cpp:
	[r1.38,2005-09-19,sponcec3] Fixed case of 'FROM' keyword in some statements
	[r1.37,2005-09-05,sponcec3] Fixed case of ORACLE statement
	[r1.36,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraTapeRequestCnv.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
  * PROTO2/castor/db/ora/OraTapeServerCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/db/ora/OraVdqmSvc.cpp:
	[r1.23,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, these files has been changed by gencastor
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.22,2005-09-05,mbraeger] server.
	[r1.21,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.20,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/ora/OraVdqmSvc.hpp:
	[r1.19,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.19,2005-09-05,mbraeger] server.
	[r1.18,2005-09-01,mbraeger] Two new functions implementd: matchTape2TapeDrive, selectTapeRequestQueue
	[r1.17,2005-08-17,itglp] Removed a method which is now in the ancestor class.
  * PROTO2/castor/db/oracleHeader_drop.sql:
	[r 1.3,2005-09-19,itglp] Fixed some comments.
  * PROTO2/castor/db/oracleTrailer.sql:
	[r1.198,2005-09-27,sponcec3] Converted GC trigger to the new type of min/maxFreeSpace
	[r1.197,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r1.196,2005-09-22,itglp] Fixed FS trigger to start GC: it spawns a separate db job to do it.
	[r1.196,2005-09-22,itglp] Fixed comments in the drop script.
	[r1.195,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
	[r1.194,2005-09-22,sponcec3] Fixed getUpdateStart : diskcopies with no filesystem attached were ignored, leading to duplicated WAITTAPERECALLs
	[r1.193,2005-09-22,sponcec3] Fixed Disk2DiskCopyDone : subrequest waiting on the disk2disk copy were not ut into restart status
	[r1.192,2005-09-20,sponcec3] Fixed prepareForMigration for code that was introduced but never used
	[r1.191,2005-09-20,sponcec3] Fixed typo
	[r1.190,2005-09-19,sponcec3] Updated DB version after the change of the fileSystem table
	[r1.189,2005-09-12,sponcec3] Added missing constraint on tape table leading to double insertion of some rows
	[r1.188,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM
	[r1.188,2005-09-05,mbraeger] server.
	[r1.187,2005-09-01,mbraeger] Added three procedures to oracleTrailer: selectTapeRequestQueue, testMatchTape2TapeDrive, matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] 
	[r1.187,2005-09-01,mbraeger] testMatchTape2TapeDrive and  matchTape2TapeDrive are used by OraVdqmSvc::matchTape2TapeDrive
	[r1.187,2005-09-01,mbraeger] selectTapeRequestQueue is used by OraVdqmSvc::selectTapeRequestQueue
	[r1.186,2005-08-12,itglp] Fixed some small bugs
  * PROTO2/castor/db/oracleTrailer_drop.sql:
	[r 1.3,2005-09-26,itglp] Added defGarbageCollectFS procedure, updated generated scripts.
	[r 1.2,2005-08-18,itglp] Added DROP statement for matchTape2TapeDrive.
  * PROTO2/castor/dlfbuf.h:
	[r 1.9,2005-09-12,sponcec3] Do not forget mutex unlocking in case of exception !
  * PROTO2/castor/gc/Imakefile:
	[r 1.7,2005-09-20,jdurand] Install gcDaemon with mode bits 0750 instead of 0755
  * PROTO2/castor/io/StreamAbortResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBaseAddressCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamBasicResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamCastorFileCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamClientIdentificationCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDeviceGroupNameCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDisk2DiskCopyDoneRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyCnv.cpp:
	[r1.20,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamDiskCopyForRecallCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamEndResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamErrorHistoryCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileQueryResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileResponseCnv.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFileSystemCnv.cpp:
	[r1.20,2005-09-19,sponcec3] Added totalSize field
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFiles2DeleteCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletedCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFilesDeletionFailedCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamFindReqResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFileCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCFilesResponseCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGCLocalFileCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateDoneCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamGetUpdateStartResponseCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamIOResponseCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMessageAckCnv.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamMoverCloseRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutDoneStartCnv.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutFailedCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamPutStartRequestCnv.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamQueryParameterCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamRequestQueryResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSegmentCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageAbortRequestCnv.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFileQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageFindRequestRequestCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetNextRequestCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToGetRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToPutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePrepareToUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutDoneRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStagePutRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageReleaseFilesRequestCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRequestQueryRequestCnv.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageRmRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateNextRequestCnv.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStageUpdateRequestCnv.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStartResponseCnv.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamStringResponseCnv.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamSubRequestCnv.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeAccessSpecificationCnv.cpp:
	[r 1.5,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeCopyForMigrationCnv.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveCnv.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
	[r1.10,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/io/StreamTapeDriveCompatibilityCnv.cpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeDriveDedicationCnv.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.5,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapePoolCnv.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeRequestCnv.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/StreamTapeServerCnv.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to the revision of the vdqm diagram, these files has been updated by gencastor
	[r 1.4,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/io/biniostream.h:
	[r 1.5,2005-09-19,itglp] Changed implementation to make it endianess-aware: the default endianess
	[r 1.5,2005-09-19,itglp] is the LITTLE one as in the production setup, and macros are defined to
	[r 1.5,2005-09-19,itglp] convert from/to host and 'inverted network' representation.
	[r 1.4,2005-09-01,mbraeger] Return to the version 1.2
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have now changed
  * PROTO2/castor/query/IQuerySvc.hpp:
	[r 1.9,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/rh/AbortResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/BasicResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Client.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/EndResponse.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileQueryResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FileResponse.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/FindReqResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GCFilesResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/GetUpdateStartResponse.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/IOResponse.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/RequestQueryResponse.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Response.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/Server.cpp:
	[r1.41,2005-09-07,sponcec3] Notify of the number of subrequests for fileRequests so that the right number of threads are waked up
	[r1.40,2005-09-06,sponcec3] only notify the service concerned when a request arrives
	[r1.39,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/rh/StartResponse.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/rh/StringResponse.cpp:
	[r 1.9,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/CastorFile.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ClientIdentification.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Disk2DiskCopyDoneRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopy.cpp:
	[r1.19,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyForRecall.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskCopyInfo.cpp:
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskPool.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/DiskServer.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileClass.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.cpp:
	[r1.17,2005-09-19,sponcec3] Added totalSize field
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FileSystem.h:
	[r1.21,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystem.hpp:
	[r1.13,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/FileSystemCInt.cpp:
	[r1.14,2005-09-19,sponcec3] Added totalSize field
  * PROTO2/castor/stager/Files2Delete.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeleted.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/FilesDeletionFailed.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFile.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCFileList.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GCLocalFile.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateDone.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/GetUpdateStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/ICommonSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/IFSSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IGCSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.h:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvc.hpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IJobSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/IStagerSvc.h:
	[r1.63,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvc.hpp:
	[r1.65,2005-09-22,sponcec3] In isSubRequestToSchedule, commit in the case where the decision is to not schedule
  * PROTO2/castor/stager/IStagerSvcCInt.cpp:
	[r1.54,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/ITapeSvcCInt.cpp:
	[r 1.2,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
  * PROTO2/castor/stager/MoverCloseRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutDoneStart.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutFailed.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/PutStartRequest.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QryRequest.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/QueryParameter.cpp:
	[r 1.4,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/RemoteGCSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteGCSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.cpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/RemoteJobSvc.hpp:
	[r 1.4,2005-09-05,sponcec3] Changed implementation of requestToDo. It is no more dynamic
	[r 1.3,2005-08-18,itglp] Undo the last commit on these files: commit() and rollback() methods
	[r 1.3,2005-08-18,itglp] are not anymore needed at the client side.
  * PROTO2/castor/stager/ReqIdRequest.cpp:
	[r 1.7,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Request.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Segment.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageAbortRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFileQueryRequest.cpp:
	[r1.11,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageFindRequestRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetNextRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToGetRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToPutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePrepareToUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutDoneRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StagePutRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageReleaseFilesRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRequestQueryRequest.cpp:
	[r1.12,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageRmRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateNextRequest.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StageUpdateRequest.cpp:
	[r1.10,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/StartRequest.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Stream.cpp:
	[r1.16,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SubRequest.cpp:
	[r1.21,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/SvcClass.cpp:
	[r1.14,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/Tape.cpp:
	[r1.15,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopy.cpp:
	[r1.17,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapeCopyForMigration.cpp:
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/stager/TapePool.cpp:
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.cpp:
	[r 1.3,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/DeviceGroupName.h:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/DeviceGroupName.hpp:
	[r 1.3,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/ErrorHistory.cpp:
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/IVdqmSvc.hpp:
	[r1.22,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.21,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.21,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldProtocolInterpreter.cpp:
	[r 1.5,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.5,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/OldRequestFacade.cpp:
	[r 1.4,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.3,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.3,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/RTCopyDConnection.cpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/TapeAccessSpecification.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.cpp:
	[r1.14,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
	[r1.13,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDrive.h:
	[r1.13,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDrive.hpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCInt.cpp:
	[r1.12,2005-09-01,mbraeger] Due to bug fixes in the gencastor application, these files have changed.
  * PROTO2/castor/vdqm/TapeDriveCompatibility.cpp:
	[r 1.2,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.7,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
	[r 1.6,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeDriveDedication.h:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedication.hpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeDriveDedicationCInt.cpp:
	[r 1.7,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.6,2005-09-05,mbraeger] Due to an attribute bug in the RH.xmi file, the TapeDriveDedication class has to be changed
  * PROTO2/castor/vdqm/TapeRequest.cpp:
	[r 1.9,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.8,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeRequest.h:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequest.hpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeRequestCInt.cpp:
	[r 1.8,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r 1.5,2005-08-29,sponcec3] Extra namespaces added after last modifications of the code generation tool
  * PROTO2/castor/vdqm/TapeServer.h:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServer.hpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerCInt.cpp:
	[r 1.5,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.cpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.h:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/TapeServerStatusCodes.hpp:
	[r 1.6,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/castor/vdqm/VdqmServer.cpp:
	[r1.39,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.38,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.37,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r1.36,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.35,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.34,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.34,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
	[r1.33,2005-08-18,itglp] Fixed DLF message for database.
  * PROTO2/castor/vdqm/VdqmServer.hpp:
	[r 1.9,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.cpp:
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/BaseRequestHandler.hpp:
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveConsistencyChecker.cpp:
	[r 1.8,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.8,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.cpp:
	[r1.16,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.15,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.14,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.13,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.12,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.12,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeDriveStatusHandler.cpp:
	[r1.11,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.cpp:
	[r 1.9,2005-09-13,mbraeger] Solved some bugs, which appeaered during stress tests with rtcpd_test and rtcpc_test
	[r 1.8,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
	[r 1.7,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.7,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestDedicationHandler.hpp:
	[r 1.6,2005-09-06,mbraeger] Rollback for RTCPD in handler/TapeRequestDedicationHandler.cpp implemented. Now the protocol to RTCPD is handled in extra threads, so that there is no hanging, if the connection takes too long.
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.cpp:
	[r1.13,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
	[r1.12,2005-09-05,mbraeger] Included Debug message and fixed some memory leakes.
	[r1.11,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r1.10,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r1.10,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/handler/TapeRequestHandler.hpp:
	[r 1.7,2005-09-05,mbraeger] Implemented the VDQM_GET_VOLQUEUE and VDQM_GET_DRVQUEUE messages, which are needed for the > showqueues-command of the VDQM server.
	[r 1.6,2005-09-01,mbraeger] Bug fixing after doing some tests for the whole mechanism
	[r 1.6,2005-09-01,mbraeger] Implemented the VDQM_GET_VOLQUEUE message
  * PROTO2/castor/vdqm/newVdqm.h:
	[r 1.3,2005-09-07,mbraeger] Due to changements in the vdqm db diagram, some files has been updated by gencastor and some has been changed manually.
  * PROTO2/clips/castor.clp:
	[r1.12,2005-09-26,jdurand] Support of space
  * PROTO2/clips/castorweight.clp:
	[r1.15,2005-09-26,jdurand] Support of space
  * PROTO2/codeGeneration/RH.xmi:
	[r1.105,2005-09-19,sponcec3] Added totalSize field in FileSystem
	[r1.104,2005-09-07,mbraeger] Revision of the vdqm db diagram, due to the vdqm meeting of this afternoon
	[r1.103,2005-09-05,mbraeger] Bug fix in the TapeDriveDedication class of the cdqm diagram
	[r1.102,2005-08-29,mbraeger] Modification of the assoziation between TapeRequest and Tape.
	[r1.101,2005-08-22,mbraeger] Added the library Name to the DeviceGroupName Table of the VDQM diagram
  * PROTO2/codeGeneration/gencastor/Makefile:
	[r 1.7,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/changelog:
	[r1.16,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.15,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.14,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.13,2005-08-29,sponcec3] New gencastor release
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/debian/files:
	[r1.15,2005-09-16,itglp] Version 3.4.4.
	[r1.14,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.13,2005-09-01,sponcec3] new minor version of gencastor including recent fixes
	[r1.12,2005-08-29,sponcec3] New gencastor release
	[r1.11,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/genCastor.cpp:
	[r1.17,2005-09-16,itglp] One more fix to have SQL scripts reflect namespace in the filename.
	[r1.16,2005-09-15,itglp] Fully fixed generation of generic db converters. This makes vesion 3.4.3.
	[r1.15,2005-09-14,itglp] Version 3.4.2.
	[r1.14,2005-08-25,sponcec3] fixed typo
	[r1.13,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.12,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/gencastor:
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppbasewriter.cpp:
	[r1.16,2005-08-29,sponcec3] Remove equivalence of no multiplicity and 1
	[r1.15,2005-08-26,sponcec3] Improved parsing of multiplicity (none and 1..n understood now)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.cpp:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcastorwriter.h:
	[r 1.5,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r 1.4,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppclasswriter.cpp:
	[r1.15,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppmycnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcpporacnvwriter.cpp:
	[r1.60,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.59,2005-08-29,sponcec3] Fixed bug in 1 to 1 relations when one end has no name
	[r1.58,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.57,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.56,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppcppstreamcnvwriter.cpp:
	[r1.12,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.11,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r1.10,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphbasecnvwriter.cpp:
	[r 1.8,2005-08-26,sponcec3] fixes concerning namespaces in the case castor is not the namespace in which we generate
	[r 1.7,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphmycnvwriter.cpp:
	[r 1.3,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphoracnvwriter.cpp:
	[r1.17,2005-09-01,sponcec3] Fixed bug for associations n to 1 that had no name on one side
	[r1.16,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cpphstreamcnvwriter.cpp:
	[r 1.4,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.cpp:
	[r1.22,2005-08-26,sponcec3] Improvements in order to support generation of code that is not inside castor namespace
	[r1.21,2005-08-25,sponcec3] removes comment I introduced by mistake
	[r1.20,2005-08-25,sponcec3] Added a -c flag that gives the top namespace to ba used (default castor)
	[r1.19,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/codeGeneration/gencastor/umbrello/codegenerators/cppwriter.h:
	[r 1.6,2005-08-24,itglp] Added generation of converters for CDBC API. This makes version 3.3-0.
  * PROTO2/common/Cstrerror.c:
	[r 1.2,2005-09-16,jdurand] Added #include <stdlib.h> for malloc() declaration
  * PROTO2/common/serror.c:
	[r 1.8,2005-09-16,jdurand] Added EDLFNOTCONNECTED error message
  * PROTO2/config/Imake.rules:
	[r1.15,2005-09-20,jdurand] Make the install rules working even if we are not root
	[r1.15,2005-09-20,jdurand] Note: on debian 'fakeroot' indeed pretends that your login is "root")
  * PROTO2/config/Library.tmpl:
	[r1.23,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/LibraryDeps.tmpl:
	[r 1.7,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/Project.tmpl:
	[r1.47,2005-09-26,jdurand] Do not force BuildJob to YES if BuildRmnode is YES
	[r1.46,2005-08-23,itglp] Added PostgreSql and (partially) removed MySql support, both with CDBC API.
  * PROTO2/config/site.def:
	[r1.74,2005-09-22,jdurand] Make "castorexpert" the default expert host
  * PROTO2/debian/castor-allservicesbuttapeservers.conf:
	[r 1.3,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.2,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/castor.conf:
	[r 1.6,2005-09-22,jdurand] Commented all hosts except MSG HOST
	[r 1.5,2005-09-22,jdurand] libcastorCommonOra.so -> libcastorCommonOra.so.2.0
  * PROTO2/debian/changelog:
	[r1.65,2005-09-12,jdurand] Fix typo LSF -> DLF
  * PROTO2/debian/control:
	[r1.33,2005-09-26,jdurand] Suppress unused and somewhat dangerous package castor-lsf-tools
	[r1.32,2005-09-22,jdurand] Added Recommends: castor-lib, castor-lib-oracle for castor*-conf packages
  * PROTO2/debian/rules:
	[r1.36,2005-09-27,jdurand] A fix to build debs on amd64 (untested)
	[r1.35,2005-09-26,jdurand] Move creation of $(CURDIR)/debian/castor/usr/lib/perl/CASTOR outside of amd64 or not
	[r1.34,2005-09-26,jdurand] Added dpkg compat rules
	[r1.34,2005-09-26,jdurand] Added pragmas for amd64 (untested)
	[r1.33,2005-09-22,jdurand] Build the *.install from the *.install.perm
	[r1.32,2005-09-15,jdurand] mkdir of etc/castor/expert (because of flows in the current make of CASTOR: until all Imakefiles are changed, we have rules that install not always where they depend from - notion of $(DESTDIR))
	[r1.31,2005-09-15,jdurand] Ugly hack but the problem is architectural: to be able to install somewhere else but in the root filesystem, rules are based on dir/name: constraint, and install in $(DESTDIR)dir/name. Those who construct the value of dir/name is every Imakefile. And they FileName() macro to do that. but we cannot impose FileName() macro to prepend $(DESTDIR) in any case, because FileName() macro is often called several times (i.e. recursively). So, even if the correct solution would be to:
	[r1.31,2005-09-15,jdurand] change config/Imake.rules to depend on $(DESTDIR)dir/name instead of dir/name:
	[r1.31,2005-09-15,jdurand] change ALL (repeat: ALL) Imakefiles/Makefiles to use $(DESTDIR), once, as soon as they build a relative path
	[r1.31,2005-09-15,jdurand] 
	[r1.31,2005-09-15,jdurand] the quick alternative is to touch every file before the build. This horrible thing will guarantee that packaging CASTOR using a tarball made before CASTOR has been locally installed, will anyway correctly install the newly CASTOR in the packaging install path (typically, i.e. in $(DESTDIR))
  * PROTO2/debian/stager.init:
	[r 1.3,2005-09-13,jdurand] Always redirect kill output to /dev/null (we handle the error afterwards)
	[r 1.2,2005-09-13,jdurand] Stop stager using kill -2, poll process status every second, exit if ok, and kill -9 if process is still alive after 60 seconds
  * CASTOR/dlf/dlf_mysql_drop.sql:
	[r 1.2,2005-09-07,kotlyar] fixed the right order to drop DLF tables
  * CASTOR/dlf/dlf_mysql_ifce.c:
	[r1.11,2005-09-16,kotlyar] added support for read buffer in dlf_get_host_id and dlf_get_ns_host_id
  * CASTOR/dlf/dlf_oracle_ifce.pc:
	[r1.12,2005-09-20,kotlyar] replaced sigalarm handler to Cthread+sleep for timing buffers flush
  * CASTOR/dlf/dlf_oracle_tbl.sql:
	[r1.10,2005-08-30,sponcec3] Added correct tablespace for the indexes
  * CASTOR/dlf/dlf_procreq.c:
	[r 1.7,2005-09-21,kotlyar] added some checks for synchronization with buffers flushing
  * CASTOR/dlf/dlfquery/config.ora.php:
	[r 1.2,2005-08-12,kotlyar] fixed minor bug "if facility was not all then second level link didn't use it in a GET string"
  * CASTOR/dlf/dlfquery/dlf_showmsg.mysql.log.php:
	[r 1.4,2005-08-12,kotlyar] added support for the subrequest id in query parameters
  * CASTOR/dlf/dlfquery/dlf_showmsg.mysql.php:
	[r 1.4,2005-08-12,kotlyar] added support for the subrequest id in query parameters
  * CASTOR/dlf/dlfquery/dlf_showmsg.ora.log.php:
	[r 1.4,2005-08-12,kotlyar] fixed minor bug "if facility was not all then second level link didn't use it in a GET string"
  * CASTOR/dlf/dlfquery/dlf_showmsg.ora.php:
	[r 1.6,2005-08-26,kotlyar] added access for several DBs form dlfquery (by mapping)
  * CASTOR/dlf/dlfquery/dlf_start.php:
	[r 1.4,2005-08-12,kotlyar] year lists at the start page now is not static
  * CASTOR/dlf/dlfquery/main.css:
	[r 1.3,2005-08-24,kotlyar] added new useful styles
  * CASTOR/dlf/dlfserver.c:
	[r1.13,2005-09-20,kotlyar] replaced sigalarm handler to Cthread+sleep for timing buffers flush
  * PROTO2/doc/package/rtcopy/mrOperation.tex:
	[r1.15,2005-08-12,obarring] Remove --Name option in printSvcClass examples
  * PROTO2/doc/uml/StagerSvcs.xmi:
	[r 1.6,2005-09-16,itglp] Updated to reflect latest changements in db services.
	[r 1.5,2005-08-23,itglp] Updated class diagrams to represent the new CDBC API.
  * CASTOR/h/dlf_server.h:
	[r 1.3,2005-09-16,kotlyar] added buffers for messages in the dlf_srv_thread_info structure
  * PROTO2/h/serrno.h:
	[r 1.9,2005-08-22,itglp] Added SQLERR used by the new SQLError exception.
	[r1.10,2005-09-16,jdurand] Added EDLFNOTCONNECTED
  * PROTO2/h/stager_constants.h:
	[r1.17,2005-09-22,jdurand] Make "castorstager" the default notification host
	[r1.16,2005-09-07,jdurand] Definition of STAGER_NOTIFY_MAGIC2
	[r1.16,2005-09-07,jdurand] Make STAGER_NOTIFY_MAGIC equal to STAGER_NOTIFY_MAGIC2 (default value is latest available protocol)
  * PROTO2/h/stager_service_api.h:
	[r1.11,2005-09-07,jdurand] New member for per-thread-per-service structure: int nbTotalThreads;
	[r1.11,2005-09-07,jdurand] New prototype: stager_notifyService_v2(), i.e. notification using version 2 of the notif. protocol, where client gives the wanted number of threads
  * PROTO2/hsmtools/cleanLostFiles:
	[r 1.6,2005-09-22,sponcec3] revert previous commit !
	[r 1.5,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/cleanLostFiles.man:
	[r 1.4,2005-09-22,sponcec3] revert previous commit
	[r 1.3,2005-09-22,sponcec3] Small utility to launch grabage collection on all filesystems
  * PROTO2/hsmtools/deleteFileClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/deleteSvcClass.c:
	[r 1.4,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/enterFileClass.c:
	[r 1.5,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/hsmtools/modifySvcClass.c:
	[r 1.6,2005-08-11,itglp] Fixed conversion service names.
  * PROTO2/job/stagerJob.shell:
	[r1.36,2005-08-11,jdurand] Recuperate client ip from arguments instead of using readlsfmsg
  * PROTO2/lib/Imakefile:
	[r1.19,2005-09-23,jdurand] Fixes for static version of libcastorCommonOra
	[r1.18,2005-09-16,jdurand] Re-enable rules for libcastorCommonOra.a that is now included in castor-devel-oracle package
	[r1.17,2005-08-18,itglp] Added rule to remove all .a files in make clean.
	[r1.17,2005-08-18,itglp] Commented out rules to create static libcastorCommonOra.a.
  * PROTO2/makerpm.sh:
	[r 1.2,2005-09-20,jdurand] Do not assume existence of fakeroot when building rpms
  * PROTO2/maketar.sh:
	[r1.33,2005-09-26,jdurand] When building the spec convert /lib/ to /lib64/ instead of /lib to /lib64 (otherwise this too greedy change, affecting file with basename starting with 'lib', like libshift.so!)
	[r1.32,2005-09-26,jdurand] Fix an sed call
	[r1.31,2005-09-26,jdurand] Handle am64 case (where libraries install under /lib64 !)
	[r1.30,2005-09-26,jdurand] Make directories owner by (root,bin) instead of (root,root)
	[r1.29,2005-09-26,jdurand] Use the debian/if.has_oracle, debian/if.has_stk_ssi and debian/if.has_lsf files to build RPM on-the-fly dependnencies
	[r1.28,2005-09-23,jdurand] Do not manipulate on-the-fly (by adding %config() prama) the "/etc/" string for castor-lsf-tools package (that WRONGLY contains production files in the /etc/ directory...)
	[r1.27,2005-09-22,jdurand] Added %attr() in a lot of places
	[r1.26,2005-09-22,jdurand] Now generate the spec using the *.install.perm files
	[r1.25,2005-09-20,jdurand] Added %defattr(-,root,root) to the spec file
	[r1.24,2005-09-15,jdurand] Remove the regexp about architecture: RPM is not good enough to be able to produce subpackages for different architectures (everything is i368, or noarch, or x64_64, or... impossible to distinguish rpms that contains only text than rpms that contain arch-specific things within a single spec file!)
	[r1.23,2005-09-15,jdurand] Added the mechanism to recuperate architecture (not yet translated into rpm language, though)
	[r1.23,2005-09-15,jdurand] Added a blank somewhere in the perl regexp to ensure we catch what we want (was working before, but sounds safer like that)
  * PROTO2/ns/Cns_procreq.c:
	[r 1.3,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() declaration
  * PROTO2/resourcemonitoring/Crmd_recv_from_users.c:
	[r1.76,2005-08-11,jdurand] Removed use of the client message box
  * CASTOR/rtcopy/Ctape_dummies.c:
	[r1.18,2005-08-30,mbraeger] Remove Ctape_seterrbuf() and stage_setlog() due to duplicate definition in libshift
  * PROTO2/rtcopy/TapeErrorHandler.c:
	[r 1.8,2005-09-18,obarring] Move free of iaddr
  * PROTO2/rtcopy/rtcpcldCatalogueInterface.c:
	[r1.135,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.135,2005-09-19,obarring] was found
  * PROTO2/rtcopy/rtcpcldcommon.c:
	[r1.31,2005-09-27,obarring] Recall candidates must have correct processing status and no flagged error
	[r1.30,2005-09-19,obarring] Fix rtcpcld_nextFileToProcess() to reset file=NULL in case no other file
	[r1.30,2005-09-19,obarring] was found
  * PROTO2/scheduler/LSF/Imakefile:
	[r1.11,2005-09-27,jdurand] Removed esub
  * PROTO2/scheduler/LSF/schmod_castor.c:
	[r1.33,2005-09-14,jdurand] Removed unused routine Castor_DebugLsfJobid2Handle
	[r1.33,2005-09-14,jdurand] Hashed internal array using lsf_jobid % hash_size (current hash size is 1000)
	[r1.32,2005-08-11,jdurand] Removed use of the client message box
  * PROTO2/shlib/Imakefile:
	[r1.39,2005-09-16,itglp] Removed dependency upon libcastorCnvs, which for the time being is only for development.
	[r1.38,2005-09-16,jdurand] Fixed production of libcastorCnvs.so (was having the soname libshift.so!)
	[r1.37,2005-08-24,itglp] Added PostgreSql library, fixed dependencies.
  * PROTO2/stager/Imakefile:
	[r1.48,2005-09-26,jdurand] Move MANPAGES_STAGER and EMANPAGES_STAGER outside of the #id BuildStagerDaemon
  * PROTO2/stager/stager.c:
	[r1.84,2005-09-13,jdurand] Loop on sleep() every second in the FileSystem thread so that we can catch a signal (killall stager) much more quickly
  * PROTO2/stager/stager_fs_service.c:
	[r1.38,2005-09-20,jdurand] Added TotalSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Removed minFreeSpace and maxFreeSpace in the output from clips - changed output parsing accordingly
	[r1.38,2005-09-20,jdurand] Fill filesystem totalSize in any case
	[r1.38,2005-09-20,jdurand] Fill filesystem minFreeSpace and maxFreeSpace only at creation time with 0.2 and 0.3 respectively
  * PROTO2/stager/stager_gc_service.cpp:
	[r 1.9,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_job_service.cpp:
	[r1.33,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_query_service.cpp:
	[r1.24,2005-09-26,sponcec3] Do not consider queries on non existing files as errors from the point of view of the server
	[r1.23,2005-09-06,sponcec3] Adapted services to the new requestToDo interface
  * PROTO2/stager/stager_service.c:
	[r 1.8,2005-09-07,jdurand] stager_notifyService_v2() implementation
  * PROTO2/stager/stager_service_run.c:
	[r1.29,2005-09-12,jdurand] In the service threads, decrement stagerService[service].notified only if it is > 0
	[r1.29,2005-09-12,jdurand] In the notification threads, verify number of bytes received per version of notification protocol, and increment the stagerService[service].notified variable with the number of wanted threads.
	[r1.28,2005-09-07,jdurand] Support of version 2 (STAGER_NOTIFY_MAGIC2) of the notification, when the number of thread wanted is given by client
	[r1.27,2005-09-07,jdurand] Fix to make sure only one thread is waked up per notification
	[r1.26,2005-09-05,jdurand] Make sure only one thread is waked per notification per service
  * PROTO2/test/castor/db/Imakefile:
	[r 1.8,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * PROTO2/test/castor/db/testdb.cpp:
	[r1.15,2005-09-23,itglp] Minor fixes done to test latest db API changes.
  * CASTOR/test/dlf/dlftest.c:
	[r 1.5,2005-09-21,kotlyar] added a command line parameter [-t number_of_threads]
  * PROTO2/tools/makeMagicNumbers.csh:
	[r 1.2,2005-08-29,sponcec3] smaller font so that it fits on one page
  * PROTO2/vmgr/vmgr_procreq.c:
	[r 1.5,2005-09-20,jdurand] Added #include <stdio.h> for sprintf() definition

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue, 27 Sep 2005 13:20:27 +0200

castor (2.0.0-64) unstable; urgency=low

  * Fill content of castor-allservicesbuttapeservers-config package

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 11 Aug 2005 11:52:17 +0200

castor (2.0.0-63) unstable; urgency=low

  * Fix in the generation of specfile again, a '$1' got expanded by the script doing the generation
  * New package castor-allservicesbuttapeservers-config containing /etc/castor/castor.conf to be installed on any service, except tape servers where this file needs other entries for RTCOPY

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 11 Aug 2005 11:42:42 +0200

castor (2.0.0-62) unstable; urgency=low

  * Another fix for specfile, unfortunately

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 10 Aug 2005 14:02:56 +0200

castor (2.0.0-61) unstable; urgency=low

  * Fixed in specfile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 10 Aug 2005 13:53:05 +0200

castor (2.0.0-60) unstable; urgency=low

  * Fixed Ctape_Position() prototype
  * Cstrerror() new function - wrapper on strerror preventing errno change - not used for the moment
  * Cmonitd startup script
  * New package castor-scriptlets that externalize scriptlets used on debian or redhat, all service packages depend on it
  * Removal of vmgr*weight*
  * Force ldconfig for lib packages
  * VDQM schema: two new oracle procedures, new tool vdqmDBInit
  * New package castor-rtcopy-mighunter (MigHunter previously was in castor-rtcopy-clientserver)
  * TapeMigrationAndRecall documentation update
  * Optimisation of LSF interface within rmmaster (now re-use the connection to the internal proxy)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 10 Aug 2005 11:58:01 +0200

castor (2.0.0-59) unstable; urgency=low

  * DLF gui
    added mutliple severity select
    added subrequest ID field for the SELECT query (in ORACLE part)
  * Oracle interface
    makeSubRequestWait fix
  * VDQM new schema
    One column added to table DeviceGroupName
    One new function for castor/vdqm/handler/TapeDriveDedicationHandler implemented in the db/ora/OraVdqmSvc class
    Dedication of a tape drive fully implemented
    Log messages added to VdqmServer
  * Packaging
    Resurrected Provides: libshift.so for castor-lib package (needed by cernlib package)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon,  8 Aug 2005 12:28:33 +0200

castor (2.0.0-58) unstable; urgency=low

  * VDQM new schema: Revision of the RtCopyDConnection. Now, it uses the old C (un)marshall makros, because the old protocol can't deal with thebiniostram.h facility.
  * Fixed the clean rule in PROTO2/hsmtools/Imakefile
  * Splitted castor-devel into castor-devel and castor-devel-oracle

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  5 Aug 2005 11:24:34 +0200

castor (2.0.0-57) unstable; urgency=low

  * Fix for install of the perl module

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 18:15:02 +0200

castor (2.0.0-56) unstable; urgency=low

  * Again a fix in CASTOR.spec

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 18:00:13 +0200

castor (2.0.0-55) unstable; urgency=low

  * Fix in CASTOR.spec

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 17:53:58 +0200

castor (2.0.0-54) unstable; urgency=low

  * New package castor-config containing /etc/castor/castor.conf.example
  * Moved CASTOR-client meta package to rpm only (CASTOR.spec) - its name is anyway illegal on debian
  * New factorization of DB interface: now each service has its own explicit service interface
  * Continuing VDQM new schema integration
  * Separation of oracle create/drop statements into two different files
  * Changed logging level in castor/replier/[ClientConnection,RequestReplier].cpp
  * Removed explicit link with libcastorCommonOra.so
  * Added a new 'castor-db-interface' facility provided by DB packages, required by the packages containing the new servers
  * New executable: /usr/bin/diskUsage, /usr/bin/stager_rm
  * Revival of static libraries in the packaging
  * Make sure dlf_write is called with correct uuid in rtcopyclientd
  * New rtcopyclientd message: RTCPCLD_MSG_NOTPPOOLS, DLF_LVL_ERROR,"No tape pool for service class with migr candidates"
  * Skip segment without recall candidate and try to continue with next segment
  * Leak fixes in LSF plugin

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  4 Aug 2005 16:47:45 +0200

castor (2.0.0-53) unstable; urgency=low

  * Vdqm new schema: New files added
  * Protect definitions of closesocket, ioclsocket, INVALID_SOCKET and SOCKET_ERROR
  * Resurected the "filesystem state" in rmnode so that rmnode will always send the filesystem's state. Important when, at startup, rmnode fails to initialize a filesystem
  * Added notion of fixed state per filesystem in rmmaster, because change in rmnode is then always overwriting a possible new state of a filesystem that an admin would decide by doing rmadminnode --node <nodename> --fs <filesystemname> --fsstate <newstate>
  * Support of the new fsstate "Auto", to be used in rmadminnode when the admin have finished with forcing a filesystem's state
  * Add flexibility in the scheduler plugin when DLF will not work - then plugin will log to syslog

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 15 Jul 2005 15:48:12 +0200

castor (2.0.0-52) unstable; urgency=low

  * Fix in the definition of CASTOR-client meta package

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 13 Jul 2005 17:22:18 +0200

castor (2.0.0-51) unstable; urgency=low

  * Fixes in putDoneStart and isSubRequestToSchedule. First ones were checked and are in prod, 2nd ones were not tested
  * Removal of segments in stageRm
  * Propagating the fix in getUpdateStart (see OraJobSvc.cpp)
  * Vdqm new schema: added one new variable to TapeDrive
  * Vdqm new schema: Changed to use the new stager services hierarchy
  * Vdqm new schema: new functions added
  * New remote services implementations, taken from RemoteStagerSvc. Not yet included into the Makefile, commited for backup
  * Port to gcc-4.0
  * Moved libshift.so and libcastorCommonOra.so from the libs to the devel package
  * Removed eexec
  * Fix for processing of -t option in nsdaemon
  * Make a filesystem disabled automatically when rmnode starts and have a problem with rmcreatdirs.sh
  * Use of NOTIFY_ALLOC flag in the LSF plugin scheduler
  * Removed double free in stager job service
  * Removed a print to stdout in stager query service
  * Added socklen_t typedef for _WIN32

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 13 Jul 2005 16:35:10 +0200

castor (2.0.0-50) unstable; urgency=low

  * Added a new functionality to selectTapeDrive()
  * Make Cns_selectsrvr()'s strtok reentrant

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  7 Jul 2005 14:55:46 +0200

castor (2.0.0-49) unstable; urgency=low

  * Renamed putDoneStart to putDoneStartProc to avoid oracle clashing with table having the same name.
  * fixed filerecalled and filerecallfailed for file sizes. Take the one of castorfile and not the one of the subrequest
  * VdqmServer: new log messages added
  * TapeDriveConsistencyChecker fully implemented.
  * Document 'recaller CHECKFILE' configuration
  * Scheduler plugin: work on temporary string rfs instead of the one that is in the job data specific handler
  * Scheduler plugin: Before calling Cstager_IStagerSvc_bestFileSystemForJob(), makes sure that when the job specifies a list of hosts and filesystems, we do not call the stored procedure with any host:filesystem that would NOT be in the candidate hosts as per LSF! Then the risk is to have the stored procedure returning a host:filesystem that does NOT match the candidates
  * Start to work with gcc-4.0

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu,  7 Jul 2005 11:10:59 +0200

castor (2.0.0-48) unstable; urgency=low

  * Added policies: fs_garbage.clp, migrator.pl, recaller.pl, migratorRetryPolicy.pl and recallerRetryPolicy.pl
  * Added missing prototype in h/rtcpcld.h
  * New alert message in case disk filesize is not correct after a recall
  * Add (configurable) check on disk filesize after recall

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  6 Jul 2005 12:07:24 +0200

castor (2.0.0-47) unstable; urgency=low

  * New files for the new VDQM schema in DB
  * Accept recalls when no subRequest is around. Also don't send EBUSY on a stageRm when recalling is going on, let it continue.
  * Fixed bestFileSystemForSegment for the space reservation. It was basically always 0
  * Fixed time window  by which a putDone could be processed before the last put on the same file was over
  * Fixed some gcc -Wall warnings and missing include files (some of them causing sigsegv on 64bits platform)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  6 Jul 2005 11:22:08 +0200

castor (2.0.0-46) unstable; urgency=low

  * PACKAGING.howto contains info about physical location for the www
  * VDQM's code and TapeRequest and TapeDrive table changes
  * Do not call Creplier_RequestReplier_terminate() in stagerJob and do polling of request replier status in any case

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon,  4 Jul 2005 12:08:17 +0200

castor (2.0.0-45) unstable; urgency=low

  * Fixed previous fixes on the memory leaks
  * Updated PACKAGING.howto
  * Changed behavior of stageRm and created a stageRelease that replaces the old stageRm
  * Bug fix in recreateCastorFile PL/SQL
  * New VDQM improvements
  * Fixed stager_job_service for sending NOTOK IOResponse to client
  * Fixed stager_fs_service 

 -- Sebastien Ponce <sponcec3@pcitds13>  Fri,  1 Jul 2005 16:46:49 +0200

castor (2.0.0-44) unstable; urgency=low

  * Fixed memory leaks
  * Added rfiod open/close handlers
  * Added trigger to garbage collection
  * Fixed problem with nbtapecopiesinfs table with negative values

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 30 Jun 2005 13:04:52 +0200

castor (2.0.0-43) unstable; urgency=low

  * Revisited stager command-liens and man pages
  * Fixed plugin for dlf error buffer
  * timeouted all dlf protocol
  * Fixed logging typo in tape s/w
  * Fixed garbage collection stored procedure for zero-length files

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 22 Jun 2005 15:56:35 +0200

castor (2.0.0-42) unstable; urgency=low

  * Added move medium in smc
  * Added -t <number of threads> in dlfserer
  * Renamed initscripts to the name of the daemon they are dealing with
  * Revisited vdqm schema
  * Support of dynamic load of DB interface
  * Other fixes...

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 19 Jun 2005 09:00:03 +0200

castor (2.0.0-41) unstable; urgency=low

  * Get Provides section from debian/control and put it in CASTOR.spec
  * Support defaultSize with unit in modifySvcClass

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  7 Jun 2005 17:21:43 +0200

castor (2.0.0-40) unstable; urgency=low

  * Fixed putFailedProc where a variable name was the name of a table column
  * Support debug mode for "rootd" in job
  * Check if we are an end-point (no mover) in any case in job
  * Do not answer to client when a putDone is not successful after the call to stored procedure (stager error service should take care of that) in job
  * Check request type before using it (side effect: putDone on prepareToPut jobs had no source) in stager db service
  * Reject putDone's if there was no put in stager db service
  * Cleanup internal requests, even when thay fail in stager job service

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  7 Jun 2005 16:50:44 +0200

castor (2.0.0-39) unstable; urgency=low

  * dlf/dlfquery/dlf_showmsg.mysql.php: added a choice box presentating all existing facilities
  * test/rfio/dataSource.c: first version
  * c++ interface: several fixes
  * job: do not answer to client when putDone fails
  * new tag: v2_0_0_39

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  3 Jun 2005 13:14:51 +0200

castor (2.0.0-38) unstable; urgency=low

  * Added StageMapFile and StageTypeFile constants
  * Use SvcClass as a job feature instead of a job project name

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 30 May 2005 15:31:24 +0200

castor (2.0.0-37) unstable; urgency=low

  * Better GCpolicy taking into account the number of accesses to a file, and not deleting files that were never accessed (pinning problem)
  * Use concat=OPEN_NOTRUNC for tape recalls
  * Added stager_mapper.h for export
  * Fixed fileQuery to specify svcClass

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 30 May 2005 10:27:21 +0200

castor (2.0.0-36) unstable; urgency=low

  * Fixed interface to db in stager: changing a string is a free()/malloc() operation in the c++ interface, thus any previous pointer on that string should be updated
  * Added stager_mapper.h

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 27 May 2005 12:50:38 +0200

castor (2.0.0-35) unstable; urgency=low

  * Added stager mapping 

 -- Ben Couturier <ben.couturier@cern.ch>  Wed, 26 May 2005 11:00:35 +0200

castor (2.0.0-34) unstable; urgency=low

  * Guess major/minor versions from debian/changelog

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 25 May 2005 14:46:35 +0200

castor (2.0.0-33) unstable; urgency=low

  * Fixed man pages
  * Fixed package dependencies (castor-stager-clients in particular)
  * Export *CONFIG files as *CONFIG.example
  * Export sysconfig xxx files as xxx.example
  * Fixed clean/clobber rule in shlib/Imakefile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue, 24 May 2005 17:06:24 +0200

castor (2.0.0-32) unstable; urgency=low

  * Fix in the link of dbtools (in hsmtools dir)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 18:28:50 +0200

castor (2.0.0-31) unstable; urgency=low

  * spec file fix
  * support for the SvcClasses to the filequeries

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 18:02:48 +0200

castor (2.0.0-30) unstable; urgency=low

  * Fix in recreateCastorFile (put on a prepareToPut)
  * Fix in request replier (do not exit when attached in gdb)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 17:34:38 +0200

castor (2.0.0-29) unstable; urgency=low

  * New version, numerous fixes, 1st implementation of prepareToPut+put+putDone

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Thu, 19 May 2005 11:33:10 +0200

castor (2.0.0-28) unstable; urgency=low

  * Few fixes in packaging

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  3 May 2005 11:01:27 +0200

castor (2.0.0-27) unstable; urgency=low

  * rtcopy fixes
  * CASTOR.spec file
  * etc.. (too many - sorry - see cvs log)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon,  2 May 2005 13:00:30 +0200

castor (2.0.0-26) unstable; urgency=low

  * Added all missing files in previous packaging
  * Added gcDaemon's sysconfig

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 17 Apr 2005 08:07:06 +0200

castor (2.0.0-25) unstable; urgency=low

  * Makes tank dependency outside of libshift
  * Removed lsf/maui modes in rmnode

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sat, 16 Apr 2005 20:59:06 +0200

castor (2.0.0-24) unstable; urgency=low

  * makedeb fix

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sat, 16 Apr 2005 09:39:47 +0200

castor (2.0.0-23) unstable; urgency=low

  * Trying to build 2.0.0-23, that contains:
  * stager/rtcopy/RequestReplier fixes
  * gcdaemon (C) replaced by gcDaemon (C++)
  * etc...

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sat, 16 Apr 2005 09:29:41 +0200

castor (2.0.0-22) unstable; urgency=low

  * Fixed man pages rules in PROTO2/rtcopy/Imakefile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 11 Mar 2005 12:19:53 +0100

castor (2.0.0-21) unstable; urgency=low

  * Fix in rtcopy Imakefile

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 11 Mar 2005 10:49:55 +0100

castor (2.0.0-20) unstable; urgency=low

  * Fix in PROTO2/h/Castor_limits.h (IBM 3592 densities definition)
  * Fix in build of rtcopy binaries: only rtcpclientd should have dependency on oracle library
  * Fix in startup scripts when the daemon fails to start

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 11 Mar 2005 09:50:54 +0100

castor (2.0.0-19) unstable; urgency=low

  * Packaged to have up-to-date s/w to install on tape servers

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  9 Mar 2005 18:21:31 +0100

castor (2.0.0-18) unstable; urgency=low

  * Fix castor-job cron.hourly job
  * Fix in stager client
  * Fix in stagerJob (DISKCOPY_CANBEMIGR state)

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  8 Feb 2005 14:06:25 +0100

castor (2.0.0-17) unstable; urgency=low

  * Fix in the stored procedure to handle the case where DELETE, for example, is done on no entry but there is nevertheless a binded value for output : that value should be explicitely initialized in the procedure

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  4 Feb 2005 14:45:13 +0100

castor (2.0.0-16) unstable; urgency=low

  * New DB schema (improving in particular requestsToDo and al. queries)
  * Request Replier taking more than one fd at a time
  * Fault tolerance improvement in recaller/migrator
  * Floating point exception fix in rmnode when there is no xfs filesystem

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri,  4 Feb 2005 10:06:56 +0100

castor (2.0.0-15) unstable; urgency=low

  * In version 2.0.0-14, the correction factor on i/o stat monitoring was wrongly applied to the number of blocks we get from filesystem stats, instead of the computed rate

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed,  2 Feb 2005 00:43:04 +0100

castor (2.0.0-14) unstable; urgency=low

  * Fix in shared i/o stat monitoring

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  1 Feb 2005 23:54:29 +0100

castor (2.0.0-13) unstable; urgency=low

  * In rmnode, and in case of shared i/o stat (like on xfs), redistribute the read stats to filesystems taking into account only those that have (observed) opened streams

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  1 Feb 2005 22:47:17 +0100

castor (2.0.0-12) unstable; urgency=low

  * Fix in monitoring
  * Fix in bestFileSystemForJob() occi interface
  * Added STAGER_TIMEOUT in the stage api

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Tue,  1 Feb 2005 16:55:56 +0100

castor (2.0.0-11) unstable; urgency=low

  * Fix in job crontab

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 31 Jan 2005 12:04:27 +0100

castor (2.0.0-10) unstable; urgency=low

  * Move job output to /var/spool/job
  * Enabled dh_installcron
  * Optimization of some SQL queries

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 31 Jan 2005 11:59:16 +0100

castor (2.0.0-9) unstable; urgency=low

  * Fix in stagerJob.shell

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 30 Jan 2005 14:00:32 +0100

castor (2.0.0-8) unstable; urgency=low

  * Fix typo in PROTO2/job/stagerJob.c
  * Added PROTO2/PACKAGING.howto

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 30 Jan 2005 13:14:48 +0100

castor (2.0.0-7) unstable; urgency=low

  * Make resource monitoring and job use the file invariants when logging
  * Added few logs in DLF from rmmaster

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Sun, 30 Jan 2005 09:07:13 +0100

castor (2.0.0-6) unstable; urgency=low

  * Test

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Fri, 28 Jan 2005 10:49:04 +0100

castor (2.0.0-4) unstable; urgency=low

  * Test

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Mon, 24 Jan 2005 14:46:37 +0100

castor (2.0.0-0) unstable; urgency=low

  * Initial Release.

 -- Jean-Damien Durand <Jean-Damien.Durand@cern.ch>  Wed, 19 Jan 2005 14:53:30 +0100

