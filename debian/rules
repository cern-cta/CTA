#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Always exclude CVS so that we can build from a cvs workdir
export DH_ALWAYS_EXCLUDE=CVS


# Compat stuff with previous versions of dpkg
DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU 2>/dev/null)
DEB_HOST_ARCH_OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2>/dev/null)

# Take account of old dpkg-architecture output.
ifeq ($(DEB_HOST_ARCH_CPU),)
  DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)
  ifeq ($(DEB_HOST_ARCH_CPU),x86_64)
    DEB_HOST_ARCH_CPU := amd64
  endif
endif
ifeq ($(DEB_HOST_ARCH_OS),)
  DEB_HOST_ARCH_OS := $(subst -gnu,,$(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM))
  ifeq ($(DEB_HOST_ARCH_OS),gnu)
    DEB_HOST_ARCH_OS := hurd
  endif
endif

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	echo "Building *.install from *.install.perm files"
	(cd debian; for i in *.install.perm; do awk '{print $$2}' $${i} > `echo $${i} | sed 's/\.perm//g'`; done)
	find . -type f -exec touch {} \;
	$(MAKE) -f Makefile.ini Makefiles
	(PATH=$${PATH}:/usr/X11R6/bin; export PATH; which makedepend >& /dev/null; [ $$? -eq 0 ] && $(MAKE) depend)
	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)
	#docbook-to-man debian/castor.sgml > castor.1

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	-$(MAKE) -f Makefile.ini Makefiles
	-$(MAKE) clobber
	rm -rf $(CURDIR)/debian/castor
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/castor.
	mkdir -p $(CURDIR)/debian/castor/usr/bin
	mkdir -p $(CURDIR)/debian/castor/usr/sbin
ifeq ($(DEB_HOST_ARCH_CPU),amd64)
	mkdir -p $(CURDIR)/debian/castor/usr/lib64/rtcopy
	mkdir -p $(CURDIR)/debian/castor/usr/local/lsf/lib64
else
	mkdir -p $(CURDIR)/debian/castor/usr/lib/rtcopy
	mkdir -p $(CURDIR)/debian/castor/usr/local/lsf/lib
endif
	mkdir -p $(CURDIR)/debian/castor/usr/lib/perl/CASTOR
	mkdir -p $(CURDIR)/debian/castor/usr/include/shift
	mkdir -p $(CURDIR)/debian/castor/usr/share/man/man1
	mkdir -p $(CURDIR)/debian/castor/usr/share/man/man3
	mkdir -p $(CURDIR)/debian/castor/usr/share/man/man4
	mkdir -p $(CURDIR)/debian/castor/etc/castor
	mkdir -p $(CURDIR)/debian/castor/etc/castor/expert
	mkdir -p $(CURDIR)/debian/castor/etc/init.d
	mkdir -p $(CURDIR)/debian/castor/etc/sysconfig
	mkdir -p $(CURDIR)/debian/castor/usr/local/lsf/etc
	# Install CASTOR
	$(MAKE) install DESTDIR=$(CURDIR)/debian/castor
	$(MAKE) exportman DESTDIR=$(CURDIR)/debian/castor EXPORTMAN=$(CURDIR)/debian/castor/usr/share/man
	# Install policies
	(cd clips; ../imake/imake -I../config DESTDIR=$(CURDIR)/debian/castor; make install DESTDIR=$(CURDIR)/debian/castor)
	# Install example configuration files
	for i in $(CURDIR)/debian/*CONFIG; do install -o root -g st -m 640 $${i} $(CURDIR)/debian/castor/etc/castor/`basename $${i}`.example; done
	# Install example sysconfig files
	for i in `find $(CURDIR) -name "*.sysconfig"`; do install -o root -g bin -m 644 $${i} $(CURDIR)/debian/castor/etc/sysconfig/`basename $${i} | sed 's/\.sysconfig//g'`.example; done
	# Install the debian+redhat init script
	for i in $(CURDIR)/debian/*.init; do install -o root -g bin -m 755 $${i} $(CURDIR)/debian/castor/etc/init.d/`basename $${i} | sed 's/\.init//g'`; done
	# Install the debian+redhat package scriptlets
	for i in $(CURDIR)/debian/*.postinst; do install -o root -g bin -m 755 $${i} $(CURDIR)/debian/castor/usr/sbin/`basename $${i}`; done
	for i in $(CURDIR)/debian/*.postrm; do install -o root -g bin -m 755 $${i} $(CURDIR)/debian/castor/usr/sbin/`basename $${i}`; done
	for i in $(CURDIR)/debian/*.prerm; do install -o root -g bin -m 755 $${i} $(CURDIR)/debian/castor/usr/sbin/`basename $${i}`; done
	# Install the sample castor.conf
	install -o root -g bin -m 644 $(CURDIR)/debian/castor.conf $(CURDIR)/debian/castor/etc/castor/castor.conf.example
	# Install the recommended castor.conf for all nodes but tape servers
	install -o root -g bin -m 644 $(CURDIR)/debian/castor-allservicesbuttapeservers.conf $(CURDIR)/debian/castor/etc/castor/castor.conf

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
#	dh_installexamples
	dh_install --sourcedir=$(CURDIR)/debian/castor
#	dh_installmenu
#	dh_installdebconf	
	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
	dh_installinit --noscripts
	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
#	dh_strip
	dh_compress
#	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
ifeq ($(DEB_HOST_ARCH_CPU),amd64)
	dh_shlibdeps -l$(CURDIR)/debian/castor/usr/lib64
else
	dh_shlibdeps -l$(CURDIR)/debian/castor/usr/lib
endif
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
