#!/bin/sh
#
# Cupvdaemon         Start/Stop Cupvdaemon
#
# chkconfig: 345 68 37
# description: CUPV server daemon
#
# $Id: castor-upv-server.init,v 1.5 2005/05/18 07:45:01 jdurand Exp $
#
# @(#)$RCSfile: castor-upv-server.init,v $ $Revision: 1.5 $ $Date: 2005/05/18 07:45:01 $ CERN/IT/ADC/CA Jean-Damien Durand
#

#
## Try to guess about oracle environment - cross your fingers or use sysconfig
#
DBHOME=`which dbhome 2>/dev/null`
if [ -n "$DBHOME" ]; then
  export ORACLE_HOME=`dbhome CASTOR`
else
  # Cross your fingers
  export ORACLE_HOME=/oracle/product/castor
fi
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$ORACLE_HOME/lib
export PATH=${PATH}:${ORACLE_HOME}/bin

sysname=`uname -s`

# source function library
if [ -r /etc/rc.d/init.d/functions ]; then
	. /etc/rc.d/init.d/functions
	DAEMON=daemon
	FAILURE=failure
	ECHO_FAILURE=failure
	SUCCESS=success
	ECHO_SUCCESS=echo_success
	ECHO_END=echo
	if [ $sysname = "Linux" ]; then
		ECHOOPT=-n
	fi
else
	DAEMON=
	FAILURE=
	ECHO_FAILURE=
	SUCCESS=
	ECHO_SUCCESS=
	ECHOOPT=
	ECHO_END=
fi

RETVAL=0
prog="Cupvdaemon"
PIDFILE=/var/run/Cupvdaemon.pid
PIDDIR=/var/run
SUBSYS=/var/lock/subsys/Cupvdaemon
SUBSYSDIR=/var/lock/subsys
[ -z "$SILENTSTOP" ] && SILENTSTOP=0
CUPVDAEMON=/usr/bin/Cupvdaemon
CUPVSHUTDOWN=/usr/bin/Cupvshutdown
# Not yet supported
CUPVDAEMONLOGFILE=/var/log/Cupvdaemon
OPTIONS=""
SYSCONFIGCUPVDAEMON=/etc/sysconfig/Cupvdaemon

#
## Blindly attempt to create useful directories
#
[ ! -d $PIDDIR ] && mkdir -p $PIDDIR >& /dev/null
[ ! -d $SUBSYSDIR ] && mkdir -p $SUBSYSDIR >& /dev/null

if [ $sysname = "HP-UX" ]; then
	export UNIX95=1
fi
if [ $sysname = "SunOS" ]; then
	format4comm="fname"
else
	format4comm="comm"
fi

case "$1" in
  start)
	echo $ECHOOPT "Starting $prog: "
	if [ $sysname = "Linux" -a `whoami` = "root" ]; then
        netstat -ap | egrep '\*:56013|\*:Cupv' | grep LISTEN | grep Cupvdaemon > /dev/null
    else
        netstat -a  | egrep '\*:56013|\*:Cupv' | egrep 'LISTEN *$' > /dev/null
    fi
	# ps -eo ppid,$format4comm | egrep '^[ \t]+1 Cupvdaemon' > /dev/null
	if [ $? -eq 0 ]; then
		echo $ECHOOPT "Cupvdaemon already started: "
		[ -n "$FAILURE" ] && $FAILURE "Cupvdaemon already started: "
		RETVAL=1
	else
        if [ -r $SYSCONFIGCUPVDAEMON ]; then
            #
            ## Source the configuration
            #
            . $SYSCONFIGCUPVDAEMON
            if [ "${RUN_CUPVDAEMON}" != "yes" ]; then
                echo $ECHOOPT "$SYSCONFIGCUPVDAEMON says NO: "
                [ -n "$FAILURE" ] && $FAILURE "$SYSCONFIGCUPVDAEMON says NO: "
                RETVAL=1
            fi
            if [ -n "${ULIMIT_N}" ]; then
                ulimit -n ${ULIMIT_N}
            fi
        fi
        if [ $RETVAL -eq 0 ]; then
            #
            ## Because we might generate a core file
            ## We explicitely chdir in the workdir
            #
	    cd /var/spool/upv
            $DAEMON $CUPVDAEMON $OPTIONS
            if [ $? -eq 0 ]; then
                [ -d $SUBSYSDIR ] && touch $SUBSYS
                if [ -d $PIDDIR ]; then
                    pid=`ps -eo pid,ppid,$format4comm | grep " 1 Cupvdaemon" | awk '{print $1}'`
                    # The point of $PIDFILE is that it kills only
                    # the master daemon.
                    rm -f $PIDFILE
		    if [ -n "$pid" ]; then
			echo $pid > $PIDFILE
			RETVAL=0
		    else
			echo $ECHOOPT "Cupvdaemon not started: "
			[ -n "$FAILURE" ] && $FAILURE "Cupvdaemon not started: "
			RETVAL=1
		    fi
                else
                  RETVAL=0
		fi
            else
                echo $ECHOOPT "Cupvdaemon not started: "
                [ -n "$FAILURE" ] && $FAILURE "Cupvdaemon not started: "
                RETVAL=1
            fi
        fi
	fi
	$ECHO_END
	;;
  stop)
    UPV_HOST=`hostname`
    export UPV_HOST
	if [ -f $PIDFILE ]; then
		[ $SILENTSTOP -eq 0 ] && echo $ECHOOPT "Stopping $prog: "
        if [ -x $CUPVSHUTDOWN ]; then
            if [ $SILENTSTOP -eq 0 ]; then
                $CUPVSHUTDOWN -f
            else
                $CUPVSHUTDOWN -f >& /dev/null
            fi
            RETVAL=$?
            if [ $RETVAL -ne 0 ]; then
                if [ $SILENTSTOP -eq 0 ]; then
                    kill -2 -`cat $PIDFILE`
                else
                    kill -2 -`cat $PIDFILE` >& /dev/null
                fi
                RETVAL=$?
            fi
        else
            if [ $SILENTSTOP -eq 0 ]; then
                kill -2 -`cat $PIDFILE`
            else
                kill -2 -`cat $PIDFILE` >& /dev/null
            fi
            RETVAL=$?
        fi
        if [ $RETVAL -eq 0 ]; then
            rm -f $PIDFILE
        fi
	else
		# Cupvdaemon might have been started by hand
		pid=`ps -eo pid,ppid,$format4comm | grep " 1 Cupvdaemon" | awk '{print $1}'`
		if [ -n "$pid" ]; then
			[ $SILENTSTOP -eq 0 ] && echo $ECHOOPT "Stopping $prog: "
            if [ -x $CUPVSHUTDOWN ]; then
                if [ $SILENTSTOP -eq 0 ]; then
                    $CUPVSHUTDOWN -f
                else
                    $CUPVSHUTDOWN -f >& /dev/null
                fi
                RETVAL=$?
                if [ $RETVAL -ne 0 ]; then
                    if [ $SILENTSTOP -eq 0 ]; then
                        kill -2 -$pid
                    else
                        kill -2 -$pid >& /dev/null
                    fi
                    RETVAL=$?
                fi
            else
                if [ $SILENTSTOP -eq 0 ]; then
                    kill -2 -$pid
                else
                    kill -2 -$pid >& /dev/null
                fi
                RETVAL=$?
            fi
		else
			[ $SILENTSTOP -eq 0 ] && echo $ECHOOPT "Cupvdaemon already stopped: "
			[ $SILENTSTOP -eq 0 -a -n "$FAILURE" ] && $FAILURE "Cupvdaemon already stopped: "
 			RETVAL=1
		fi
	fi
	if [ $SILENTSTOP -eq 0 -a $sysname = "Linux" ]; then
		if [ $RETVAL -eq 0 ]; then
 			$ECHO_SUCCESS
		else
 			$ECHO_FAILURE
		fi
	fi
	[ -d $SUBSYSDIR ] && rm -f $SUBSYS
	[ $SILENTSTOP -eq 0 -a -n "$ECHO_END" ] && $ECHO_END
    #
    ## Basically: if SILENTSTOP is not 0 when we never print something
    ## But if the stop is successful... One might want to see stop: OK
    ## anyway ?
    #
	if [ $SILENTSTOP -ne 0 -a $RETVAL -eq 0 ]; then
        echo $ECHOOPT "Stopping $prog: "
        [ $sysname = "Linux" ] && $ECHO_SUCCESS
        [ -n "$ECHO_END" ] && $ECHO_END
    fi
	;;
  restart)
	$0 stop
	if [ $? -eq 0 -o $SILENTSTOP -eq 0 ]; then
		$0 start
		RETVAL=$?
	else
        #
        ## It is legal to return zero it if was
        ## a conditional restart
        #
        if [ $SILENTSTOP -eq 0 ]; then
            RETVAL=1
        else
            RETVAL=0
        fi
	fi
	;;
  condrestart)
	SILENTSTOP=1
    export SILENTSTOP
	$0 restart
    RETVAL=$?
	;;
  status)
	pid=`ps -eo pid,ppid,$format4comm | grep " 1 Cupvdaemon" | awk '{print $1}'`
	if [ -n "$pid" ]; then
		echo $ECHOOPT "Cupvdaemon (pid $pid) is running..."
		$ECHO_SUCCESS
		$ECHO_END
	else
		if [ -f $PIDFILE ]; then
			pid=`head -1 $PIDFILE`
			if [ "$pid" != "" ] ; then
				echo $ECHOOPT "Cupvdaemon dead but pid file exists"
				$ECHO_FAILURE
				$ECHO_END
			fi
		else
			if [ -f $SUBSYS ]; then
				echo $ECHOOPT "Cupvdaemon dead but subsys ($SUBSYS) locked"
			else
				echo $ECHOOPT "Cupvdaemon is stopped"
			fi
			$ECHO_FAILURE
			$ECHO_END
		fi
	fi
	;;
  *)
	echo "Usage: $0 {start|stop|status|restart|condrestart}"
	RETVAL=1
	;;
esac

exit $RETVAL
