COMM       @(#)Imakefile,v 1.47 2006/02/13 12:57:46 CERN IT-PDP/DM Jean-Philippe Baud
COMM
COMM  Copyright (C) 2000-2002 by CERN/IT/PDP/DM
COMM  All rights reserved
COMM

COMM 		Make CASTOR shared libraries           GENERIC

#include <Library.tmpl>

LIBDIR = InstallLibDir

COMM Archive symbol table entry name
#if __osf__ && __alpha
SYMTABNAM = ________64ELEL_
#else
SYMTABNAM = __.SYMDEF
#endif

COMM Libraries to include in SharedLibraryTargetName(shift)
LIBRARIES0 = $(COMMONLIB) $(MSGLIB) $(STGLIB) $(SECURITYLIB) $(DLFLIB) $(TAPELIB) $(DBLIB) $(MONITORLIB) $(RMCLIB) $(EXPERTLIB)
SHLIBREQLIBS0 = $(SHLIBREQLIBS) -L../../$(COMMONCPPDIR) -lcastorClient -L../../$(NSDIR) -lcastorns -L../../$(RFIODIR) -lcastorrfio -L../../$(UPVDIR) -lcastorupv -L../../$(VMGRDIR) -lcastorvmgr -L../../$(RTCOPYDIR) -lcastorrtcopy -L../../$(VDQMDIR) -lcastorvdqm

LIBRARIES1 = $(RHORALIB)
SHLIBREQLIBS1 = $(SHLIBREQLIBS) -L$(ORACLE_HOME)/lib -locci -lclntsh -L.. -lshift
#if UseOraCDBC
SHLIBREQLIBS1 += -lcastorCnvs
#endif

LIBRARIES2 = $(MONITORCPPLIB)
SHLIBREQLIBS2 = $(SHLIBREQLIBS) -L.. -lshift

LIBRARIES3 = $(CNVSLIB)
SHLIBREQLIBS3 = $(SHLIBREQLIBS)

LIBRARIES4 = $(RHMYLIB)
SHLIBREQLIBS4 = $(SHLIBREQLIBS) -lmysqlpp -L.. -lshift -lcastorCnvs

LIBRARIES5 = $(RHPGLIB)
SHLIBREQLIBS5 = $(SHLIBREQLIBS) -L.. -lshift -lcastorCnvs

LIBRARIES6 = $(VDQMORALIB)
SHLIBREQLIBS6 = $(SHLIBREQLIBS) -L$(ORACLE_HOME)/lib -locci -lclntsh -L.. -lshift -lcastorCommonOra

LIBRARIES7 = $(INFOPOLICYLIB)
CASTOR_HOME=../
SHLIBREQLIBS7 = $(SHLIBREQLIBS) -L.. -lshift -lcastorCnvs $(PYTHONLIBS) $(PYTHONINC) -L$(ORACLE_HOME)/lib -locci

ALL0=SharedLibraryTargetName(shift) SharedLibraryTargetName(castorClient) SharedLibraryTargetName(castorns) SharedLibraryTargetName(castorrfio) SharedLibraryTargetName(castorupv) SharedLibraryTargetName(castorvmgr) SharedLibraryTargetName(castorrtcopy) SharedLibraryTargetName(castorvdqm)

#if BuildOraCpp
#if UseOraCDBC
ALL1=SharedLibraryTargetName(castorCnvs)
#endif
ALL1+=SharedLibraryTargetName(castorCommonOra)
#endif

#if BuildRmMasterCpp || BuildRmNodeCpp
ALL2=SharedLibraryTargetName(castorMonitor)
#endif

#if BuildMyCpp
ALL4=SharedLibraryTargetName(castorCnvs) SharedLibraryTargetName(castorCommonMysql)
#endif

#if BuildPgCpp
ALL5=SharedLibraryTargetName(castorCnvs) SharedLibraryTargetName(castorCommonPgsql)
#endif

#if BuildVDQMCpp
ALL6=SharedLibraryTargetName(castorVdqmOra)
#endif

#if BuildInfoPolicyLibrary 
ALL7=SharedLibraryTargetName(castorInfoPolicy)
#endif

#if BuildSecurity

ALLSEC=SharedLibraryTargetName(Csec_plugin_ID)
INSTALLSEC=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_ID))
EXPORTSEC=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_ID))

#if UseGSI
ALLSEC+= SharedLibraryTargetName(Csec_plugin_GSI)
INSTALLSEC+=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_GSI))
EXPORTSEC+=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_GSI))
#endif

#if UseKRB5
ALLSEC+= SharedLibraryTargetName(Csec_plugin_KRB5)
INSTALLSEC+=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_KRB5))
EXPORTSEC+=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_KRB5))
#endif

#if UseKRB4
ALLSEC+= SharedLibraryTargetName(Csec_plugin_KRB4)
INSTALLSEC+=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_KRB4))
EXPORTSEC+=FileName($(LIBDIR),SharedLibraryTargetName(Csec_plugin_KRB4))
#endif

#endif

all: $(ALL0) $(ALL1) $(ALL2) $(ALL4) $(ALL5) $(ALL6) $(ALL7) $(ALLSEC)  

INSTALL0=FileName($(LIBDIR),SharedLibraryTargetName(shift))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorClient))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorns))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorrfio))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorupv))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorvmgr))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorrtcopy))
INSTALL0+=FileName($(LIBDIR),SharedLibraryTargetName(castorvdqm))
#if BuildOraCpp
INSTALL1=FileName($(LIBDIR),SharedLibraryTargetName(castorCommonOra))
#if UseOraCDBC
INSTALL1+=FileName($(LIBDIR),SharedLibraryTargetName(castorCnvs))
#endif
#endif
#if BuildRmMasterCpp || BuildRmNodeCpp
INSTALL2=FileName($(LIBDIR),SharedLibraryTargetName(castorMonitor))
#endif
#if BuildMyCpp
INSTALL4=FileName($(LIBDIR),SharedLibraryTargetName(castorCommonMysql)) FileName($(LIBDIR),SharedLibraryTargetName(castorCnvs))
#endif
#if BuildPgCpp
INSTALL5=FileName($(LIBDIR),SharedLibraryTargetName(castorCommonPgsql)) FileName($(LIBDIR),SharedLibraryTargetName(castorCnvs))
#endif
#if BuildVDQMCpp
INSTALL6=FileName($(LIBDIR),SharedLibraryTargetName(castorVdqmOra))
#endif
#if BuildInfoPolicyLibrary
INSTALL7=FileName($(LIBDIR),SharedLibraryTargetName(castorInfoPolicy))
#endif

install: $(LIBDIR) $(INSTALL0) $(INSTALL1) $(INSTALL2) $(INSTALL4) $(INSTALL5) $(INSTALL6) $(INSTALL7) $(INSTALLSEC)

EXPORT0=$(EXPORTLIB)/SharedLibraryTargetName(shift)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorClient)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorns)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorrfio)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorupv)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorvmgr)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorrtcopy)
EXPORT0+=$(EXPORTLIB)/SharedLibraryTargetName(castorvdqm)
#if BuildOraCpp
EXPORT1=$(EXPORTLIB)/SharedLibraryTargetName(castorCommonOra)
#if UseOraCDBC
EXPORT1+=$(EXPORTLIB)/SharedLibraryTargetName(castorCnvs)
#endif
#endif
#if BuildRmMasterCpp || BuildRmNodeCpp
EXPORT2=$(EXPORTLIB)/SharedLibraryTargetName(castorMonitor)
#endif
#if BuildMyCpp
EXPORT4=$(EXPORTLIB)/SharedLibraryTargetName(castorCommonMysql) $(EXPORTLIB)/SharedLibraryTargetName(castorCnvs)
#endif
#if BuildPgCpp
EXPORT5=$(EXPORTLIB)/SharedLibraryTargetName(castorCommonPgsql) $(EXPORTLIB)/SharedLibraryTargetName(castorCnvs)
#endif
#if BuildVDQMCpp
EXPORT6=$(EXPORTLIB)/SharedLibraryTargetName(castorVdqmOra)
#endif
#if BuildInfoPolicyLibrary
EXPORT7=$(EXPORTLIB)/SharedLibraryTargetName(castorInfoPolicy)
#endif
export: $(EXPORT0) $(EXPORT1) $(EXPORT2) $(EXPORT4) $(EXPORT5) $(EXPORT6) $(EXPORT7) $(EXPORTSEC)

exportman: 

exportshr: 

libshift.sl libshift.so: $(LIBRARIES0) libcastorClient.so libcastorns.so libcastorrfio.so libcastorupv.so libcastorvmgr.so libcastorrtcopy.so libcastorvdqm.so
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibshift.so
	@mkdir tmplibshift.so
	@for i in $(LIBRARIES0) ;\
	do (cd tmplibshift.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libshift.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS0)

libcastorClient.sl libcastorClient.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(COMMONCPPDIR)/SharedLibraryTargetName(castorClient) ./SharedLibraryTargetName(castorClient)

libcastorns.sl libcastorns.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(NSDIR)/SharedLibraryTargetName(castorns) ./SharedLibraryTargetName(castorns)

libcastorrfio.sl libcastorrfio.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(RFIODIR)/SharedLibraryTargetName(castorrfio) ./SharedLibraryTargetName(castorrfio)

libcastorupv.sl libcastorupv.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(UPVDIR)/SharedLibraryTargetName(castorupv) ./SharedLibraryTargetName(castorupv)

libcastorvmgr.sl libcastorvmgr.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(VMGRDIR)/SharedLibraryTargetName(castorvmgr) ./SharedLibraryTargetName(castorvmgr)

libcastorrtcopy.sl libcastorrtcopy.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(RTCOPYDIR)/SharedLibraryTargetName(castorrtcopy) ./SharedLibraryTargetName(castorrtcopy)

libcastorvdqm.sl libcastorvdqm.so: $(LIBRARIES0) $(SLIBRARIES0)
	./makeshlib.sh preinstall ../$(VDQMDIR)/SharedLibraryTargetName(castorvdqm) ./SharedLibraryTargetName(castorvdqm)

libcastorCommonOra.so: $(LIBRARIES1) SharedLibraryTargetName(shift) SharedLibraryTargetName(castorCnvs)
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibcastorCommonOra.so
	@mkdir tmplibcastorCommonOra.so
	@for i in $(LIBRARIES1) ;\
	do (cd tmplibcastorCommonOra.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorCommonOra.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS1)

libcastorCnvs.so: $(LIBRARIES3)
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibcastorCnvs.so
	@mkdir tmplibcastorCnvs.so
	for i in $(LIBRARIES3) ;\
	do (cd tmplibcastorCnvs.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorCnvs.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS3)

libcastorCommonMysql.so: $(LIBRARIES4) SharedLibraryTargetName(shift) SharedLibraryTargetName(castorCnvs)
	@echo " making $@ in `pwd`"
	@-rm -rf tmp
	@mkdir tmp
	@for i in $(LIBRARIES4) ;\
	do (cd tmp; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorCommonMysql.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS4)

libcastorCommonPgsql.so: $(LIBRARIES5) SharedLibraryTargetName(shift) SharedLibraryTargetName(castorCnvs)
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibcastorCommonPgsql.so
	@mkdir tmplibcastorCommonPgsql.so
	@for i in $(LIBRARIES5) ;\
	do (cd tmplibcastorCommonPgsql.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorCommonPgsql.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS5)

libcastorVdqmOra.so: $(LIBRARIES6) SharedLibraryTargetName(shift) SharedLibraryTargetName(castorCommonOra)
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibcastorVdqmOra.so
	@mkdir tmplibcastorVdqmOra.so
	@for i in $(LIBRARIES6) ;\
	do (cd tmplibcastorVdqmOra.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorVdqmOra.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS6)

libcastorMonitor.so: $(LIBRARIES2) SharedLibraryTargetName(shift)
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibcastorMonitor.so
	@mkdir tmplibcastorMonitor.so
	@for i in $(LIBRARIES2) ;\
	do (cd tmplibcastorMonitor.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorMonitor.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS2)

libcastorInfoPolicy.so: $(LIBRARIES7) SharedLibraryTargetName(shift) SharedLibraryTargetName(castorCnvs)
	@echo " making $@ in `pwd`"
	@-rm -rf tmplibcastorInfoPolicy.so
	@mkdir tmplibcastorInfoPolicy.so
	@for i in $(LIBRARIES7) ;\
	do (cd tmplibcastorInfoPolicy.so; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	./makeshlib.sh '$(CXX)' libcastorInfoPolicy.so $(LDFLAGS) $(SHLIBLDFLAGS) $(SHLIBREQLIBS7)

shift.dll:	$(LIBRARIES0)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorCommonOra.dll:	$(LIBRARIES1)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorMonitor.dll:	$(LIBRARIES2)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorCnvs.dll:	$(LIBRARIES3)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorCommonMysql.dll:	$(LIBRARIES4)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorCommonPgsql.dll:	$(LIBRARIES5)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorVdqmOra.dll:	$(LIBRARIES6)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorInfoPolicy.dll:	$(LIBRARIES7)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

MakeDir($(LIBDIR),root,bin,0755)

InstallSharedLibrary(shift,,,$(LIBDIR))
InstallSharedLibrary(castorClient,,,$(LIBDIR))
InstallSharedLibrary(castorns,,,$(LIBDIR))
InstallSharedLibrary(castorrfio,,,$(LIBDIR))
InstallSharedLibrary(castorupv,,,$(LIBDIR))
InstallSharedLibrary(castorvmgr,,,$(LIBDIR))
InstallSharedLibrary(castorrtcopy,,,$(LIBDIR))
InstallSharedLibrary(castorvdqm,,,$(LIBDIR))
InstallSharedLibrary(castorCnvs,,,$(LIBDIR))
InstallSharedLibrary(castorCommonOra,,,$(LIBDIR))
InstallSharedLibrary(castorCommonMysql,,,$(LIBDIR))
InstallSharedLibrary(castorCommonPgsql,,,$(LIBDIR))
InstallSharedLibrary(castorVdqmOra,,,$(LIBDIR))
InstallSharedLibrary(castorMonitor,,,$(LIBDIR))
InstallSharedLibrary(castorInfoPolicy,,,$(LIBDIR))

InstallSharedLibrary(shift,,,$(EXPORTLIB))
InstallSharedLibrary(castorClient,,,$(EXPORTDIR))
InstallSharedLibrary(castorns,,,$(EXPORTDIR))
InstallSharedLibrary(castorrfio,,,$(EXPORTDIR))
InstallSharedLibrary(castorupv,,,$(EXPORTDIR))
InstallSharedLibrary(castorvmgr,,,$(EXPORTDIR))
InstallSharedLibrary(castorrtcopy,,,$(EXPORTDIR))
InstallSharedLibrary(castorvdqm,,,$(EXPORTDIR))
InstallSharedLibrary(castorCnvs,,,$(EXPORTLIB))
InstallSharedLibrary(castorCommonOra,,,$(EXPORTLIB))
InstallSharedLibrary(castorCommonMysql,,,$(EXPORTLIB))
InstallSharedLibrary(castorCommonPgsql,,,$(EXPORTLIB))
InstallSharedLibrary(castorVdqmOra,,,$(EXPORTLIB))
InstallSharedLibrary(castorMonitor,,,$(EXPORTLIB))
InstallSharedLibrary(castorInfoPolicy,,,$(EXPORTLIB))

install.man:

#if _WIN32
clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean *.so*)
#else
clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean *.so*)
	-@rm -rf tmp > /dev/null 2>&1
#endif
clobber:        clean

Makefiles:

MakeDepLibrary(common,common)

MakeDepLibrary(msg,msg)

MakeDepLibrary(client/src/stager,stager)

MakeDepSharedLibrary(castor,castorClient)

MakeDepSharedLibrary(ns,castorns)

MakeDepSharedLibrary(rfio,castorrfio)

MakeDepSharedLibrary(upv,castorupv)

MakeDepSharedLibrary(vmgr,castorvmgr)

MakeDepSharedLibrary(rtcopy,castorrtcopy)

MakeDepSharedLibrary(vdqm,castorvdqm)

MakeDepLibrary(castor/proto,castorProto)

MakeDepLibrary(dlf,dlf)

MakeDepLibrary(tape,tape)

#if UseOraCDBC || UseMySql || UsePgSql
MakeDepLibrary(castor/db/cnv,castorCnvs)
#endif

MakeDepLibrary(castor/db/newora,castorCommonOra)

MakeDepLibrary(castor/db/mysql,castorCommonMysql)

MakeDepLibrary(castor/db/pgsql,castorCommonPgsql)

MakeDepLibrary(castor/db/newora,castorVdqmOra)

MakeDepLibrary(expert,expert)

MakeDepLibrary(db,db)

MakeDepLibrary(monitor,monitor)

#if BuildRmMasterCpp || BuildRmNodeCpp 
MakeDepLibrary(castor/monitoring,castorMonitor)
#endif

#if BuildMigHunterDaemon || BuildRecHandlerDaemon || BuildInfoPolicyLibrary
MakeDepLibrary(castor/infoPolicy,castorInfoPolicy)
#endif

MakeDepLibrary(rmc,rmc)

#if BuildSecurity
MakeDepLibrary(security,security)

MakeDepSharedLibrary(security,Csec_plugin_ID)

SharedLibraryTargetName(Csec_plugin_ID): DepSharedLibraryTargetName(security,Csec_plugin_ID)
		$(CP) DepSharedLibraryTargetName(security,Csec_plugin_ID) ../shlib

#if UseGSI
MakeDepSharedLibrary(security,Csec_plugin_GSI)

SharedLibraryTargetName(Csec_plugin_GSI): DepSharedLibraryTargetName(security,Csec_plugin_GSI)
		$(CP) DepSharedLibraryTargetName(security,Csec_plugin_GSI) ../shlib
#endif
#if UseKRB5
MakeDepSharedLibrary(security,Csec_plugin_KRB5)

SharedLibraryTargetName(Csec_plugin_KRB5): DepSharedLibraryTargetName(security,Csec_plugin_KRB5)
		$(CP) DepSharedLibraryTargetName(security,Csec_plugin_KRB5) ../shlib

#endif
#if UseKRB4

MakeDepSharedLibrary(security,Csec_plugin_KRB4)

SharedLibraryTargetName(Csec_plugin_KRB4): DepSharedLibraryTargetName(security,Csec_plugin_KRB4)
		$(CP) DepSharedLibraryTargetName(security,Csec_plugin_KRB4) ../shlib

#endif
#endif

FORCE:

