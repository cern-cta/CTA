COMM       @(#)$RCSfile: Imakefile,v $ $Revision: 1.23 $ $Date: 2004/07/19 13:05:32 $ CERN IT-PDP/DM Jean-Philippe Baud
COMM
COMM  Copyright (C) 2000-2002 by CERN/IT/PDP/DM
COMM  All rights reserved
COMM

COMM 		Make CASTOR shared libraries           GENERIC

#include <Library.tmpl>

LIB = InstallLibDir

COMM Archive symbol table entry name
#if __osf__ && __alpha
SYMTABNAM = ________64ELEL_
#else
SYMTABNAM = __.SYMDEF
#endif

COMM Libraries to include in SharedLibraryTargetName(shift)
LIBRARIES0 = $(COMMONLIB) $(RFIOLIB) $(SYSREQLIB) $(HPSSLIB) $(NSLIB) $(STGLIB) $(VMGRLIB) $(UPVLIB) $(RHCLIENTLIB) $(SECURITYLIB) $(RTCOPYLIB) $(VDQMLIB) $(DLFLIB) $(TAPELIB) $(DBLIB) $(MONITORLIB) $(EXPERTLIB)
LIBRARIES1 = $(RHORALIB)
SHLIBREQLIBS1 = $(SHLIBREQLIBS) -L$(ORACLE_HOME)/lib -locci -lclntsh -L . -lshift
LIBRARIES2 = $(RHPROTOLIB)
SHLIBREQLIBS2 = $(SHLIBREQLIBS) -L. -lshift

ALL0=SharedLibraryTargetName(shift)
#if BuildOraCpp
ALL1=SharedLibraryTargetName(castorCommonOra)
#endif
#if BuildProtoCppStager
ALL2=SharedLibraryTargetName(castorProto)
#endif

#if BuildSecurity

ALLSEC=DepSharedLibraryTargetName(security,Csec_plugin_ID)

#if UseGSI
ALLSEC+= DepSharedLibraryTargetName(security,Csec_plugin_GSI)

#endif

#if UseKRB5
ALLSEC+= DepSharedLibraryTargetName(security,Csec_plugin_KRB5)

#endif

#if UseKRB4
ALLSEC+= DepSharedLibraryTargetName(security,Csec_plugin_KRB4)

#endif

#endif

all:    $(ALL0) $(ALL1) $(ALL2) $(ALLSEC)

INSTALL0=FileName($(LIB),SharedLibraryTargetName(shift))
#if BuildOraCpp
INSTALL1=FileName($(LIB),SharedLibraryTargetName(castorCommonOra))
#endif
#if BuildProtoCppStager
INSTALL2=FileName($(LIB),SharedLibraryTargetName(castorProto))
#endif

install: $(LIB) $(INSTALL0) $(INSTALL1) $(INSTALL2)

EXPORT0=$(EXPORTLIB)/SharedLibraryTargetName(shift)
#if BuildOraCpp
EXPORT1=$(EXPORTLIB)/SharedLibraryTargetName(castorCommonOra)
#endif
#if BuildProtoCppStager
EXPORT2=$(EXPORTLIB)/SharedLibraryTargetName(castorProto)
#endif

export: $(EXPORT0) $(EXPORT1) $(EXPORT2)

exportman: 

exportshr: 

libshift.sl libshift.so:     $(LIBRARIES0)
	@echo " making $@ in `pwd`"
	@-rm -rf tmp
	@mkdir tmp
	@for i in $(LIBRARIES0) ;\
	do (cd tmp; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	@(cd tmp; $(CXX) $(SHLIBLDFLAGS) -o ../$@ *.o $(SHLIBREQLIBS))
	@-rm -rf tmp

libcastorCommonOra.so: $(LIBRARIES1)
	@echo " making $@ in `pwd`"
	@-rm -rf tmp
	@mkdir tmp
	@for i in $(LIBRARIES1) ;\
	do (cd tmp; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	@(cd tmp; $(CXX) $(SHLIBLDFLAGS) -o ../$@ *.o $(SHLIBREQLIBS1))
	@-rm -rf tmp

libcastorProto.so: $(LIBRARIES2)
	@echo " making $@ in `pwd`"
	@-rm -rf tmp
	@mkdir tmp
	@for i in $(LIBRARIES2) ;\
	do (cd tmp; $(AR) x ../$$i; rm -f $(SYMTABNAM)) done
	@(cd tmp; $(CXX) $(SHLIBLDFLAGS) -o ../$@ *.o $(SHLIBREQLIBS2))
	@-rm -rf tmp

shift.dll:	$(LIBRARIES0)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorCommonOra.dll:	$(LIBRARIES1)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

libcastorProto.dll:	$(LIBRARIES2)
	@echo  making $@ in CurDir
	link /dll /noentry /nologo /out:$@ $**

MakeDir($(LIB),root,bin,0755)

InstallSharedLibrary(shift,__CASTOR_VERSION__,$(LIB))
InstallSharedLibrary(castorCommonOra,__CASTOR_VERSION__,$(LIB))
InstallSharedLibrary(castorProto,__CASTOR_VERSION__,$(LIB))

InstallSharedLibrary(shift,__CASTOR_VERSION__,$(EXPORTLIB))
InstallSharedLibrary(castorCommonOra,__CASTOR_VERSION__,$(EXPORTLIB))
InstallSharedLibrary(castorProto,__CASTOR_VERSION__,$(EXPORTLIB))

install.man:

#if _WIN32
clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean)
#else
clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean)
	-@rm -rf tmp > /dev/null 2>&1
#endif
clobber:        clean

Makefiles:

MakeDepLibrary(common,common)

MakeDepLibrary(rfio,rfio)

MakeDepLibrary(sysreq,sysreq)

#if BuildHpssClient
MakeDepLibrary(hpss,hpss_common)
#endif

MakeDepLibrary(ns,ns)

MakeDepLibrary(stage,stage)

MakeDepLibrary(vmgr,vmgr)

MakeDepLibrary(upv,upv)

MakeDepLibrary(castor,castorClient)

MakeDepLibrary(castor/proto,castorProto)

MakeDepLibrary(rtcopy,rtcpapi)

MakeDepLibrary(vdqm,vdqmapi)

MakeDepLibrary(dlf,dlf)

MakeDepLibrary(tape,tape)

MakeDepLibrary(castor/db/ora,castorCommonOra)

MakeDepLibrary(expert,expert)

MakeDepLibrary(db,db)

MakeDepLibrary(monitor,monitor)

#if BuildSecurity
MakeDepLibrary(security,security)
MakeDepSharedLibrary(security,Csec_plugin_ID)
#if UseGSI
MakeDepSharedLibrary(security,Csec_plugin_GSI)
#endif
#if UseKRB5
MakeDepSharedLibrary(security,Csec_plugin_KRB5)
#endif
#if UseKRB4
MakeDepSharedLibrary(security,Csec_plugin_KRB4)
#endif
#endif


FORCE:

