CREATE TRIGGER `TAPE_POOL_IS_ENCRYPTED_BOOL_CK_BEFORE_INSERT` BEFORE INSERT ON `TAPE_POOL`
  FOR EACH ROW
  BEGIN
    IF new.IS_ENCRYPTED NOT IN (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE_POOL.IS_ENCRYPTED should be 0 or 1';
    END IF;
  END;

CREATE TRIGGER `TAPE_POOL_IS_ENCRYPTED_BOOL_CK_BEFORE_UPDATE` BEFORE UPDATE ON `TAPE_POOL`
  FOR EACH ROW
  BEGIN
    IF new.IS_ENCRYPTED NOT IN (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE_POOL.IS_ENCRYPTED should be 0 or 1';
    END IF;
  END;

CREATE TRIGGER `ARCHIVE_ROUTE_COPY_NB_GT_ZERO_BEFORE_INSERT` BEFORE INSERT ON `ARCHIVE_ROUTE`
  FOR EACH ROW
  BEGIN
    IF new.COPY_NB <= 0 THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'ARCHIVE_ROUTE.COPY_NB should be greater than 0';
    END IF;
  END;

CREATE TRIGGER `ARCHIVE_ROUTE_COPY_NB_GT_ZERO_BEFORE_UPDATE` BEFORE UPDATE ON `ARCHIVE_ROUTE`
  FOR EACH ROW
  BEGIN
    IF new.COPY_NB <= 0 THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'ARCHIVE_ROUTE.COPY_NB should be greater than 0';
    END IF;
  END;

CREATE TRIGGER `CHECK_TAPE_BEFORE_INSERT` BEFORE INSERT ON `TAPE`
  FOR EACH ROW
  BEGIN
    IF new.IS_DISABLED not in (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE.IS_DISABLED should be 0 or 1';       
    END IF;
    IF new.IS_FULL not in (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE.IS_FULL should be 0 or 1';       
    END IF;
    IF new.LBP_IS_ON not in (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE.LBP_IS_ON should be 0 or 1';       
    END IF;
  END;

CREATE TRIGGER `CHECK_TAPE_BEFORE_UPDATE` BEFORE UPDATE ON `TAPE`
  FOR EACH ROW
  BEGIN
    IF new.IS_DISABLED not in (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE.IS_DISABLED should be 0 or 1';       
    END IF;
    IF new.IS_FULL not in (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE.IS_FULL should be 0 or 1';       
    END IF;
    IF new.LBP_IS_ON not in (0,1) THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE.LBP_IS_ON should be 0 or 1';       
    END IF;
  END;

CREATE TRIGGER `TAPE_FILE_COPY_NB_GT_ZERO_BEFORE_INSERT` BEFORE INSERT ON `TAPE_FILE`
  FOR EACH ROW
  BEGIN
    IF new.COPY_NB <= 0 THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE_FILE.COPY_NB should be greater than 0';
    END IF;
  END;

CREATE TRIGGER `TAPE_FILE_COPY_NB_GT_ZERO_BEFORE_UPDATE` BEFORE UPDATE ON `TAPE_FILE`
  FOR EACH ROW
  BEGIN
    IF new.COPY_NB <= 0 THEN
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'TAPE_FILE.COPY_NB should be greater than 0';
    END IF;
  END;





