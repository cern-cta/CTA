COMM
COMM Imakefile,v 1.26 2005/10/17 11:38:52 CERN IT-PDP/DM Olof Barring
COMM

COMM
COMM Copyright (C) 1999-2001 by CERN/IT/PDP/DM
COMM  All rights reserved
COMM

COMM         Make RTCOPY API library and server

COMM
COMM Define the remote tape copy daemon log file.
COMM
SPOOL = RtcopySpool
LOGFILE = $(SPOOL)/rtcopyd.log

COMM
COMM Define the working directory of 
COMM the remote tape copy jobs.
COMM
RTCOPYWORKDIR = RtcopyWorkDir

COMM
COMM Define the file indicating that more
COMM tape request should be submit on the
COMM server.
COMM
NOMORETAPES = OperatorDir.nomoretapes

COMM
COMM Define the file indicating the hosts
COMM authorized to use remotely rtcopy server
COMM 
AUTHORIZEDHOSTS = AuthorizedHosts

COMM
COMM Define CASTOR Name server root path name to prevent
COMM tpread/tpwrite request to/from HSM files
COMM
NS_ROOT = NsRoot

COMM
COMM Set this flag to -O for optimization, or -g for debug
COMM
CCOPTIM = -g

#if BuildVdqmLibrary
VDQMFLG = -DVDQM
#endif

#if BuildTapeLibrary
CTAPEFLG = -DCTAPE
#else
CTAPEFLG = -DCTAPE_DUMMIES
#endif

OPSGRP = OperatorGid

ACCTON= -DACCTON
SACCTDIR = SacctDir
SACCTFILE = $(SACCTDIR)/sacct
ACCTFILE = -DACCTFILE=\"$(SACCTFILE)\"
ERRLISTDIR = InstallLibDir/rtcopy
ERRLISTFILE = $(ERRLISTDIR)/err_messages
ESTATD = $(EXPORTSHR)/lib/rtcopy/err_messages
RTCOPYERRLIST = -DRTCOPYERRLIST=\"$(ERRLISTFILE)\"

SCONFIGFILE = ShiftConfigFile
CONFIGFILE = -DCONFIGFILE=\"$(SCONFIGFILE)\"

TPCONFIGFILE = TapeConfigFile
TPCONFIG = -DTPCONFIG=\"$(TPCONFIGFILE)\"

RTCPCLDHOST = RtcpclientdHost

#ifdef StagerSuperUser
RTCPCLDUSER = StagerSuperUser
#else
RTCPCLDUSER = stage
#endif

#ifdef StagerSuperGroup
RTCPCLDGROUP = StagerSuperGroup
#else
RTCPCLDGROUP = st
#endif

RTCPCLDFLAGS = -DRTCPCLD_NOTIFY_HOST=\"$(RTCPCLDHOST)\" -DRTCPCLD_USER=\"$(RTCPCLDUSER)\" -DRTCPCLD_GROUP=\"$(RTCPCLDGROUP)\"
THREADFLAGS = $(MTCCFLAGS)
CKSUMLIB = -lz
#if BuildRtcopyServer
RTCPFLAG=-DRTCP_SERVER
#endif

#if BuildSecureRtcopy
SECURITYFLAG=-DCSEC
LIBS = -ldl
#endif  

DFLAGS = -DBIN=\"$(BIN)\" -DRTCOPY_LOGFILE=\"$(LOGFILE)\" -DNOMORETAPES=\"$(NOMORETAPES)\" \
	 -DAUTH_HOSTS=\"$(AUTHORIZEDHOSTS)\" -DWORKDIR=\"$(RTCOPYWORKDIR)\" \
	 -DNS_ROOT=\"$(NS_ROOT)\" $(ACCTON) $(CONFIGFILE) $(RTCOPYERRLIST) $(TPCONFIG) \
	 $(RTCPFLAG) -DVMGR $(VDQMFLG) $(CTAPEFLG) $(ACCTFLAG) $(ACCTFILE) $(RTCPCLDFLAGS)
CFLAGS = $(CCOPTIM) -I../h -I.. $(THREADFLAGS) $(DFLAGS) $(SECURITYFLAG)

DependsOnLibrary(common,castorcommon)
DependsOnLibrary(dlf,castordlf)
DependsOnLibrary(castor,castorclient)
DependsOnLibrary(ns,castorns)
DependsOnLibrary(vmgr,castorvmgr)
DependsOnLibrary(vdqm,castorvdqm)
DependsOnLibrary(tape,castortape)
DependsOnLibrary(expert,castorexpert)

rtcpc_SendRecv.c:	DepSourceName(rtcopy,rtcp_SendRecv.c)
			RemoveFiles(rtcpc_SendRecv.c)
			$(CP) rtcp_SendRecv.c rtcpc_SendRecv.c
rtcpc_log.c:		DepSourceName(rtcopy,rtcp_log.c)
			RemoveFiles(rtcpc_log.c)
			$(CP) rtcp_log.c rtcpc_log.c
rtcpc_CallVMGR.c:	DepSourceName(rtcopy,rtcp_CallVMGR.c)
			RemoveFiles(rtcpc_CallVMGR.c)
			$(CP) rtcp_CallVMGR.c rtcpc_CallVMGR.c
rtcpc_CheckReq.c:	DepSourceName(rtcopy,rtcp_CheckReq.c)
			RemoveFiles(rtcpc_CheckReq.c)
			$(CP) rtcp_CheckReq.c rtcpc_CheckReq.c
rtcpc_SendRecv.Osuf:	rtcpc_SendRecv.c ../h/rtcp.h ../h/rtcp_constants.h ../h/rtcp_api.h
	$(CC) -c $(CCOPTIM) $(THREADFLAGS) -I../h rtcpc_SendRecv.c
rtcpc_log.Osuf:		rtcpc_log.c ../h/rtcp.h ../h/rtcp_constants.h ../h/rtcp_api.h
	$(CC) -c $(CCOPTIM) $(THREADFLAGS) -I../h rtcpc_log.c
rtcpc_CallVMGR.Osuf:	rtcpc_CallVMGR.c ../h/rtcp.h ../h/rtcp_constants.h ../h/rtcp_api.h
	$(CC) -c $(CCOPTIM) $(THREADFLAGS) -I../h -DVMGR rtcpc_CallVMGR.c
rtcpc_CheckReq.Osuf:	rtcpc_CheckReq.c ../h/rtcp.h ../h/rtcp_constants.h ../h/rtcp_api.h
	$(CC) -c $(CCOPTIM) $(THREADFLAGS) -I../h rtcpc_CheckReq.c
FileToClean += rtcpc_log.c rtcpc_SendRecv.c rtcpc_CallVMGR.c rtcpc_CheckReq.c

#if BuildRtcopyLibrary
RTCPLIB_OBJS =	rtcpc_SendRecv.Osuf rtcp_InitNW.Osuf rtcpc_log.Osuf rtcpc_CallVMGR.Osuf rtcp_Listen.Osuf rtcpapi.Osuf rtcpc_BuildReq.Osuf rtcp_RetvalSHIFT.Osuf rtcpc_CheckReq.Osuf
SharedLibraryTarget(castorrtcopy,$(RTCPLIB_OBJS),$(DEPLIB),$(LIBS))
#endif
RTCPDEPLIB = SharedLibraryTargetName(castorrtcopy)
RTCPLIBS = -L. -lcastorrtcopy

#if BuildRtcopyClient
tpread.Osuf:		tpread.c ../h/rtcp.h ../h/rtcp_constants.h ../h/rtcp_api.h
	$(CC) -c $(CCOPTIM) $(THREADFLAGS) -I../h tpread.c
dumptape.Osuf:		dumptape.c ../h/rtcp.h ../h/rtcp_constants.h ../h/rtcp_api.h
	$(CC) -c $(CCOPTIM) $(THREADFLAGS) -I../h dumptape.c
NormalProgramTarget(tpread,tpread.Osuf,$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(LIBS),root,bin,0755)
LinkFile(tpwrite,tpread,root,bin,755)
NormalProgramTarget(dumptape,dumptape.Osuf,$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(MTLDFLAGS) $(LIBS),root,bin,0755)
EXEMANPAGE(tpread)
EXEMANPAGE(tpwrite)
EXEMANPAGE(dumptape)
COMM Because nroff does not like to change hierachy of dir we copy the man page sourced by dumptape
dumptape.man: DepSourceName(tape,dumptape.man)
	RemoveFiles(dumptape.man)
	$(CP) $? $@
#if BuildRtstat
rtstat.Osuf:		rtstat.c ../h/vdqm.h ../h/osdep.h ../h/net.h
	$(CC) -c $(CFLAGS) rtstat.c
NormalProgramTarget(rtstat,rtstat.Osuf,$(DEPLIB),$(MTLDFLAGS) $(LIBS),root,bin,0755)
EXEMANPAGE(rtstat)
#endif
#endif

#if BuildRtcpclientd
RTCPCLD_MT_OBJS = rtcpcldcommon_mt.Osuf
RTCPCLD_OBJS =	rtcpcldcommon.Osuf rtcpcldCatalogueInterface.Osuf rtcpcldVmgrInterface.Osuf rtcpcldNsInterface.Osuf
NormalProgramTarget(rtcpcldCleanupDB,rtcpcldCleanupDB.Osuf $(RTCPCLD_OBJS),$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(LIBS),root,bin,0750)
NormalProgramTarget(rtcpclientd,rtcpclientd.Osuf $(RTCPCLD_OBJS),$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(LIBS),root,bin,0750)
NormalProgramTarget(recaller,recaller.Osuf $(RTCPCLD_OBJS) $(RTCPCLD_MT_OBJS),$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(MTLDFLAGS) $(LIBS),root,bin,0750)
NormalProgramTarget(migrator,migrator.Osuf $(RTCPCLD_OBJS) $(RTCPCLD_MT_OBJS),$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(MTLDFLAGS) $(LIBS),root,bin,0750)
NormalProgramTarget(TapeErrorHandler,TapeErrorHandler.Osuf $(RTCPCLD_OBJS),$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(LIBS),root,bin,0750)
EXEMANPAGE(rtcpcldCleanupDB)
EXEMANPAGE(rtcpclientd)
#endif

#if BuildRtcopyServer
MakeDir($(SPOOL),root,bin,0755)
MakeDir($(RTCOPYWORKDIR),root,bin,777)
MakeDir($(SACCTDIR),root,bin,0777)
RTCPD_OBJS =	rtcpd.Osuf rtcp_CallVMGR.Osuf rtcp_CheckReq.Osuf \
		rtcp_Listen.Osuf rtcp_SendRecv.Osuf rtcp_log.Osuf \
		rtcpd_ClientListen.Osuf rtcpd_Ctape.Osuf rtcpd_Disk.Osuf \
		rtcpd_MainCntl.Osuf rtcpd_SelfMonitor.Osuf rtcpd_Tape.Osuf \
		rtcpd_TapeIO.Osuf rtcpd_stageupdc.Osuf rtcp_InitNW.Osuf \
		rtcpd_ConvertData.Osuf rtcpd_SHIFTClients.Osuf \
		rtcpc_BuildReq.Osuf rtcpapi.Osuf rtcp_RetvalSHIFT.Osuf \
		rtcpd_tpdump.Osuf Ctape_dummies.Osuf rtcp_accounting.Osuf		
NormalProgramTarget(rtcpd,$(RTCPD_OBJS),$(DEPLIB),$(MTLDFLAGS) $(LIBS) $(CKSUMLIB),root,bin,0750) 
NormalProgramTarget(killjid,killjid.Osuf,$(RTCPDEPLIB) $(DEPLIB),$(RTCPLIBS) $(MTLDFLAGS) $(LIBS),root,$(OPSGRP),0750)
EXEMANPAGE(rtcpd)
EXEMANPAGE(killjid)
#endif

MakeDir($(ERRLISTDIR),root,bin,755)
InstallNonExecFile(err_messages,$(ERRLISTDIR),root,bin,644)

$(ESTATD): err_messages
	-mkdir -p $(@D)
	-mv $(@D)/$? $(@D)/OLD$?
	cp $? $@

