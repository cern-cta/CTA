#!/usr/bin/python

import os, sys, random
from stressUtils import *

# print usage. Arguments should be <inputFile> <logFileName> <CastorPath> <instance> <svcClass>
def usage():
    print sys.argv[0] + " <inputFile> <logFileName> <CastorPath> <instance> <svcClass>"

# check number of input arguments
if len(sys.argv) != 6:
    print "Wrong number of arguments"
    usage()
    sys.exit(1)

# extract arguments and define default parameters
inputFile = sys.argv[1]
logFile = sys.argv[2]
baseCastorDir = sys.argv[3]
instance = sys.argv[4]
svcClass = sys.argv[5]
pathToCastorCommands = getCastorBinPath() + os.sep

# build common part of the command line
baseCmd = buildEnv(instance, svcClass, True)

# build a list of files to be read
print(baseCmd + pathToCastorCommands + "nsls " + baseCastorDir)
fileList = os.popen(baseCmd + pathToCastorCommands + "nsls " + baseCastorDir).read().split()

# Loop
counter = 0
while True:
    index = random.randint(0, len(fileList) - 1)
    fileName = baseCastorDir + os.sep + fileList[index]
    command = baseCmd + pathToCastorCommands + "rfcp " + inputFile + " " + fileName + " >> " + logFile + " 2>> " + logFile
    os.system(command)
    index = random.randint(0, len(fileList) - 1)
    fileName = baseCastorDir + os.sep + fileList[index]
    command = baseCmd + pathToCastorCommands + "rfcp " + fileName + " /dev/null >> " + logFile + " 2>> " + logFile
    os.system(command)
    counter = counter + 1
