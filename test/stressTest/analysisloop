#!/usr/bin/python

import os, sys
from stressUtils import *

# print usage. Arguments should be <inputFile> <logFileName> <CastorPath> <instance> <svcClass>
def usage():
    print sys.argv[0] + " <inputFile> <logFileName> <CastorPath> <instance> <svcClass1> <svcClass2>"

# check number of input arguments
if len(sys.argv) != 7:
    print "Wrong number of arguments"
    usage()
    sys.exit(1)

# extract arguments and define default parameters
inputFile = sys.argv[1]
inputFileBaseName = os.path.basename(inputFile)
logFile = sys.argv[2]
baseCastorDir = sys.argv[3]
instance = sys.argv[4]
svcClass1 = sys.argv[5]
svcClass2 = sys.argv[6]
pathToCastorCommands = getCastorBinPath() + os.sep

# build common part of the command line
baseCmd1 = buildEnv(instance, svcClass1, True)
baseCmd2 = buildEnv(instance, svcClass2, True)

# Loop on files
counter = 0
while True:
    createDirIfNeeded(baseputloop.baseCastorDir, counter)
    fileName = getCastorDir(baseCastorDir, counter) + os.sep + inputFileBaseName + "_" + getHost() + "_" + buildUuid()
    command1 = baseCmd1 + pathToCastorCommands + "rfcp " + inputFile + " " + fileName + " >> " + logFile + " 2>> " + logFile
    os.system(command1)
    command2 = baseCmd2 + pathToCastorCommands + "rfcp " + fileName + " /dev/null >> " + logFile + " 2>> " + logFile
    os.system(command2)
    counter = counter + 1
