#!/usr/bin/python

import os, sys, socket

# OS specific code
os2Path = { '2.6' : {'x86_64' : 'slc4_amd64_gcc34',
                     'i386'   : 'slc4_ia32_gcc34' },
            '2.4' : {'i386'   : 'slc3_ia32_gcc323'}}
def getOsPath():
    osinfo = os.popen("uname -ri").readline().split()
    return os2Path[osinfo[0][0:3]][osinfo[1]]

# print usage. Arguments should be <inputFile> <logFileName> <CastorPath> <instance> <svcClass>
def usage():
    print sys.argv[0] + " <inputFile> <logFileName> <CastorPath> <instance> <svcClass>"

# check number of input arguments
if len(sys.argv) != 6:
    print "Wrong number of arguments"
    usage()
    sys.exit(1)

# extract arguments and define default parameters
inputFile = sys.argv[1]
inputFileBaseName = os.path.basename(inputFile)
logFile = sys.argv[2]
castorDir = sys.argv[3]
instance = sys.argv[4]
svcClass = sys.argv[5]
pathToCastorCommands = "/afs/cern.ch/sw/lcg/external/castor/2.1.2-4/" + getOsPath() + "/usr"
nbFilesPerDir = 20

# build environment
cmd = "STAGE_HOST=" + instance + " STAGER_TRACE=3 RFIO_USE_CASTOR_V2=YES STAGE_SVCCLASS=" + svcClass + " CASTORDIR=" + castorDir + " LD_LIBRARY_PATH=" + pathToCastorCommands + os.sep + "lib " + pathToCastorCommands + os.sep + "bin" + os.sep

host = socket.gethostname()
counter = 0
while True:
    if counter % nbFilesPerDir == 0:
        os.system("nsmkdir " + castorDir + os.sep + str(counter/nbFilesPerDir))
    uuid = os.popen('uuidgen').readline().strip()
    fileName = castorDir + os.sep + str(counter/nbFilesPerDir) + os.sep + inputFileBaseName + "_" + host + "_" + uuid
    command = cmd + "rfcp " + inputFile + " " + fileName + " >> " + logFile + " 2>> " + logFile
    os.system(command)
    counter = counter + 1
