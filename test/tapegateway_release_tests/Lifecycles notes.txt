Lifecycles notes
================

Creation and transistions of tapecopies, status by status (hopefully not missing any due to hardcoded state values).

=> poke
<= peek
VV Validation

-   TAPECOPY_CREATED      CONSTANT PLS_INTEGER := 0;
=> In orastager.sql: internalPutDoneFunc creates it, only references castorfile.
=> In oracleTape.sql: fileRecalled creates it with a copynb = 0 for remigration of missing tapecopies. (Yuck!) Same as previous otherwise.
=> In oracleTapeGateway.sql: tg_setFileRecalled, ditto.
=> In rtcopy/tapeerrorhandler: static int doMigrationRetry(struct Cstager_Segment_t *segment,
                            struct Cstager_TapeCopy_t *tapeCopy): [...]     Cstager_TapeCopy_setStatus(tapeCopy,TAPECOPY_CREATED);
<= In oracleTape.sql: inputForMigrationPolicy find them (in bulk) and moves them to TAPECOPY_WAITPOLICY with immediate commit.

- TAPECOPY_TOBEMIGRATED CONSTANT PLS_INTEGER := 1;
=> In oracleTape.sql: rtcpclientdCleanUp moves all tapecopies from TAPECOPY_SELECTED to TAPECOPY_TOBEMIGRATED
=> In oracleTape.sql: migHunterCleanUp moves all tapecopies from svcClass to TAPECOPY_TOBEMIGRATED from TAPECOPY_WAITPOLICY
<= In oracleTape.sql: inputForMigrationPolicy find them (in bulk) and moves them to TAPECOPY_WAITPOLICY with immediate commit.
=> In oracleTape.sql: attachTCRtcp resets status to TAPECOPY_TOBEMIGRATED from TAPECOPY_WAITSTREAM or TAPECOPY_WAITPOLICY in case of problem attaching to streams. Suspect algorithm there.
=> In oracleTape.sql: attachTCGateway resets status to TAPECOPY_TOBEMIGRATED from TAPECOPY_WAITSTREAM or TAPECOPY_WAITPOLICY in case of problem attaching to streams. Algo looks better.
=> In oracleTape.sql: resurrectCandidates resets status to TAPECOPY_TOBEMIGRATED from TAPECOPY_WAITPOLICY from a list.
=> In oracleTapeGateway.sql: tg_endTapeSession failed tape copies are resurrected to TAPECOPY_TOBEMIGRATED if found with no error ("lost").
=> In oracleTapeGateway.sql: tg_setMigRetryResult. Status set to TAPECOPY_TOBEMIGRATED (straightforward case)
=> In oracleTapeGateway.sql: tg_deleteStream. Status reset to TAPECOPY_TOBEMIGRATED for copies orphaned by a stream deletion.

- TAPECOPY_WAITSTREAM   CONSTANT PLS_INTEGER := 2;
<= In oracleTape.sql: anyTapeCopyForStream checks the presence of any tapecopy in status TAPECOPY_WAITSTREAM (+other criterias) in a given stream
<= In oracleTape.sql: defaultMigrSelPolicy selects a tapecopy for migration and returns the id.
<= In oracleTape.sql: drainDiskMigrSelPolicy similar behaviour.
<= In oracleTape.sql: repackMigrSelPolicy similar behaviour.
=> In oracleTape.sql: attachTCRtcp sets status to TAPECOPY_WAITSTREAM after attaching it to streams.
=> In oracleTape.sql: attachTCGateway sets status to TAPECOPY_WAITSTREAM in a similar fashion.
<= In oracleTapeGateway.sql: tg_defaultMigrSelPolicy selects a tapecopy for migration and returns the id.
<= In oracleTapeGateway.sql: tg_drainDiskMigrSelPolicy similar behaviour.
<= In oracleTapeGateway.sql: tg_repackMigrSelPolicy similar behaviour.

- TAPECOPY_SELECTED     CONSTANT PLS_INTEGER := 3;
<= In oracleJob.sql: firstByteWrittenProc used as a check before overwriting a file. (select count (*)).
<= In oracleStager.sql: recreateCastorFile used as a check before recreating a castorfile. (select count (*)).
<= In oracleStager.sql: stageRelease used as a check before recreating a castorfile. (select count (*)).
VV In oracleTape.sql: TR_TapeCopy_VID used to check transitions.
=> In oracleTape.sql: defaultMigrSelPolicy set status on selection.
=> In oracleTape.sql: drainDiskMigrSelPolicy set status on selection.
=> In oracleTape.sql: repackMigrSelPolicy set status on selection.
<= In oracleTape.sql: rtcpclientdCleanUp moves all tapecopies from TAPECOPY_SELECTED to TAPECOPY_TOBEMIGRATED
<= In oracleTapeGateway.sql: tg_endTapeSession failed tape copies are resurrected to TAPECOPY_TOBEMIGRATED if found with no error ("lost"). TAPECOPY_SELECTED is used as a marker at this point only.
<= In oracleTapeGateway.sql: tg_defaultMigrSelPolicy (x2) used with TAPECOPY_STAGED as a marked for sibling with a decided destination (multi-tapecopies on different tapes)
<= In oracleTapeGateway.sql: tg_drainDiskMigrSelPolicy (x3) used with TAPECOPY_STAGED as a marked for sibling with a decided destination (multi-tapecopies on different tapes)
<= In oracleTapeGateway.sql: tg_repackMigrSelPolicy (x1) used with TAPECOPY_STAGED as a marked for sibling with a decided destination (multi-tapecopies on different tapes)
=> In oracleTapeGateway.sql: tg_getFileToMigrate sets the status when a TC is selected and detached from streams.

- TAPECOPY_TOBERECALLED CONSTANT PLS_INTEGER := 4;
=> In OraStageSvc.cpp: castor::db::ora::OraStagerSvc::createTapeCopySegmentsForRecall: Created (for recall).
=> In OracleTapeGateway: tg_setRecRetryResult: Status set to TAPECOPY_TOBERECALLED (from id list on input)

Note: no peek as the recalls are segment driven (see segment lifecycle).

- TAPECOPY_STAGED       CONSTANT PLS_INTEGER := 5;
VV In oracleTape.sql: TR_TapeCopy_VID used to check transitions.
<= In oracleTapeGateway.sql: tg_defaultMigrSelPolicy (x2) used with TAPECOPY_SELECTED as a marked for sibling with a decided destination (multi-tapecopies on different tapes)
<= In oracleTapeGateway.sql: tg_drainDiskMigrSelPolicy (x3) used with TAPECOPY_SELECTED as a marked for sibling with a decided destination (multi-tapecopies on different tapes)
<= In oracleTapeGateway.sql: tg_repackMigrSelPolicy (x1) used with TAPECOPY_SELECTED as a marked for sibling with a decided destination (multi-tapecopies on different tapes)
=> and <= In oracleTapeGateway.sql: TG_SetFileMigrated: After migration, tapecopy is marked as TAPECOPY_STAGED. When all TCs are STAGED for a given castorfile, they get destroyed.

  TAPECOPY_FAILED       CONSTANT PLS_INTEGER := 6;
VV In oracleTape.sql: TR_TapeCopy_VID used to check transitions.
=> In oracleTape.sql: invalidateTapeCopies set the status of tapecopies (in bulk, from input list) when they are in TAPECOPY_WAITPOLICY.
<= In oracleTapeGateway.sql: tg_getFileToMigrate used to rule out tapecopies in conflict check
=> In oracleTapeGateway.sql: tg_setMigRetryResult set the status of retry policy, in bulk

  TAPECOPY_WAITPOLICY   CONSTANT PLS_INTEGER := 7;
  TAPECOPY_REC_RETRY    CONSTANT PLS_INTEGER := 8;
  TAPECOPY_MIG_RETRY    CONSTANT PLS_INTEGER := 9;