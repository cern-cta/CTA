#!/bin/sh
#
#  Copyright (C) 1990-2000 by CERN/IT/PDP/DM
#  All rights reserved
#
#       @(#)$RCSfile: rtcpcheck.fix,v $ $Revision: 1.3 $ $Date: 2002/05/07 08:56:37 $ CERN IT-PDP/DM Jean-Philippe Baud
#
#	rtcpcheck.fix - test rtcopy in fixed format mode
#
# calling seqence:
#
# rtcpcheck.fix -V vid [-d density] [-g dgn] [-l lbltype] [-v vsn] [-L lrecl] [-N nbrecords]
#
# example:
# rtcpcheck.fix -F U -V P04060 -l al -L 32400 -b 32400
#set -x
#
#
# Set default values
#
###############################
dir=/tmp
file=RTCOPYTEST
lbltypes="al nl sl aul"
nbrecords=50
format=F
###############################
#
# Get arguments
#
set -- `getopt F:L:N:V:b:d:g:l:S:v: $*`
if [ $? != 0 ]
then
	echo "usage: rtcpcheck.fix -V vid [-b blksiz] [-d density] [-F format] [-g dgn] [-l lbltype] [-v vsn] [-L lrecl] [-N nbrecords]"
	exit 1
fi
#
while [ $# -gt 0 ]
do  case $1 in
    -F)    format=$2; shift;;
    -L)    lrecl=$2; lreclopt="-L $2"; shift;;
    -N)    nbrecords=$2; shift;;
    -V)    vid=$2; shift;;
    -b)    blksiz=$2; blksizopt="-b $2"; shift;;
    -d)    denopt="-d $2"; shift;;
    -g)    dgnopt="-g $2"; shift;;
    -l)    lbltypes=$2; shift;;
    -S)    Sopt="-S $2"; shift;;
    -v)    vsnopt="-v $2"; shift;;
    --)    break;;
    *)     echo "Bad parameter: " $1; exit 1;;
    esac
    shift
done
#
if [ -z "$vid" ]
then
	echo "usage: rtcpcheck.fix -V vid [-b blksiz] [-d density] [-F format] [-g dgn] [-l lbltype] [-v vsn] [-L lrecl] [-N nbrecords]"
    echo "The vid must be specified"
    exit 1
fi
#
if [ "$format" = "F" ]; then
  echo "TESTING RTCOPY IN FIXED FORMAT MODE"
elif [ "$format" = "U" ]; then
  echo "TESTING RTCOPY IN SEQUENTIAL FORTRAN UNFORMATTED I/O MODE (-F U, or -F U,f77)"
elif [ "$format" = "U,bin" ]; then
  echo "TESTING RTCOPY IN DIRECT ACCESS UNFORMATED I/O or C I/O (-F U,bin)"
elif [ "$format" = "FB" ]; then
  echo "TESTING RTCOPY IN FIXED FORMAT MODE BUT GROUPING RECORDS INTO TAPE BLOCKS (-F FB, implies -L abd -b options)"
elif [ "$format" = "F,-f77" ]; then
  echo "TESTING RTCOPY IN SEQUENTIAL FORTRAN UNFORMATTED I/O MODE CONVERTED FROM TAPE TO DISK INTO DIRECT ACCESS UNFORMATTED (e.g. ctonrol words of Fortran are skipped)"
else
  echo "UNSUPPORTED FORMAT"
  exit 1
fi
#
# Creating test file.
#
echo "CREATING TEST FILE ..."
if [ $? != 0 ]
then
	echo "TEST FAILED !!!"
	exit 1
fi
if [ `uname` = "Linux" ]; then
  F77=g77
else
  F77=f77
fi
if [ "$format" = "F" ]; then
  echo cc -o ./create_test_file ./create_test_file.c
  cc -o ./create_test_file ./create_test_file.c
  ./create_test_file $dir/$file".IN" $nbrecords $lrecl
elif [ "$format" = "U" -o "$format" = "U,f77" ]; then
  echo $F77 -o ./test.sequent ./test.sequent.f
  $F77 -o ./test.sequent ./test.sequent.f
  ./test.sequent $dir/$file".IN"
elif [ "$format" = "U,bin" ]; then
  echo cc -o ./create_test_file ./create_test_file.c
  cc -o ./create_test_file ./create_test_file.c
  ./create_test_file $dir/$file".IN" $nbrecords $lrecl
elif [ "$format" = "FB" ]; then
  echo cc -o ./create_test_file ./create_test_file.c
  cc -o ./create_test_file ./create_test_file.c
  ./create_test_file $dir/$file".IN" $nbrecords $lrecl
elif [ "$format" = "F,-f77" ]; then
  echo $F77 -o ./test.sequent ./test.sequent.f
  $F77 -o ./test.sequent ./test.sequent.f
  ./test.sequent $dir/$file".IN"
fi
if [ $? != 0 ]
then
	echo "TEST FAILED !!!"
	exit 1
fi
echo "OK"
#
# Testing tape software for all kind of label.
#
for lab in $lbltypes
do
	#
	# Updating TMS
	#
    if [ "$lab" != "aul" ]; then
	  echo sysreq tms update vid $vid SET LABEL $lab
	  sysreq tms update vid $vid SET LABEL $lab
	  if [ $? != 0 ]
	  then
		  echo "ERROR UPDATING TMS"
		  exit 1 
	  fi
    else
        echo "TMS UPDATE SKIPPED (label type is $lab)"
    fi
	#
	# Prelabeling the tape
	#
	  echo tplabel -V $vid $denopt $dgnopt -l $lab $vsnopt
	  tplabel -V $vid $denopt $dgnopt -l $lab $vsnopt
	  if [ $? != 0 ]
	  then
 	 	echo "ERROR PRELABELING TAPE"
	 	exit 1 
	  fi

	#
	# Writing to tape.
	#
	echo "WRITING A FILE TO TAPE ..."
	echo tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".IN"
	tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".IN"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
    # echo "DUMPTAPE"
    # echo dumptape -V $vid -F 0 -S `hostname`
    # dumptape -V $vid -F 0 -S `hostname`

	#
	# Reading from tape.
	#
	echo "READING IT BACK ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	diff $dir/$file".IN" $dir/$file".OUT" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	echo "OK"

	#
	# Overwriting first file on tape.
	#
	echo "OVER WRITING FIRST FILE ON TAPE ..."
	echo tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".IN"
	tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".IN"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
    # echo "DUMPTAPE"
    # echo dumptape -V $vid -F 0 -S `hostname`
    # dumptape -V $vid -F 0 -S `hostname`

	#
	# Reading from tape.
	#
	echo "READING IT BACK ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1 `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	diff $dir/$file".IN" $dir/$file".OUT" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	echo "OK"

	# 
	# Concatenating on tape.
	#
	echo "WRITING TWO FILES INTO A SINGLE ONE ON TAPE ..."
	echo tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".IN" `hostname`:$dir/$file".OUT"
	tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".IN" `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
    # echo "DUMPTAPE"
    # echo dumptape -V $vid -F 0 -S `hostname`
    # dumptape -V $vid -F 0 -S `hostname`

	cat $dir/$file".IN" $dir/$file".OUT" > $dir/$file".GLOB"
	rm $dir/$file".OUT"
	echo "READING IT BACK ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	diff $dir/$file".OUT" $dir/$file".GLOB" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	echo "OK"

	#
	# Over writing second file on tape.
	#
	echo "OVER WRITING SECOND FILE ON TAPE..."
	echo tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".GLOB"
	tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".GLOB"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
    # echo "DUMPTAPE"
    # echo dumptape -V $vid -F 0 -S `hostname`
    # dumptape -V $vid -F 0 -S `hostname`

	echo "READING IT BACK ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2 `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	diff $dir/$file".OUT" $dir/$file".GLOB" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	echo "OK"

	#
	# Writing 2 files on tape
	#
	echo "WRITING TWO FILES ON TAPE..."
	echo tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1,2 `hostname`:$dir/$file".IN" `hostname`:$dir/$file".GLOB"
	tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1,2 `hostname`:$dir/$file".IN" `hostname`:$dir/$file".GLOB"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
    # echo "DUMPTAPE"
    # echo dumptape -V $vid -F 0 -S `hostname`
    # dumptape -V $vid -F 0 -S `hostname`

	#
	rm $dir/$file".GLOB"
	cat $dir/$file".IN" $dir/$file".OUT" > $dir/$file".GLOB"
	rm $dir/$file".OUT"

	#
	# Concatenating from tape to disk
	#
	echo "READING INTO A SINGLE FILE TWO FILES FROM TAPE ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1,2 `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1,2 `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1 
	fi
	diff $dir/$file".OUT" $dir/$file".GLOB" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
	echo "OK"
	rm $dir/$file".OUT" $dir/$file".GLOB"

	#
	# Writing a file at the end of the tape.
	#
	echo "WRITING A FILE AT THE END OF THE TAPE ..."
	echo tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q n -f LASTFILE `hostname`:$dir/$file".IN"
	tpwrite -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q n -f LASTFILE `hostname`:$dir/$file".IN"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
    # echo "DUMPTAPE"
    # echo dumptape -V $vid -F 0 -S `hostname`
    # dumptape -V $vid -F 0 -S `hostname`

	echo "READING IT BACK WITH THE PREVIOUS ONE ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2- `hostname`:$dir/$file".GLOB" `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 2- `hostname`:$dir/$file".GLOB" `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
	diff $dir/$file".IN" $dir/$file".OUT" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
	echo "OK"
	rm $dir/$file".OUT"
	echo "READING THE FIRST AND THE THIRD ONE ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1,3 `hostname`:$dir/$file".OUT"
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q 1,3 `hostname`:$dir/$file".OUT"
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
	diff $dir/$file".GLOB" $dir/$file".OUT" > /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
	echo "OK"
#
# test -q u
#
	echo "READING THE LAST ONE POSITIONNING BY FID ..."
	echo tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q u  -f LASTFILE /dev/null
	tpread -V $vid $denopt $dgnopt -l $lab $vsnopt -F $format $lreclopt $blksizopt $Sopt -q u  -f LASTFILE /dev/null
	if [ $? != 0 ]
	then
		echo "TEST FAILED !!!"
		exit 1
	fi
	echo "OK"
	sleep 60
done

#
# Everything is fine ...
#
echo "ALL TESTS WERE SUCCESSFUL"
rm $dir/$file".IN" $dir/$file".OUT" $dir/$file".GLOB" > /dev/null 2>&1
exit 0
