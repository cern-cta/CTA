.PS

copy "sequence.pic";

# Put a vertical space at the top of the document
step();
step();

# Define the rtcpcld object
object(RC,"rtcpcld");

# Create a placeholder for the worker process (migrator or recaller)
placeholder_object(W);

# Define the vdqm object
object(V,"vdqm");

# Define the rtcpd object
object(R,"rtcpd");

# Create a placeholder for the child rtcpd process
placeholder_object(C);

step();

# Message sequences
active(RC);
message(RC,V,"connect");
active(V);
message(RC,V,"request drive for tape");
message(V,RC,"ack");
step();
message(V,RC,"request ID");
message(RC,V,"ack");
message(RC,V,"close connection");
inactive(V);
inactive(RC);

step();

active(V);
message(V,R,"connect");
active(R);
create_message(R,C,"rtcpd child");
active(C);
inactive(R);

message(V,C,"client and job info");
message(C,V,"success");
message(C,V,"close connection");
inactive(V);

step();

message(C,RC,"connect");
active(RC);
message(RC,C,"request job info");
message(C,RC,"ack");
step();
message(C,RC,"job info");
message(RC,C,"ack");

step();

create_message(RC,W,"worker");
active(W);
inactive(RC);
message(W,C,"new client info");
message(C,W,"ack");
message(W,C,"close connection");

step();

complete(RC);
complete(W);
complete(V);
complete(R);
complete(C);

.PE
