#
#                      vdqm/Imakefile
#
# This file is part of the Castor project.
# See http://castor.web.cern.ch/castor
#
# Copyright (C) 2003  CERN
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# @(#)$RCSfile: Imakefile,v $ $Revision: 1.10 $ $Release$ $Date: 2008/11/04 15:24:02 $ $Author: sponcec3 $
#
# Makefile for the VDQM API library and client
#
# @author Castor Dev team, castor-dev@cern.ch

#include <Project.tmpl>

INCLUDES = FileName(..,h)

THREADFLAGS = $(MTCCFLAGS)
VDQM_HOST = VdqmHost

#if SOLARIS
LDLIBS = -lsocket -lnsl
#else
#if linux
LDLIBS = $(ADNSLIB) -lnsl -Wl,-rpath-link,../shlib
#else
#if _WIN32
LDLIBS = ..\lib\shift.lib ws2_32.lib advapi32.lib mpr.lib
#endif
#endif
#endif

DEPLIB = DepSharedLibraryTargetName(shlib,shift)

#if !defined(_WIN32)
GLOBLIB = -L../shlib -lshift
#endif

#if BuildVdqmLibrary
VDQMLIBTARGET = SharedLibraryTargetName(castorvdqm)
#endif

#if BuildVdqmServer
VDQMFLAGS=-DVDQMSERV
#endif
#if BuildSecureVdqm
SECURITYFLAG=-DCSEC
LDLIBS+= -ldl
#endif  

CFLAGS = -g -O -I$(INCLUDES) $(THREADFLAGS) -DVDQM_HOST=\"$(VDQM_HOST)\" $(SECURITYFLAG)

#if BuildVdqmClient
PROG_C = ProgramTargetName(showqueues) ProgramTargetName(tpsrv_in_prod) ProgramTargetName(vdqm_admin)
CLIENT = $(PROG_C)
IPROGS_C = FileName($(BIN),ProgramTargetName(showqueues)) \
	   FileName($(BIN),ProgramTargetName(tpsrv_in_prod)) \
	   FileName($(BIN),ProgramTargetName(vdqm_admin))
EPROGS_C = FileName($(EXPORTBIN),showqueues)
MANPAGES_C = FileName($(LIBMANDIR),vdqm_Connect.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_DelDrive.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_DelVolumeReq.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_Disconnect.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_NextDrive.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_NextVol.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_SendVolReq.$(LIBMANSUFFIX)) \
	     FileName($(LIBMANDIR),vdqm_UnitStatus.$(LIBMANSUFFIX)) \
	     FileName($(MANDIR),showqueues.$(MANSUFFIX)) \
	     FileName($(MANDIR),tpsrv_in_prod.$(MANSUFFIX)) \
	     FileName($(MANDIR),vdqm_admin.$(MANSUFFIX))
EMANPAGES_C = FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_Connect.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_DelDrive.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_DelVolumeReq.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_Disconnect.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_NextDrive.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_NextVol.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_SendVolReq.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(LIBMANSUFFIX),vdqm_UnitStatus.$(LIBMANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),showqueues.$(MANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),tpsrv_in_prod.$(MANSUFFIX))) \
	      FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),vdqm_admin.$(MANSUFFIX)))
#endif

IPROGS = $(IPROGS_C) $(IPROGS_S)

VDQMLIB_OBJS = vdqmapi.Osuf vdqmc_SendRecv.Osuf

all: $(VDQMLIBTARGET) $(CLIENT) $(SERVER)

install: $(BIN) $(IPROGS)

export: $(EPROGS_C) $(EPROGS_S)

exportman: $(EMANPAGES_C) $(EMANPAGES_S)

exportshr:

#if BuildVdqmClient
NormalProgramTarget(showqueues,showqueues.Osuf, \
  $(DEPLIB), \
  $(LDFLAGS) $(MTLDFLAGS) $(GLOBLIB) $(LDLIBS) $(MTLDLIBS))

NormalProgramTarget(tpsrv_in_prod,tpsrv_in_prod.Osuf, \
  $(DEPLIB), \
  $(LDFLAGS) $(MTLDFLAGS) $(GLOBLIB) $(LDLIBS) $(MTLDLIBS))

NormalProgramTarget(vdqm_admin,vdqm_admin.Osuf $(VDQMLIB_OBJS), \
  $(DEPLIB), \
  $(LDFLAGS) $(MTLDFLAGS) $(GLOBLIB) $(LDLIBS) $(MTLDLIBS))
#endif

SharedLibraryTarget(castorvdqm,$(VDQMLIB_OBJS),,)
MakeDepSharedLibrary(shlib,shift)

InstallProgram(vdqm_admin,$(BIN),root,bin,0750)
InstallProgram(showqueues,$(BIN),root,bin,0755)
InstallProgram(tpsrv_in_prod,$(BIN),root,bin,0750)
IEXPORT(showqueues,$(EXPORTBIN),0755)

MakeDir($(BIN),root,bin,0755)

install.man: $(MANDIR) $(LIBMANDIR) $(MANPAGES_C) $(MANPAGES_S)

MakeDir($(MANDIR),root,bin,0755)
MakeDir($(LIBMANDIR),root,bin,0755)

IMANPAGE(vdqm_Connect,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_DelDrive,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_DelVolumeReq,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_Disconnect,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_NextDrive,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_NextVol,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_SendVolReq,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(vdqm_UnitStatus,$(LIBMANDIR),$(LIBMANSUFFIX))
IMANPAGE(showqueues,$(MANDIR),$(MANSUFFIX))
IMANPAGE(tpsrv_in_prod,$(MANDIR),$(MANSUFFIX))
IMANPAGE(vdqm_admin,$(MANDIR),$(MANSUFFIX))

EMANPAGE(vdqm_Connect,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_DelDrive,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_DelVolumeReq,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_Disconnect,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_NextDrive,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_NextVol,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_SendVolReq,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(vdqm_UnitStatus,FileName($(EXPORTMAN),man$(LIBMANSUFFIX)),$(LIBMANSUFFIX))
EMANPAGE(showqueues,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))
EMANPAGE(tpsrv_in_prod,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))
EMANPAGE(vdqm_admin,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))

clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean)

clobber:	clean
	@echo clobbering in CurDir
	-@RemoveFiles(ProgramTargetName(showqueues))
	-@RemoveFiles(ProgramTargetName(tpsrv_in_prod))
	-@RemoveFiles(ProgramTargetName(vdqm_admin))
	-@RemoveFiles(ProgramTargetName(vdqmc_SendRecv.c))

Makefiles:

FORCE:

COMM
COMM Dependencies
COMM
#if _WIN32
depend:
	@echo Not supported on this platform
#else
depend:
	makedepend -Y$(INCLUDES) *.c 2> /dev/null
#endif

vdqmc_SendRecv.c:	vdqm_SendRecv.c
	RemoveFile(vdqmc_SendRecv.c)
	$(CP) vdqm_SendRecv.c vdqmc_SendRecv.c

vdqmc_SendRecv.Osuf: vdqmc_SendRecv.c 
	$(CC) -c -I$(INCLUDES) $(THREADFLAGS) vdqmc_SendRecv.c

COMM DO NOT DELETE THIS LINE -- make  depend  depends  on  it.
