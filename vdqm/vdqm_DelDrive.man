.\"
.\" @(#)$RCSfile: vdqm_DelDrive.man,v $ $Revision: 1.1 $ $Date: 2000/08/09 10:54:31 $ CERN IT-PDP/DM O.Barring
.\"
.\" Copyright (C) 2000 by CERN/IT/PDP/DM
.\"
.TH VDQM_DELDRIVE l "$Date: 2000/08/09 10:54:31 $" "CASTOR" "VDQM Library Functions"
.SH NAME
.PP
vdqm_DelDrive \- delete a drive in VDQM
.SH SYNOPSIS
.br
\fB#include "Castor_limits.h"\fR
.br
\fB#include "osdep.h"\fR
.br
\fB#include "net.h"\fR
.br
\fB#include "vdqm_api.h"\fR
.sp
.BI "int vdqm_DelDrive ("
.br
.BI "                const vdqmnw_t *" nw ,
.br
.BI "                const char *" dgn ,
.br
.BI "                const char *" server,
.br
.BI "                const char *" unit );
.SH PARAMETERS
.I nw
\- points to a structure containing internal VDQM API network information returned
by a prior call to 
.B vdqm_Connect(3).
If this parameter is NULL, which is the recommended usage,
.B vdqm_DelDrive
will internally call 
.B vdqm_Connect(3)
and
.B vdqm_Disconnect(3)
to open and close the connection with the VDQM server.
.PP
.I dgn
\- character string specifying the device group name associated with the unit.
.PP
.I server
\- character string specifying the tape server. 
If NULL the local host name will be used.
.PP
.I unit
\- character string specifying the drive unit name.
.PP
.SH DESCRIPTION
.B vdqm_DelDrive
sends a delete drive request to the VDQM server. When successful the specified 
drive will be completely removed from the VDQM database. The request will
fail if there is a running request on the drive (i.e. the drive status is not 
FREE or DOWN).

.SH EXAMPLE
Here follows an example showing how call
.B vdqm_DelDrive
to delete the (local) drive specified on command line from the VDQM database.
.P
.nf
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <netdb.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <Castor_limits.h>
#include <serrno.h>
#include <osdep.h>
#include <net.h>
#include <Ctape_constants.h>
#include <Ctape_api.h>
#include <vdqm_api.h>

int main(int argc, char *argv) {
    int rc;
    char *dgn, *drive;

    if ( argc < 2 ) {
        fprintf(stderr,"Usage: %s dgn drive\n",argv[0]);
        exit(2);
    }
    dgn = argv[1];
    drive = argv[2];

    /*
     * Request to delete the specified drive
     */
    rc = \fBvdqm_DelDrive\fP(NULL,dgn,NULL,drive);
    if ( rc == -1 ) {
        fprintf(stderr,"vdqm_DelDrive(): %s\\n",sstrerror(serrno));
        exit(1);
    }
    exit(0);
}
.fi

.SH RETURN VALUES
.PP
On successful completion, the
.B vdqm_DelDrive
function returns 0. Otherwise, a value of \-1 is returned and
.B serrno
is set to indicate the error.
.SH ERRORS
.PP
If the
.B vdqm_DelDrive
function fails,
.B serrno
may be set to one of the following values:
.TP
.B SEINTERNAL
Unexpected internal error 
.TP
.B SENOSSERV
VDQM service unknown.
.TP
.B SENOSHOST
VDQM host unknown.
.TP
.B SECOMERR
A network library call failed when trying to establish the connection
with the VDQM server.
.TP
.B EINVAL
A parameter or combination of parameters is invalid. For instance if
any of the required parameters device group name (dgn) or drive name (unit)
is a NULL pointer.
.TP
.B EVQSYERR
A fatal system call (e.g. calloc()) failure in VDQM server.
.TP
.B EVQHOLD
The server is in HOLD status. This is normally a temporary error due
to VDQM server maintenance. Client should retry after a short delay.
.TP
.B EVQREQASS
The drive was not free or down (e.g. there is a running job using the drive).
.TP
.B EVQNOSDRV
Specified drive was not found in the VDQM database.
.TP
.B EVQREPLICA
Failed to propagate the delete operation to the backup server

.SH SEE ALSO
.BR vdqm_Connect(3), 
.BR vdqm_Disconnect(3)
