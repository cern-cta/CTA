#!/bin/sh

get_ids()
{
  IDS=$(grep -1 "^$1 " filenameToLogIds.txt)
  FILE_ID=$(echo $IDS | awk '{ print $2 }')
  ARCHIVE_ID=$(echo $IDS | awk '{ print $3 }')
}

get_mgm_time()
{
  MGM_TIME=$(grep " $1 " xrdlog.mgm.${2}.${3} | sed 's/ func=DoIt.*$//' | sed 's/time=//')
}

get_mgm_times()
{
  get_mgm_time $1 default ARCHIVED
  TIME_ARCHIVED=$MGM_TIME
  get_mgm_time $1 default CLOSEW
  TIME_CLOSEW=$MGM_TIME
  get_mgm_time $1 default SYNC::CREATE
  TIME_CREATE=$MGM_TIME
  get_mgm_time $1 default SYNC::PREPARE
  TIME_PREPARE=$MGM_TIME
  get_mgm_time $1 retrieve_written CLOSEW
  TIME_RETRIEVED=$MGM_TIME
}

get_cta_time()
{
  awk -vPATTERN="$*" '
    $0 ~ PATTERN {
       gsub("^Apr ", "1804")
       #gsub("catalogueTime=\"", "")
       #gsub("\"$", "")
       #print $1 " " $2 " " $NF
       print $1 " " $2
       exit
  }'
}

get_frontend_times()
{
  TMP_RESULT=$(grep "fileId=\"$2\"" cta-frontend-processWFE.log)

  TIME_FE_CREATE=$(echo -e "${TMP_RESULT}" | get_cta_time CREATE)
  TIME_FE_CLOSEW=$(echo -e "${TMP_RESULT}" | get_cta_time CLOSEW)
  TIME_FE_PREPARE=$(echo -e "${TMP_RESULT}" | get_cta_time PREPARE)
}

get_taped_times()
{
  TMP_RESULT=$(grep "fileId=\"$1\"" cta-taped-events.log)

  TIME_TS_ARCHIVE_POP=$(echo -e "${TMP_RESULT}" | get_cta_time "In ArchiveMount::getNextJobBatch")
  TIME_TS_ARCHIVE_TASKS=$(echo -e "${TMP_RESULT}" | get_cta_time "Created tasks for migrating a file")
  TIME_TS_ARCHIVE_OPEN=$(echo -e "${TMP_RESULT}" | get_cta_time "Opened disk file for read")
  TIME_TS_ARCHIVE_READ=$(echo -e "${TMP_RESULT}" | get_cta_time "File successfully read from disk")
  TIME_TS_ARCHIVE_DONE=$(echo -e "${TMP_RESULT}" | get_cta_time "File successfully transmitted to drive")
  TIME_TS_ARCHIVE_REPORT=$(echo -e "${TMP_RESULT}" | get_cta_time "Reported to the client a full file archival")
  TIME_TS_RETRIEVE_POP=$(echo -e "${TMP_RESULT}" | get_cta_time "In RetrieveMount::getNextJobBatch")
  TIME_TS_RETRIEVE_TASK=$(echo -e "${TMP_RESULT}" | get_cta_time "Recall task created")
  TIME_TS_RETRIEVE_TASKS=$(echo -e "${TMP_RESULT}" | get_cta_time "Created tasks for recalling a file")
  TIME_TS_RETRIEVE_POSITION=$(echo -e "${TMP_RESULT}" | get_cta_time "Successfully positioned for reading")
  TIME_TS_RETRIEVE_READ=$(echo -e "${TMP_RESULT}" | get_cta_time "File successfully read from tape")
  TIME_TS_RETRIEVE_OPEN=$(echo -e "${TMP_RESULT}" | get_cta_time "Opened disk file for writing")
  TIME_TS_RETRIEVE_DONE=$(echo -e "${TMP_RESULT}" | get_cta_time "File successfully transfered to disk")
}

get_times()
{
  get_ids $1
  get_mgm_times $1
  get_frontend_times $FILE_ID $ARCHIVE_ID
  get_taped_times $ARCHIVE_ID

  echo fileId=$FILE_ID archiveID=$ARCHIVE_ID
  echo create $TIME_CREATE
  echo fe_create $TIME_FE_CREATE
  echo closew $TIME_CLOSEW
  echo fe_closew $TIME_FE_CLOSEW
  echo pop $TIME_TS_ARCHIVE_POP
  echo tasks $TIME_TS_ARCHIVE_TASKS
  echo open $TIME_TS_ARCHIVE_OPEN
  echo read $TIME_TS_ARCHIVE_READ
  echo done $TIME_TS_ARCHIVE_DONE
  echo report $TIME_TS_ARCHIVE_REPORT
  echo archived $TIME_ARCHIVED
  echo prepare $TIME_PREPARE
  echo fe_prepare $TIME_FE_PREPARE
  echo pop $TIME_TS_RETRIEVE_POP
  echo task $TIME_TS_RETRIEVE_TASK
  echo tasks $TIME_TS_RETRIEVE_TASKS
  echo position $TIME_TS_RETRIEVE_POSITION
  echo read $TIME_TS_RETRIEVE_READ
  echo open $TIME_TS_RETRIEVE_OPEN
  echo done $TIME_TS_RETRIEVE_DONE
  echo retrieved $TIME_RETRIEVED
}

get_times /eos/dev/userfiles/testdir/group_1
get_times /eos/dev/userfiles/testdir/group_1000000
