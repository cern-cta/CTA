#!/bin/sh

# System configuration
EOS_INSTANCE=eosdev
EOS_RUID=71761
EOS_TEST_DIR=/eos/users/test

# Location of log files
EOS_MGM_LOG=/var/log/eos/mgm/xrdlog.mgm
CTA_FRONTEND_LOG=/home/cta/cta/cta-frontend.log
CTA_TAPED_LOG=/var/log/cta/cta-taped.log

# Colours
NC='\033[0m' # No Color
RED='\033[0;31m'
LT_RED='\033[1;31m'
GREEN='\033[0;32m'
LT_GREEN='\033[1;32m'
ORANGE='\033[0;33m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
LT_BLUE='\033[1;34m'

echo_start()
{
  echo -ne ${LT_BLUE}$*
}

echo_end()
{
  echo -e $*${NC}
}

echoc()
{
  COLOUR=$1
  shift
  echo -e ${COLOUR}$*${NC}
}

error()
{
  echo -ne ${NC}
  echo $* >&2
  exit 1
}

wait_dot()
{
  echo -n "." >&2
  sleep 1
}

getEOSWFE()
{
  for i in {1..15}
  do
    LOGLINE=$(grep " $2 " $EOS_MGM_LOG | grep " $1 ")
    [ $? -ne 0 ] || break
    wait_dot
  done
  [ "${LOGLINE}" != "" ] || error "Event $1 $2 not found in ${EOS_MGM_LOG}"
}

getEOSDiskFileInfo()
{
  COPIES=$(eos ls -y ${EOS_TEST_DIR}/${FILENAME} | awk '{ print $1 }')
  DISK_COPIES=$(echo $COPIES | sed 's/^d//' | sed 's/::t.*$//')
  TAPE_COPIES=$(echo $COPIES | sed 's/^.*::t//')
  DISK_FILE_INFO=$(eos fileinfo ${EOS_TEST_DIR}/${FILENAME})
  EOS_DISK_ID=$(echo ${DISK_FILE_INFO} | grep " Fid: " |\
                sed 's/^.*Fid: //' | sed 's/ .*$//')
}

getArchiveID()
{
  for i in {1..15}
  do
    LOGLINE=$(grep " diskFileID=\"${1}\" " $CTA_FRONTEND_LOG | grep "Queued archive request")
    [ $? -ne 0 ] || break
    wait_dot
  done
  [ "${LOGLINE}" != "" ] || error "Queued archive request event for diskFileID=\"${1}\" not found in ${CTA_FRONTEND_LOG}"
  ARCHIVE_FILE_ID=$(echo $LOGLINE | sed 's/^.* fileId="//' | sed 's/".*$//')
}

getTapeLog()
{
  FILEID=$1
  if [ $# -gt 2 ]
  then
    LAST_MSG=$2
    shift
  fi
  CURRENT_MSG=$2
  for i in {1..15}
  do
    LOGLINE=$(grep " fileId=\"${FILEID}\" " $CTA_TAPED_LOG | grep " LVL=\"Info\" ")
    echo $LOGLINE | grep "${CURRENT_MSG}" >/dev/null
    [ $? -ne 0 ] || break
    wait_dot
  done
  [ "${LOGLINE}" != "" ] || error "Archive request fileID=\"${1}\" not found in ${CTA_TAPED_LOG}"

  # If this is the retrieve log, delete the archive log items
  if [ "${LAST_MSG}" != "" ]
  then
    LOGLINE=$(echo -e "${LOGLINE}" | awk -v LAST_MSG="${LAST_MSG}" 'BEGIN { is_retrieve = 0; }
      is_retrieve { print $0; }
      $0 ~ LAST_MSG { is_retrieve = 1; }')
  fi
}

getFrontendLog()
{
  for i in {1..15}
  do
    LOGLINE=$(grep " fileId=\"${2}\" " $CTA_FRONTEND_LOG | grep "$1")
    [ $? -ne 0 ] || break
    wait_dot
  done
  [ "${LOGLINE}" != "" ] || error "Archive request fileID=\"${2}\" event $1 not found in ${CTA_TAPED_LOG}"
}

##
## Archving
##

FILENAME=file.$$

# Copy small file into EOS
echoc $LT_GREEN "Copying file into EOS..."
eos cp /etc/motd ${EOS_TEST_DIR}/${FILENAME}

echoc $LT_BLUE "\nDisk file info:"
eos fileinfo ${EOS_TEST_DIR}/${FILENAME}
getEOSDiskFileInfo ${EOS_TEST_DIR}/${FILENAME}
echoc $LT_BLUE "EOS Disk ID: $EOS_DISK_ID\nDisk copies: $DISK_COPIES\nTape copies: $TAPE_COPIES\n"

echo_start "\nWaiting for SYNC::CREATE event."
getEOSWFE SYNC::CREATE ${EOS_TEST_DIR}/${FILENAME}
echo_end "done"
echo -e "$LOGLINE\n"

echo_start "Checking CTA Frontend log for CTA Archive ID."
getArchiveID $EOS_DISK_ID
echo_end "done"
echo $LOGLINE
echo_start ARCHIVE_FILE_ID=$ARCHIVE_FILE_ID
echo_end '\n'

echo_start "Waiting for CLOSEW event."
getEOSWFE CLOSEW ${EOS_TEST_DIR}/${FILENAME}
echo_end "done"
echo -e "$LOGLINE\n"

echo_start "Waiting for file to be archived to tape."
getTapeLog $ARCHIVE_FILE_ID 'Reported to the client a full file archival'
echo_end "done"
echo -e "$LOGLINE\n"

echoc $LT_BLUE "List archived file on tape:"
cta-admin af ls --instance ${EOS_INSTANCE} --diskid ${EOS_DISK_ID} --header

echo_start "\nWaiting for ARCHIVED event."
getEOSWFE ARCHIVED ${EOS_TEST_DIR}/${FILENAME}
echo_end "done"
echo -e "$LOGLINE\n"

getEOSDiskFileInfo ${EOS_TEST_DIR}/${FILENAME}
echoc $LT_BLUE "Disk copies: $DISK_COPIES\nTape copies: $TAPE_COPIES\n"

##
## Retrieval
##

echoc $LT_GREEN "Retrieving file from CTA..."
XrdSecPROTOCOL=sss XrdSecSSSKT=/etc/cta/eos.sss.keytab |\
sudo xrdfs root://localhost/ prepare -s "${EOS_TEST_DIR}/${FILENAME}?eos.ruid=${EOS_RUID}"

echo_start "Waiting for SYNC::PREPARE event."
getEOSWFE SYNC::PREPARE ${EOS_TEST_DIR}/${FILENAME}
echo_end "done"
echo -e "$LOGLINE\n"

echo_start "Checking CTA Frontend log for PREPARE event."
getFrontendLog "[Rr]etrieve" $ARCHIVE_FILE_ID
echo_end "done"
echo -e "$LOGLINE\n"

echo_start "Waiting for file to be retrieved from tape."
getTapeLog $ARCHIVE_FILE_ID 'Reported to the client a full file archival' 'File successfully transfered to disk'
echo_end "done"
echo -e "$LOGLINE\n"

getEOSDiskFileInfo ${EOS_TEST_DIR}/${FILENAME}
echoc $LT_BLUE "Disk copies: $DISK_COPIES\nTape copies: $TAPE_COPIES\n"

echoc $LT_GREEN "Copying file out of EOS..."
eos cp ${EOS_TEST_DIR}/${FILENAME} /tmp/${FILENAME}
ls -l /tmp/${FILENAME}
diff /tmp/${FILENAME} /etc/motd
if [ $? -eq 0 ]
then
  echoc $LT_GREEN "Files match, OK."
else
  error "Files differ."
fi
rm -f /tmp/${FILENAME}
