{{- if .Values.xrd.enabled }}
{{- $name := include "ctafrontend.fullname" . }}
{{- $schedulerConfig := include "scheduler.config" . | fromYaml -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  serviceName: {{ $name }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        {{- include "common.labels.withoutname" $ | nindent 8 }}
    spec:
      imagePullSecrets:
      {{ include "ctafrontend.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.pod.extraSpec }}
      {{ .Values.pod.extraSpec | toYaml | nindent 6 }}
      {{- end }}
      initContainers:
      - name: init1-get-krb5-keytab
        image: {{ include "ctafrontend.image" . }}
        imagePullPolicy: {{ include "ctafrontend.imagePullPolicy" . }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          sukadmin() { echo {{ .Values.global.kerberos.adminPrinc.password }} | kadmin -r {{ .Values.global.kerberos.defaultRealm | upper }} -p {{ .Values.global.kerberos.adminPrinc.name }}/admin $@; };
          sukadmin addprinc -randkey cta/{{ $name }};
          sukadmin ktadd -k /root/ctafrontend_keytab/output/cta-frontend.krb5.keytab cta/{{ $name }};
          chmod 400 /root/ctafrontend_keytab/output/cta-frontend.krb5.keytab
          # Make CTA user owner (group 33 is tape)
          chown -R 1000:33 /root/ctafrontend_keytab/output/cta-frontend.krb5.keytab
        volumeMounts:
        - name: krb5-conf
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
        - name: cta-frontend-krb5-keytab
          mountPath: /root/ctafrontend_keytab/output
      # Required until https://github.com/kubernetes/kubernetes/issues/81089 is merged
      - name: init2-fix-sss-keytab-ownership
        image: {{ include "common.images.busybox" . }}
        imagePullPolicy: {{ include "common.images.defaultPullPolicy" . }}
        command: ["sh", "-c"]
        args:
        - |
          cp /root/sss_keytab/input/diskbuffer.sss.keytab /root/sss_keytab/output/diskbuffer.sss.keytab;
          chmod 400 /root/sss_keytab/output/diskbuffer.sss.keytab;
          # Make CTA user owner (group 33 is tape)
          chown -R 1000:33 /root/sss_keytab/output/diskbuffer.sss.keytab
        volumeMounts:
        - name: diskbuffer-sss-keytab
          mountPath: /root/sss_keytab/input/diskbuffer.sss.keytab
          subPath: {{ .Values.xrd.keytab.subPath }}
        - name: diskbuffer-sss-keytab-fixedownership
          mountPath: /root/sss_keytab/output
      containers:
      - name: cta-frontend
        image: {{ include "ctafrontend.image" . }}
        imagePullPolicy: {{ include "ctafrontend.imagePullPolicy" . }}
        stdin: true
        command: ["/bin/bash", "-c"]
        args: ["{{- if .Values.preRun.enabled }}/scripts/pre_run.sh;{{- end }} /scripts/ctafrontend-xrd.sh; {{- if .Values.postRun.enabled }}/scripts/post_run.sh;{{- end }}"]
        readinessProbe:
          tcpSocket:
            port: {{ .Values.xrd.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 60
        securityContext:
          allowPrivilegeEscalation: {{ include "common.securityContext.allowPrivilegeEscalation" . }}
          privileged: {{ include "common.securityContext.privileged" . }}
        env:
        - name: MY_NAME
          value: {{ $name }}
        - name: MY_NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: INSTANCE_NAME
          value: {{ .Release.Namespace | quote }}
        - name: SCHEDULER_BACKEND
          value: {{ $schedulerConfig.backend | quote }}
        {{- if eq $schedulerConfig.backend "ceph" }}
        - name: SCHEDULER_CEPH_NAMESPACE
          value: {{ $schedulerConfig.cephConfig.namespace | quote }}
        - name: SCHEDULER_CEPH_ID
          value: {{ $schedulerConfig.cephConfig.id | quote }}
        - name: SCHEDULER_CEPH_POOL
          value: {{ $schedulerConfig.cephConfig.pool | quote }}
        {{- end }}
        - name: TERM
          value: "xterm"
        {{- with .Values.extraEnv }}
        {{- include "common.extraEnv" . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: scripts-volume
          mountPath: /scripts
        - name: catalogue-config
          mountPath: /etc/cta/cta-catalogue.conf
          subPath: cta-catalogue.conf
        {{- if eq $schedulerConfig.backend "postgres" }}
        - name: scheduler-config
          mountPath: /etc/cta/cta-scheduler.conf
          subPath: cta-scheduler.conf
        {{- else }}
        - name: scheduler-config
          mountPath: /etc/cta/cta-objectstore-tools.conf
          subPath: cta-objectstore-tools.conf
        {{- end }}
        {{- if eq $schedulerConfig.backend "ceph" }}
        - name: cta-ceph-volume
          mountPath: /etc/ceph/ceph.conf
          subPath: ceph.conf
        - name: cta-ceph-volume
          mountPath: /etc/ceph/ceph.client.{{ $schedulerConfig.cephConfig.id }}.keyring
          subPath: ceph.client.{{ $schedulerConfig.cephConfig.id }}.keyring
        {{- end }}
        - name: xrootd-config
          mountPath: /etc/cta/cta-frontend-xrootd.conf
          subPath: cta-frontend-xrootd.conf
        - name: cta-frontend-krb5-keytab
          mountPath: /etc/cta/cta-frontend.krb5.keytab
          subPath: cta-frontend.krb5.keytab
        - name: diskbuffer-sss-keytab-fixedownership
          mountPath: /etc/cta/diskbuffer.sss.keytab
          subPath: diskbuffer.sss.keytab
        - name: krb5-conf
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
      {{- if eq $schedulerConfig.backend "vfs" }}
        - name: vfs-storage-volume
          mountPath: /objectstore
      {{- end }}
        {{ include "common.extraVolumeMounts" . | nindent 8 }}
      volumes:
      - name: scripts-volume
        configMap:
          name: scripts-ctafrontend
          defaultMode: 0777
      - name: catalogue-config
        configMap:
          name: cta-catalogue-conf
      {{- if eq $schedulerConfig.backend "postgres" }}
      - name: scheduler-config
        configMap:
          name: cta-scheduler-conf
      {{- else }}
      - name: scheduler-config
        configMap:
          name: cta-objectstore-conf
      {{- end }}
      {{- if eq $schedulerConfig.backend "ceph" }}
      - name: cta-ceph-volume
        configMap:
          name: ceph-conf
      {{- end }}
      {{- if eq $schedulerConfig.backend "vfs" }}
      - name: vfs-storage-volume
        persistentVolumeClaim:
          claimName: scheduler-vfs-pvc
      {{- end }}
      - name: xrootd-config
        configMap:
          name: cta-frontend-xrootd-conf
      - name: cta-frontend-krb5-keytab
        emptyDir: {}
      - name: diskbuffer-sss-keytab
        secret:
          secretName: {{ .Values.xrd.keytab.secretName }}
      - name: diskbuffer-sss-keytab-fixedownership
        emptyDir: {}
      - name: krb5-conf
        configMap:
          name: {{ .Values.global.kerberos.clientConfig.configMap }}
      {{ include "common.extraVolumes" . | nindent 6 }}
{{- end }}
