{{- if .Values.xrd.enabled }}
{{- $schedulerConfig := include "scheduler.config" . | fromYaml -}}
{{- $name := include "ctafrontend.fullname" . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: cta-frontend-xrootd-conf
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
data:
  cta-frontend-xrootd.conf: |-
    #
    # CTA options
    #

    cta.instance_name {{ .Release.Namespace }}

    # CTA ObjectStore options
    cta.objectstore.backendpath {{ include "global.schedulerUrl" . }}

    # CTA Scheduler DB options
    cta.schedulerdb.scheduler_backend_name {{ $schedulerConfig.backend }}
    cta.schedulerdb.numberofthreads {{ .Values.xrd.conf.schedulerdb.numberOfThreads }}
    cta.schedulerdb.threadstacksize_mb {{ .Values.xrd.conf.schedulerdb.threadStackSizeMb }}
    cta.schedulerdb.disable_repack_requests {{ .Values.xrd.conf.schedulerdb.disableRepackRequests }}
    cta.schedulerdb.disable_user_requests {{ .Values.xrd.conf.schedulerdb.disableUserRequests }}

    # CTA Scheduler DB options - Cache timeout options (decreased for tests)
    cta.schedulerdb.tape_cache_max_age_secs {{ .Values.xrd.conf.schedulerdb.tapeCacheMaxAgeSecs }}
    cta.schedulerdb.retrieve_queue_cache_max_age_secs {{ .Values.xrd.conf.schedulerdb.retrieveQueueCacheMaxAgeSecs }}

    # CTA Catalogue options
    cta.catalogue.numberofconnections {{ .Values.xrd.conf.catalogue.numberOfConnections }}

    # Missing tape file copies minimum age.
    # Set it to prevent false flagging of multi-copy files in the process of being archived tapes.
    # Default 24 hours
    cta.catalogue.missing_file_copies_min_age_secs {{ .Values.xrd.conf.catalogue.missingFileCopiesMinAgeSecs }}

    # Maximum file size (in GB) that the CTA Frontend will accept for archiving
    cta.archivefile.max_size_gb {{ .Values.xrd.conf.frontend.archiveFileMaxSizeGb }}

    # Disallow 0-length files
    cta.archivefile.zero_length_files_forbidden {{ .Values.xrd.conf.frontend.zeroLengthFilesForbidden }}

    # Tapepools exempted from this check (if enabled)
    cta.archivefile.zero_length_files_forbidden_vo_exception_list {{ .Values.xrd.conf.frontend.zeroLengthFilesForbiddenVoExceptionList }}

    # CTA Frontend log URL
    cta.log.url file:/var/log/cta/cta-frontend.log

    # CTA Logger log level
    # Valid log levels are EMERG, ALERT, CRIT, ERR, WARNING, NOTICE (==USERERR), INFO, DEBUG
    cta.log.level {{ .Values.xrd.conf.logger.logLevel }}

    # CTA Logger log format
    # Valid formats are default, json
    cta.log.format json

    # CTA XRootD SSI Protobuf log level
    # cta.log.ssi debug protobuf # TODO: which of these options do we want to make configurable?
    cta.log.ssi {{ .Values.xrd.conf.logger.ssiLogLevel }}

    # CTA Repack buffer URL
    # cta.repack.repack_buffer_url {{ .Values.xrd.conf.frontend.repackBufferUrl }}

    # CTA Verification Mount Policy
    cta.verification.mount_policy verification

    #
    # XRootD/SSI options
    #

    # Load the CTA SSI plugin
    xrootd.fslib -2 libXrdSsi.so

    # Load the SSI module
    ssi.svclib libXrdSsiCta.so

    # Use the security module
    xrootd.seclib libXrdSec.so

    # Security protocol specification
    #
    # Note: the XRootD process needs to be able to read the keytab file
    sec.protocol krb5 /etc/cta/cta-frontend.krb5.keytab cta/{{ $name }}@{{ .Values.global.kerberos.defaultRealm }}
    sec.protocol sss -s /etc/cta/diskbuffer.sss.keytab

    # Only Kerberos 5 and sss are allowed
    sec.protbind * only sss krb5

    # Turn off asynchronous I/O
    xrootd.async off

    # Use a port other than 1094, already in use
    xrd.port {{ .Values.xrd.port }}

    # Export the SSI resource
    all.export /ctafrontend nolock r/w

    # Telemetrysssss
    cta.telemetry.metricsBackend {{ .Values.xrd.conf.telemetry.metricsBackend }}
    cta.telemetry.metricsOtlpEndpoint {{ .Values.xrd.conf.telemetry.metricsOtlpEndpoint }}

{{- end }}
