
{{$namespace := .Release.Namespace }}
{{$imageVersion := include "tpsrv.image" . }}
{{$imagePullPolicy := include "tpsrv.imagePullPolicy" . }}
{{$imagePullSecrets := include "tpsrv.imagePullSecrets" . }}

# Spawn replicaCount pods
{{- range $i := until (int .Values.tpsrv.replicaCount) }}
{{- $podName := printf "tpsrv%02d" (add $i 1) }} # server names start from 1
{{- $driveName := index $.Values.library.drivenames $i }}

apiVersion: v1
kind: Pod
metadata:
  name: {{$podName | quote}}
  namespace: {{ $namespace | quote}}
  labels:
  {{- if ($.Values.tpsrv.labels)}}
    {{$.Values.tpsrv.labels | toYaml  | nindent 4}}
  {{- else}}
    k8s-app: {{$podName | quote}}
  {{- end}}
spec:
  restartPolicy: Never
  containers:
  {{- range $.Values.tpsrv.containers }}
  - name: {{ .name | default $podName | quote }}
    image: {{ $imageVersion }}
    imagePullPolicy: {{ $imagePullPolicy }}
    {{- if (.commandsAtRuntime)}}
    readinessProbe:
      exec:
        command: {{.commandsAtRuntime | toJson}}
      initialDelaySeconds: {{.delay}}
      periodSeconds: 10
      failureThreshold: {{.failureTolerance}}
    {{- end}}
    stdin: true
    env:
    - name: MY_NAME
      value: {{ $podName | quote}}
    - name: MY_NAMESPACE
      value: {{ $namespace | quote}}
    - name: INSTANCE_NAME
      value: {{ $namespace | quote}}
    - name: LIBRARYTYPE
      value: {{ $.Values.library.type | quote }}
    - name: LIBRARYNAME
      value: {{ $.Values.library.name | quote }}
    - name: LIBRARYDEVICE
      value: {{ $.Values.library.device | quote }}
    - name: DRIVENAME
      value: {{ $driveName }}
    - name: DRIVENAMES
      value: {{ $.Values.library.drivenames | join "," | quote }}
    - name: DRIVEDEVICES
      value: {{ $.Values.library.drivedevices | join "," | quote }}
    {{- if $.Values.library.driveserials }}
    - name: DRIVESERIALS
      value: {{ $.Values.library.driveserials | join "," | quote }}
    {{- end }}
    - name: TAPES
      value: {{ $.Values.library.tapes | join "," | quote }}
    {{- if (.env) }}
        {{- .env | toYaml | nindent 4}}
    {{- end}}
    command: {{.command | toJson}}
    {{- if (.args)}}
    args: {{.args}}
    {{- end}}
    securityContext:
      privileged: {{.isPriviliged}}
    {{- if (.ports)}}
    ports:
        {{- .ports | toYaml | nindent 4}}
    {{- end}}
    {{- if (.volumeMounts)}}
    volumeMounts:
    - name: cta-conf-volume
      mountPath: /etc/cta/cta-taped-{{ $driveName }}.conf
      subPath: cta-taped-{{ $driveName }}.conf
    {{- if ($.Values.global.useSystemd) }}
    - name: cta-sysconfig-volume
      mountPath: /etc/sysconfig/cta-rmcd
      subPath: cta-rmcd
    {{- end }}
    - name: cta-sysconfig-volume
      mountPath: /etc/sysconfig/cta-taped
      subPath: cta-taped
    {{- if eq $.Values.global.scheduler.backend "ceph" }}
    - name: cta-ceph-volume
      mountPath: /etc/ceph
    {{- end }}
    {{- .volumeMounts | toYaml | nindent 4}}
    {{- if ($.Values.global.volumes) }}
      {{- $.Values.global.volumeMounts | toYaml | nindent 4}}
    {{- end}}
    {{- end}}
  {{- end}} # End of container loop
  volumes:
  - name: cta-conf-volume
    configMap:
      name: etc-cta-tpsrv-{{ $i }}
  - name: cta-sysconfig-volume
    configMap:
      name: etc-sysconfig-tpsrv
  {{- if eq $.Values.global.scheduler.backend "ceph" }}
  - name: cta-ceph-volume
    configMap:
      name: etc-ceph
  {{- end}}
  {{- $.Values.tpsrv.volumes | toYaml | nindent 2}}
  {{- if ($.Values.global.volumes) }}
    {{- $.Values.global.volumes | toYaml | nindent 2}}
  {{- end}}
  imagePullSecrets:
  {{ $imagePullSecrets | nindent 4 }}
---
{{- end}} # End of tape server count range loop
