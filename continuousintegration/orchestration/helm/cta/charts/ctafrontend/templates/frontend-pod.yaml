{{$namespace := .Release.Namespace }}
{{$name := include "ctafrontend.name" . }}

apiVersion: v1
kind: Pod
metadata:
  name: {{$name}}
  namespace: {{ $namespace | quote}}
  labels:
    k8s-app: {{$name}}
spec:
  restartPolicy: Never
  containers:
  - name: {{$name}}
    image: {{ include "ctafrontend.image" . }}
    imagePullPolicy: {{ include "ctafrontend.imagePullPolicy" . }}
    stdin: true
    env:
    - name: MY_NAME
      value: {{$name}}
    - name: MY_NAMESPACE
      value: {{ $namespace | quote}}
    - name: INSTANCE_NAME
      value: {{ $namespace | quote}}
    {{- if (.Values.env) }}
        {{- .Values.env | toYaml | nindent 4}}
    {{- end}}
    {{- if (.Values.customEntrypoint)}}
    command: {{.Values.customEntrypoint.command  | toJson}}
    args: {{.Values.customEntrypoint.args}}
    {{- end}}
    {{- if (.Values.readinessProbe)}}
    {{include "ctafrontend.readinessProbe" .Values.readinessProbe | nindent 4}}
    {{- end}}
    securityContext:
      privileged: {{ .Values.isPriviliged }}
    # tadamb
    {{- if (.Values.ports)}}
    ports:
        {{- .Values.ports | toYaml | nindent 4}}
    {{- end}}
    volumeMounts:
    - name: cta-conf-volume
      mountPath: /etc/cta/cta-catalogue.conf
      subPath: cta-catalogue.conf
    - name: cta-conf-volume
      mountPath: /etc/cta/cta-objectstore-tools.conf
      subPath: cta-objectstore-tools.conf
    - name: cta-conf-volume
      mountPath: /etc/cta/cta-frontend-xrootd.conf
      subPath: cta-frontend-xrootd.conf
    {{- if eq $.Values.global.scheduler.backend "ceph" }}
    - name: cta-ceph-volume
      mountPath: /etc/ceph
    {{- end }}
    {{ include "ctafrontend.volumeMounts" . | nindent 4 }}
  volumes:
  - name: cta-conf-volume
    configMap:
      name: etc-cta-ctafrontend
  {{- if eq $.Values.global.scheduler.backend "ceph" }}
  - name: cta-ceph-volume
    configMap:
      name: etc-ceph
  {{- end}}
  {{include "ctafrontend.volumes" . | nindent 2}}

  imagePullSecrets:
  {{ include "ctafrontend.imagePullSecrets" . | nindent 4 }}
