
nameOverride: init
isPriviliged: true

wipeCatalogue: true
wipeScheduler: true

# Changes the entrypoint of the image to the script and provide arguments if needed
customEntrypoint:
  command: ['/opt/run/bin/init.sh']
  args: ["none"]

global:
  image:
    registry: gitlab-registry.cern.ch/cta
    repository: ctageneric
    tag: ""
    pullPolicy: IfNotPresent
    pullSecrets: 
      - ctaregsecret
  # The connection parameters for the Scheduler and Catalogue
  # must be configured by the user of the Chart.
  scheduler:
    backend: ceph  # Options: file, ceph, postgres
    config:
      ceph:
        mon: ""
        monport: ""
        pool: ""
        namespace: ""
        id: ""
        key: ""
      postgres:
        username: ""
        password: ""
        database: ""
        server: ""
      file:
        path: ""

  catalogue:
    schemaVersion: ""
    backend: "" # Can be sqlite, orale or postgres.
    config:
      oracle:
        username: ""
        database: ""
        password: ""
      postgres:
        username: ""
        password: ""
        server: ""
        database: ""
      sqlite:
        filepath: ""

pvcs:
  claimstg:
    selectors:
      type: stg
    storage: 3Gi
    accessModes:
      - ReadWriteMany
  claimlogs:
    selectors:
      type: logs
    storage: 2Gi
    accessModes:
      - ReadWriteMany

volumeMounts:
- mountPath: /shared
  name: shared
# - mountPath: /etc/config/objectstore
#   name: myobjectstore
# - mountPath: /etc/config/database
#   name: mydatabase
# - mountPath: /etc/config/library
#   name: mylibrary
- mountPath: /mnt/logs
  name: logstorage


volumes:
- name: shared
  hostPath:
    path: /opt/cta
# - name: myobjectstore
#   configMap:
#     name: objectstore-config
# - name: mydatabase
#   configMap:
#     name: database-config
# - name: mylibrary
#   configMap:
#     name: library-config
- name: logstorage
  persistentVolumeClaim:
    claimName: claimlogs
