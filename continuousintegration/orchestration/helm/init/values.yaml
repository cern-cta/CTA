
nameOverride: init
isPriviliged: true

# The connection parameters for the Scheduler and Catalogue
# must be configured by the user of the Chart.
schedulerBackend: ceph   # Options: file, ceph, postgres
schedulerconfig:
  ceph:
    mon: ""
    monport: ""
    pool: ""
    namespace: ""
    id: ""
    key: ""
  postgres:
    username: ""
    password: ""
    database: ""
    sever: ""
  file:
    path: /shared/%NAMESPACE/objectstore

catalogueBackend: oracle # Can be sqlite, orale or postgres.
catalogueconfig:
  oracle:
    username: ""
    database: ""
    password: ""
  postgres:
    username: ""
    password: ""
    server: ""
    database: ""
  sqlite:
    file-path: ""


# Changes the entrypoint of the image to the script and provide arguments if needed
customEntrypoint:
  command: ['/opt/run/bin/init.sh']
  args: ["none"]

global:
  imagePullSecret: "ctaregsecret"
  # TODO: this should at some point be split into registry, image, and tag.
  # The tag should then always be empty and need to be set by the user
  # That prevents any confusing situations with existing nonsense tags
  image: gitlab-registry.cern.ch/cta/ctageneric:7894245git8a4cc01b

catalogue:
  schemaVersion: "15.0"

pvcs:
  claimstg:
    selectors:
      type: stg
    storage: 3Gi
    accessModes:
      - ReadWriteMany
  claimlogs:
    selectors:
      type: logs
    storage: 2Gi
    accessModes:
      - ReadWriteMany

env:
- name: KEEP_DATABASE
  value: "0"
- name: KEEP_OBJECTSTORE
  value: "0"


volumeMounts:
- mountPath: /shared
  name: shared
- mountPath: /etc/config/objectstore
  name: myobjectstore
- mountPath: /etc/config/database
  name: mydatabase
- mountPath: /etc/config/library
  name: mylibrary
- mountPath: /mnt/logs
  name: logstorage


volumes:
- name: shared
  hostPath:
    path: /opt/cta
- name: myobjectstore
  configMap:
    name: objectstore-config
- name: mydatabase
  configMap:
    name: database-config
- name: mylibrary
  configMap:
    name: library-config
- name: logstorage
  persistentVolumeClaim:
    claimName: claimlogs

# Catalogue
postgres:
  name: postgres
  service:
    ports:
    - name: postgres
      port: 5432
      protocol: TCP
  pod:
    image: docker.io/postgres:14.10
    env:
    - name: POSTGRES_USER
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.username
    - name: POSTGRES_PASSWORD
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.password
    - name: PGDATA
      value: /var/lib/postgresql/data/pgdata
    - name: POSTGRES_DB
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.database
