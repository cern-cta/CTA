{{- if .Values.resetTapes -}}
{{- $namespace := .Release.Namespace }}
{{- $uniqueLibraries := include "init.uniqueLibraryDevices" . | fromYaml -}}
{{ range $libraryDevice,$libraryType := $uniqueLibraries }}
{{- $name := "reset-tapes" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s-job" $name $libraryDevice }}
  namespace: {{ $namespace | quote}}
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      imagePullSecrets:
      {{- include "init.imagePullSecrets" $ | nindent 6 }}
      containers:
        - name: {{ $name }}
          image: {{ include "init.image" $ }}
          imagePullPolicy: {{ include "init.imagePullPolicy" $ }}
          command:
          - "/opt/run/bin/reset_tapes.sh"
          args: []
          securityContext:
            privileged: true # Because of the scsi commands
          stdin: true
          resources:
            requests:
              memory: "256Mi"
              ephemeral-storage: "128Mi"
            limits:
              memory: "2Gi"
              ephemeral-storage: "1Gi"
          env:
            - name: MY_NAME
              value: {{ $name }}
            - name: MY_NAMESPACE
              value: {{ $namespace | quote}}
            - name: INSTANCE_NAME
              value: {{ $namespace | quote}}
            - name: LIBRARY_DEVICE
              value: {{ $libraryDevice | quote }}
            - name: LIBRARY_TYPE
              value: {{ $libraryType | quote }}
          volumeMounts:
            - mountPath: /mnt/logs
              name: logstorage
            - mountPath: /shared
              name: shared
      volumes:
        - name: shared
          hostPath:
            path: /opt/cta
        - name: logstorage
          persistentVolumeClaim:
            claimName: claimlogs
{{- end }}
---
{{- end }}
