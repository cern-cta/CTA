{{- if .Values.updateDBTests.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: dbupdatetest
  labels:
    app.kubernetes.io/name: dbupdatetest
    # TODO: post hook?
spec:
  restartPolicy: Never
  containers:
  - name: dbupdatetest
    image: "{{ .Values.updateDBTests.image.registry }}/{{ .Values.updateDBTests.image.repository }}:{{ .Values.updateDBTests.image.tag }}"
    imagePullPolicy: {{ .Values.updateDBTests.image.pullPolicy }}
    stdin: true
    env:
    - name: MY_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: INSTANCE_NAME
      value: "$(MY_NAMESPACE)"
    - name: CATALOGUE_SOURCE_VERSION
      value: "{{ .Values.updateDBTests.catalogueSourceVersion }}"
    - name: CATALOGUE_DESTINATION_VERSION
      value: "{{ .Values.updateDBTests.catalogueDestinationVersion }}"
    - name: CTA_VERSION
      value: "{{ .Values.updateDBTests.ctaVersion }}"
    - name: COMMIT_ID
      value: "{{ .Values.updateDBTests.commitId }}"
    - name: TERM
      value: "xterm"
    command: ["/usr/bin/bash"]
    args: ["/shared/scripts/dbupdatetest.sh"]
    volumeMounts:
    - mountPath: /shared/etc_yum.repos.d
      name: repos
    - mountPath: /shared/scripts
      name: scripts
    - mountPath: /shared/etc_cta
      name: etccta
    - mountPath: /mnt/logs
      name: logstorage
    securityContext:
      privileged: true
# TODO: this does not yet have the correct catalogue-config
  volumes:
  - name: repos
    configMap:
      name: yum.repos.d-config
  - name: etccta
    configMap:
      name: cta-catalogue-config
  - name: scripts
    configMap:
      name: dbupdatetestscript-config
  - name: logstorage
    persistentVolumeClaim:
      claimName: claimlogs

  imagePullSecrets:
  - name: ctaregsecret #TODO
{{- end }}
