# Here are stored global settings for all the project pods
global: 
  imagePullSecret: "TODO"
  image: gitlab-registry.cern.ch/cta/ctageneric:78673git921a9300

# Here are stored values for the project related pods
cta:
    # TODO: Discuss about adding service type 
  services: 
    ctacli:
      labels: 
        k8s-app: ctacli
      selectors:
        k8s-app: ctacli
      ports:
      - name: ctacli
        port: 1
        protocol: TCP 
    ctafrontend:
      selectors:
        k8s-app: ctafrontend
      labels: 
        k8s-app: ctafrontend
      ports:
      - name: ctafrontend
        port: 10955
        protocol: TCP

  pods: 
    ctacli: 
      command: ['/opt/run/bin/ctacli.sh'] 
      args: ["none"]
      env: 
      - name: TERM
        value: "xterm"
      volumes: 
      - name: shared
        hostPath:
          path: /opt/cta
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: keytab 
        secret: 
          secretName: ctaadmin1-keytab
      volumeMounts: 
      - mountPath: /shared
        name: shared
      - mountPath: /mnt/logs
        name: logstorage
      - mountPath: /root/ctaadmin1.keytab
        name: keytab
        subPath: ctaadmin1.keytab
      isPriviliged: true

    ctafrontend:
      command: ['/opt/run/bin/ctafrontend.sh']
      args: ["none"]
      env:
      - name: TERM
        value: "xterm"
      ports:
      - containerPort: 10955
        name: ctafrontend
        protocol: TCP

      volumes: 
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: eosctaconfig
        configMap:
          name: eoscta-config
      - name: keytab 
        secret: 
          secretName: cta-frontend-keytab

      volumeMounts: 
      - mountPath: /shared
        name: shared
      - mountPath: /etc/config/objectstore
        name: myobjectstore
      - mountPath: /etc/config/database
        name: mydatabase
      - mountPath: /etc/config/library
        name: mylibrary
      - mountPath: /mnt/logs
        name: logstorage
      - mountPath: /etc/config/eoscta
        name: eosctaconfig
      - mountPath: /etc/cta/cta-frontend.krb5.keytab
        name: keytab
        subPath: cta-frontend.krb5.keytab
    
    client:
      image: gitlab-registry.cern.ch/cta/ctageneric:78673git921a9300
      command: ['/opt/run/bin/client.sh']
      args: ["none"]
      env:
      - name: TERM
        value: "xterm"
      volumeMounts:
      - mountPath: /shared
        name: shared
      - mountPath: /mnt/logs
        name: logstorage
      - mountPath: /etc/config/eos
        name: eosconfig
      - mountPath: /root/user1.keytab
        name: keytab
        subPath: user1.keytab
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: eosconfig
        configMap:
          name: eos-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: keytab 
        secret: 
          secretName: user1-keytab
  configs: 
    - name: krb5-config
      file: kdc-krb5.yaml
      labels: 
        config: keypass-names

    - name: keypass-names
      file: keypass-names.txt
      labels: 
        config: keypass-names

# Here are stored values for the pvc's
pvcs:
  claimstg:
    selectors:
      type: stg
    storage: 3Gi
    accessModes:
      - ReadWriteMany  
  claimlogs:
    selectors:
      type: logs
    storage: 2Gi
    accessModes:
      - ReadWriteMany  
  claimlibrary: 
    annotations:
      volume.beta.kubernetes.io/storage-class: "librarydevice"
    selectors:
      config: library
      type: mhvtl
    storage: 1Mi
    accessModes:
      - ReadWriteOnce  

# here will be stored the kdc config 
kdc: 
  # it is used for the selectors, names 
  name: kdc 
  # service account for kdc to be able to call k8s api
  serviceAccount: 
    name: secret-creator
    rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "list", "watch", "create"]

  service: 
    ports:
    - name: kdc-tcp
      port: 88
      protocol: TCP
    - name: kdc-udp
      port: 88
      protocol: UDP

  pod: 
    isPriviliged: true
    image: gitlab-registry.cern.ch/cta/ctageneric:78673git921a9300
    command: ['/opt/run/bin/kdc.sh']
    args: ['none']
    env: 
    - name: TERM
      value: "xterm"
    volumes:
    - name: shared
      hostPath:
        path: /opt/cta
    - name: logstorage
      persistentVolumeClaim:
        claimName: claimlogs
    - name: script
      configMap: 
        name: sandbox-script
        defaultMode: 0500
    - name: keypass-names
      configMap: 
        name: keypass-names-config
    - name: krb5-config-volume
      configMap: 
        name: krb5-config

    volumeMounts:
    - mountPath: /shared
      name: shared
    - mountPath: /mnt/logs
      name: logstorage
    - mountPath: /etc/krb5.conf
      name: krb5-config-volume
      subPath: krb5.conf
    - mountPath: /etc/scripts/script.sh
      name: script
      subPath: script.sh
    - name: keypass-names
      mountPath: /tmp/keypass-names.txt
      subPath: keypass-names.txt
    

# eos: 
# TODO: Add eos as dependency and set of values here 