# Here are stored global settings for all the project pods
global:
  imagePullSecret: "TODO"
  image: gitlab-registry.cern.ch/cta/ctageneric:7713827gitf24c5f5c

# Here are stored values for the project related pods
cta:
    # TODO: Discuss about adding service type
  services:
    ctacli:
      labels:
        k8s-app: ctacli
      selectors:
        k8s-app: ctacli
      ports:
      - name: ctacli
        port: 1
        protocol: TCP
    ctafrontend:
      selectors:
        k8s-app: ctafrontend
      labels:
        k8s-app: ctafrontend
      ports:
      - name: ctafrontend
        port: 10955
        protocol: TCP

  pods:
    init:
      containers:
      - command: ['/opt/run/bin/init.sh']
        args: ["none"]
        isPriviliged: true
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs

    ctacli:
      containers:
      - command: ['/opt/run/bin/ctacli.sh']
        args: ["none"]
        isPriviliged: true
        env:
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /root/ctaadmin1.keytab
          name: keytab
          subPath: ctaadmin1.keytab
        - mountPath: /etc/eos.keytab
          name: sss-keytab
          subPath: eos.keytab
          readOnly: true
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: keytab
        secret:
          secretName: ctaadmin1-keytab
      - name: sss-keytab
        secret:
          secretName: eos-sss-keytab

    ctafrontend:
      containers:
      - command: ['/opt/run/bin/ctafrontend.sh']
        args: ["none"]
        isPriviliged: true
        env:
        - name: TERM
          value: "xterm"
        ports:
        - containerPort: 10955
          name: ctafrontend
          protocol: TCP
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage
        # - mountPath: /etc/config/eoscta
        #   name: eosctaconfig
        - mountPath: /etc/cta/cta-frontend.krb5.keytab
          name: keytab
          subPath: cta-frontend.krb5.keytab
        - mountPath: /etc/cta/eos.sss.keytab
          name: sss-keytab
          subPath: eos.sss.keytab
          readOnly: true

      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      # - name: eosctaconfig
      #   configMap:
      #     name: eoscta-config
      - name: keytab
        secret:
          secretName: cta-frontend-keytab
      - name: sss-keytab
        secret:
          secretName: eos-sss-keytab
    client:
      containers:
      - command: ['/opt/run/bin/client.sh']
        args: ["none"]
        isPriviliged: true
        env:
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /mnt/logs
          name: logstorage
        # - mountPath: /etc/config/eos
        #   name: eosconfig
        - mountPath: /etc/eos.keytab
          name: sss-keytab
          subPath: eos.keytab
          readOnly: true
        - mountPath: /root/user1.keytab
          name: keytab
          subPath: user1.keytab
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      # - name: eosconfig
      #   configMap:
      #     name: eos-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: keytab
        secret:
          secretName: user1-keytab
      - name: sss-keytab
        secret:
          secretName: eos-sss-keytab

    tpsrv01:
      labels:
        k8s-app: ctataped
      containers:
      - name: rmcd
        isPriviliged: true
        command: ['/opt/run/bin/rmcd.sh']
        args: ["none"]
        env:
        - name: MY_CONTAINER
          value: "rmcd"
        - name: driveslot
          value: "0"
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage

      - name: taped
        isPriviliged: true
        command: ['/opt/run/bin/taped.sh']
        args: ["none"]
        env:
        - name: MY_CONTAINER
          value: "taped"
        - name: eoshost
          value: "mgm"
        - name: TERM
          value: "xterm"
        - name: driveslot
          value: "0"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /etc/config/eos
          name: eosconfig
        - mountPath: /mnt/logs
          name: logstorage

      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: eosconfig
        configMap:
          name: eos-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
    tpsrv02:
      labels:
        k8s-app: ctataped
      containers:
      - name: rmcd
        isPriviliged: true
        command: ['/opt/run/bin/rmcd.sh']
        args: ["none"]
        env:
        - name: MY_CONTAINER
          value: "rmcd"
        - name: driveslot
          value: "0"
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage

      - name: taped
        isPriviliged: true
        command: ['/opt/run/bin/taped.sh']
        args: ["none"]
        env:
        - name: MY_CONTAINER
          value: "taped"
        - name: eoshost
          value: "mgm"
        - name: TERM
          value: "xterm"
        - name: driveslot
          value: "0"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /etc/config/eos
          name: eosconfig
        - mountPath: /mnt/logs
          name: logstorage
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: eosconfig
        configMap:
          name: eos-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs

# Here are stored values for the pvc's
pvcs:
  claimstg:
    selectors:
      type: stg
    storage: 3Gi
    accessModes:
      - ReadWriteMany
  claimlogs:
    selectors:
      type: logs
    storage: 2Gi
    accessModes:
      - ReadWriteMany
  claimlibrary:
    annotations:
      volume.beta.kubernetes.io/storage-class: "librarydevice"
    selectors:
      config: library
      type: mhvtl
    storage: 1Mi
    accessModes:
      - ReadWriteOnce

# Here are stored ALL configMaps needed for the project to be build
configs:
  - name: objectstore-config
    labels:
      config: objectstore
      type: ceph
    data:
      objectstore.type: ceph
      objectstore.ceph.mon: cephmond.cern.ch
      objectstore.ceph.monport: "6790"
      objectstore.ceph.pool: tapetest
      objectstore.ceph.namespace: cta-julien
      objectstore.ceph.id: cta-julien
      objectstore.ceph.key: KEY
  - name: library-config
    labels:
      config: library
      type: mhvtl
    data:
      library.type: mhvtl
      library.name: VLSTK10
      library.device: sg30
      library.drivenames: (VDSTK11 VDSTK12 VDSTK13)
      library.drivedevices: (nst0 nst1 nst2)
      library.tapes: (V01001 V01002 V01003 V01004 V01005 V01006 V01007)
  - name: database-config
    labels:
      config: database
      type: postgres
    data:
      database.type: postgres
      database.postgres.username: cta
      database.postgres.password: cta
      database.postgres.database: cta
      database.postgres.path: /var/lib/postgresql/data/pgdata
      # postgres service points to the postgresql container in namespace
      database.postgres.server: postgres
  - name: krb5-config
    file: krb5.conf
    labels:
      config: keypass-config
  - name: keypass-names-config
    file: keypass-names.txt
    labels:
      config: keypass-names


# Here is stored postgress db config. It might be moved as external dependency,
postgres:
  name: postgres
  service:
    ports:
    - name: postgres
      port: 5432
      protocol: TCP
  pod:
    image: docker.io/postgres:14.10
    env:
    - name: POSTGRES_USER
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.username
    - name: POSTGRES_PASSWORD
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.password
    - name: PGDATA
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.path
    - name: POSTGRES_DB
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.database
# here will be stored the kdc config
kdc:
  # it is used for the selectors, names
  name: kdc
  serviceAccount:
    name: secret-creator
    rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "list", "watch", "create"]

  service:
    ports:
    - name: kdc-tcp
      port: 88
      protocol: TCP
    - name: kdc-udp
      port: 88
      protocol: UDP

  pod:
    isPriviliged: true
    image: gitlab-registry.cern.ch/cta/ctageneric:7741596git50472b32
    command: ['/opt/run/bin/kdc.sh']
    args: ['none']
    env:
    - name: TERM
      value: "xterm"
    volumeMounts:
    - mountPath: /shared
      name: shared
    - mountPath: /mnt/logs
      name: logstorage
    - mountPath: /etc/krb5.conf
      name: krb5-config-volume
      subPath: krb5.conf
    - name: keypass-names
      mountPath: /tmp/keypass-names.txt
      subPath: keypass-names.txt

    volumes:
    - name: shared
      hostPath:
        path: /opt/cta
    - name: logstorage
      persistentVolumeClaim:
        claimName: claimlogs
    - name: keypass-names
      configMap:
        name: keypass-names-config
    - name: krb5-config-volume
      configMap:
        name: krb5-config


eos:
  global:
    repository: gitlab-registry.cern.ch/dss/eos/eos-all
    tag: 5.0.31


    #
    # SSS keytab for the eos cluster
    #   All the components (qdb, mq, fst, mgm) will use the keytab specified here.
    #   Options:
    #   - secret: Use an existing secret (containing the eos keytab) by providing its name
    #             Takes priority over 'file' option (see below).
    #   - file: Path to a file storing the keytab. The secret 'eos-sss-keytab' will be generated from it.
    #             Defaults to 'files/eos.keytab'
    sssKeytab:
      secret: eos-sss-keytab


    #
    # Define the security context for all containers.
    #   Docs at https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    #
    #  Default: Containers are not provileged and privilege escalation is not allowed.
    securityContext:
      privileged:
      allowPrivilegeEscalation:

    #
    # Allow HTTP access.
    #
    # Default: false
    http:
      enabled: false
