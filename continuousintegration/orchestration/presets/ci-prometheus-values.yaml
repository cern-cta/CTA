extraScrapeConfigs: |
  - job_name: "otel-collector"
    static_configs:
      - targets:
        - otel-opentelemetry-collector:8889

rbac:
  create: true

alertmanager:
  enabled: false

kube-state-metrics:
  enabled: true

# We want to get metrics on CPU/memory usage
prometheus-node-exporter:
  enabled: true

prometheus-pushgateway:
  enabled: false

server:
  global:
    # For CI, we scrape rather frequently to get some more interesting graphs
    scrape_interval: 10s
    scrape_timeout: 3s

  persistentVolume:
    enabled: false

  extraSecretMounts:
    - name: prometheus-remote-write-secret
      mountPath: /etc/prometheus/secrets/remote-write
      secretName: prometheus-remote-write-secret
      readOnly: true

  remoteWrite:
    - url: "http://monit-prom-lts.cern.ch/api/v1/push"
      basic_auth:
        username_file: /etc/prometheus/secrets/remote-write/username
        password_file: /etc/prometheus/secrets/remote-write/password
      # Remote write only the time series starting with the given prefix.
      # Important so that we don't explode the cardinality of the central DB
      write_relabel_configs:
        - source_labels: ["__name__"]
          regex: "ci.*"
          action: keep

# Note that these max_over_time functions are designed such that we can get a total count on any counters.
# For CI this is useful, but production this is not feasible, as the time frame would need to be too long.
# However, for production, one is typically only interested in rates, so the only constraint there
# would be for the max_over_time time frame to be longer than whatever the rate queries will use.
serverFiles:
  recording_rules.yml:
    groups:
    - name: ci-metrics
      interval: 15s
      rules:
      # Database
      - record: ci_db_client_connection_count
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, db_namespace, db_system_name) (max_over_time(db_client_connection_count[1d]))
      - record: ci_db_client_operation_duration_milliseconds_bucket
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, db_namespace, db_system_name, le) (max_over_time(db_client_operation_duration_milliseconds_bucket{le=~"5.0|10.0|50.0|100.0|500.0|1000.0|5000.0|10000.0|100000.0|\\+Inf"}[1d]))
      - record: ci_db_client_operation_duration_milliseconds_count
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, db_namespace, db_system_name) (max_over_time(db_client_operation_duration_milliseconds_count[1d]))
      # Frontend
      - record: ci_cta_frontend_request_duration_milliseconds_bucket
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, event_name, le) (max_over_time(cta_frontend_request_duration_milliseconds_bucket{le=~"5.0|10.0|50.0|100.0|500.0|1000.0|5000.0|10000.0|100000.0|\\+Inf"}[1d]))
      - record: ci_cta_frontend_request_duration_milliseconds_count
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, event_name) (max_over_time(cta_frontend_request_duration_milliseconds_count[1d]))
      # Scheduler
      - record: ci_cta_scheduler_queueing_count_total
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, transfer_direction) (max_over_time(cta_scheduler_queueing_count_total[1d]))
      - record: ci_cta_objectstore_lock_acquire_duration_milliseconds_bucket
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, lock_type, le) (max_over_time(cta_objectstore_lock_acquire_duration_milliseconds_bucket{le=~"5.0|10.0|50.0|100.0|500.0|1000.0|5000.0|10000.0|100000.0|\\+Inf"}[1d]))
      - record: ci_cta_objectstore_lock_acquire_duration_milliseconds_count
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, lock_type) (max_over_time(cta_objectstore_lock_acquire_duration_milliseconds_count[1d]))
      # Taped
      - record: ci_cta_taped_mount_count_total
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, transfer_direction) (max_over_time(cta_taped_mount_count_total[1d]))
      - record: ci_cta_taped_transfer_count_total
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, transfer_direction) (max_over_time(cta_taped_transfer_count_total[1d]))
      - record: ci_cta_taped_thread_count
        expr: |
          sum by (service_namespace, service_name, service_version, process_title, host_name, scheduler_backend_name, transfer_direction, thread_pool_name) (max_over_time(cta_taped_thread_count[1d]))
      # Kube State Metrics
      - record: ci_pod_cpu_system_seconds_total
        expr: |
          sum by (instance, pod, namespace) (rate(container_cpu_system_seconds_total{container="",pod=~"cta.*|eos.*"}[1m]))
      - record: ci_pod_memory_working_set_bytes
        expr: |
          sum by (instance, pod, namespace) (container_memory_working_set_bytes{container="", pod=~"cta.*|eos.*"})
      - record: ci_pod_disk_read_throughput
        expr: |
          sum by (instance, namespace, pod) (rate(container_fs_reads_bytes_total{pod=~"cta.*|eos.*"}[1m]))
      - record: ci_pod_disk_write_throughput
        expr: |
          sum by (instance, namespace, pod) (rate(container_fs_writes_bytes_total{pod=~"cta.*|eos.*"}[1m]))
      # Node exporter
      - record: ci_node_cpu_usage_percentage
        expr: |
          100 * (1 - avg by (instance,namespace,node) (rate(node_cpu_seconds_total{mode="idle"}[1m])))
      - record: ci_node_memory_usage_percentage
        expr: |
          sum by (instance,namespace,node) ((1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100)
      - record: ci_node_disk_read_throughput
        expr: |
          sum by (instance,namespace,node) (rate(node_disk_read_bytes_total[1m]))
      - record: ci_node_disk_write_throughput
        expr: |
          sum by (instance,namespace,node) (rate(node_disk_written_bytes_total[1m]))



