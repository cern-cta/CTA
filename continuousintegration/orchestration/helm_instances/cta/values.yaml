# Here are stored global settings for all the project pods
global:
  imagePullSecret: "ctaregsecret"
  image: gitlab-registry.cern.ch/cta/ctageneric:7894245git8a4cc01b
  volumes:
  - name: versionlock-list
    configMap:
      name: versionlock-conf
  volumeMounts:
  - mountPath: /etc/dnf/plugins/versionlock.list
    name: versionlock-list
    subPath: versionlock.list

# only temporary
ctaoesName: "ctaeos"
# Here are stored values for the project related pods
cta:
    # TODO: Discuss about adding service type
  services:
    ctacli:
      labels:
        k8s-app: ctacli
      selectors:
        k8s-app: ctacli
      ports:
      - name: ctacli
        port: 1
        protocol: TCP
    ctafrontend:
      selectors:
        k8s-app: ctafrontend
      labels:
        k8s-app: ctafrontend
      ports:
      - name: ctafrontend
        port: 10955
        protocol: TCP
    ctaeos:
      selectors:
        k8s-app: ctaeos-mgm
      labels:
        k8s-app: ctaeos-mgm
      ports:
      - name: ctaeos-mgm
        port: 1094
        protocol: TCP
  pods:
    ctacli:
      containers:
      - command: ["/bin/sh", "-c"]
        args:
        - |
          cat /tmp/eos.keytab > /etc/eos.keytab;
          chmod 600 /etc/eos.keytab;
          /opt/run/bin/ctacli.sh
        isPriviliged: true
        env:
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /root/ctaadmin1.keytab
          name: keytab
          subPath: ctaadmin1.keytab
        - mountPath: /tmp/eos.keytab
          name: sss-keytab
          subPath: eos.keytab
        - mountPath: /etc/krb5.conf
          name: krb5-config-volume
          subPath: krb5.conf
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: keytab
        secret:
          secretName: ctaadmin1-keytab
      - name: sss-keytab
        secret:
          defaultMode: 400
          secretName: eos-sss-keytab
      - name: krb5-config-volume
        configMap:
          name: krb5-config

    ctafrontend:
      containers:
      - image: gitlab-registry.cern.ch/cta/ctageneric:7894245git8a4cc01b
        command: ["/bin/sh", "-c"]
        args:
        - |
          cat /etc/cta/eos-tmp.sss.keytab > /etc/cta/eos.sss.keytab.tmp;
          chmod 400 /etc/cta/eos.sss.keytab.tmp;
          mv /etc/cta/eos.sss.keytab.tmp /etc/cta/eos.sss.keytab;
          /opt/run/bin/ctafrontend.sh;
        isPriviliged: true
        commandsAtRuntime: [ "chown", "cta", "/etc/cta/eos.sss.keytab"]
        delay: 10
        failureTolerance: 10
        env:
        - name: TERM
          value: "xterm"
        ports:
        - containerPort: 10955
          name: ctafrontend
          protocol: TCP
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /etc/cta/eos.grpc.keytab
          subPath: eos.grpc.keytab
          name: eosctaconfig
        - mountPath: /etc/cta/cta-frontend.krb5.keytab
          name: keytab
          subPath: cta-frontend.krb5.keytab
        - mountPath: /etc/cta/eos-tmp.sss.keytab
          name: sss-keytab
          subPath: eos-tmp.sss.keytab
        - mountPath: /etc/krb5.conf
          name: krb5-config-volume
          subPath: krb5.conf
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: eosctaconfig
        configMap:
          name: eos-grpc-keytab
      - name: keytab
        secret:
          secretName: cta-frontend-keytab
      - name: sss-keytab
        secret:
          secretName: frontend-sss-keytab
      - name: krb5-config-volume
        configMap:
          name: krb5-config
    client:
      containers:
      - command: ["/bin/sh", "-c"]
        args:
        - |
          cat /tmp/eos.keytab > /etc/eos.keytab;
          chmod 600 /etc/eos.keytab;
          /opt/run/bin/client.sh;
        isPriviliged: true
        env:
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /etc/config/eos
          name: eosconfig
        - mountPath: /tmp/eos.keytab
          name: sss-keytab
          subPath: eos.keytab
        - mountPath: /etc/krb5.conf
          name: krb5-config-volume
          subPath: krb5.conf
        - mountPath: /root/user1.keytab
          name: user1-keytab
          subPath: user1.keytab
        - mountPath: /root/eosadmin1.keytab
          name: eosadmin1-keytab
          subPath: eosadmin1.keytab
        - mountPath: /root/poweruser1.keytab
          name: poweruser1-keytab
          subPath: poweruser1.keytab
        - mountPath: /root/ctaadmin2.keytab
          name: ctaadmin2-keytab
          subPath: ctaadmin2.keytab
        # # - mountPath: /etc/grid-security/certificates/
        #   name: ca-certs
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: eosconfig
        configMap:
          name: eos-config-base
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: sss-keytab
        secret:
          secretName: eos-sss-keytab
      - name: krb5-config-volume
        configMap:
          name: krb5-config
      - name: user1-keytab
        secret:
          secretName: user1-keytab
      - name: eosadmin1-keytab
        secret:
          secretName: eosadmin1-keytab
      - name: poweruser1-keytab
        secret:
          secretName: poweruser1-keytab
      - name: ctaadmin2-keytab
        secret:
          secretName: ctaadmin2-keytab
      # - name: ca-certs
      #   secret:
      #     secretName: ca-certs

    tpsrv01:
      labels:
        k8s-app: ctataped
      containers:
      - name: rmcd
        isPriviliged: true
        command: ['/opt/run/bin/rmcd.sh']
        args: ["none"]
        env:
        - name: MY_CONTAINER
          value: "rmcd"
        - name: driveslot
          value: "0"
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage

      - name: taped
        isPriviliged: true
        command: ["/bin/sh", "-c"]
        # Not moving chown here due to the fact that the user might not yet exists
        args:
        - |
          cat /tmp/dump/cta/cta-taped-tmp.sss.keytab > /etc/cta/cta-taped.sss.keytab;
          chmod 600 /etc/cta/cta-taped.sss.keytab;
          /opt/run/bin/taped.sh;
        env:
        - name: MY_CONTAINER
          value: "taped"
        - name: eoshost
          value: "mgm"
        - name: TERM
          value: "xterm"
        - name: driveslot
          value: "0"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /etc/config/eos
          name: eosconfig
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /tmp/dump/cta/cta-taped-tmp.sss.keytab
          name: tape-sss
          subPath: cta-taped-tmp.sss.keytab
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: eosconfig
        configMap:
          name: eos-config-base
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: tape-sss
        secret:
          secretName: tapes-sss-keytab
    tpsrv02:
      labels:
        k8s-app: ctataped
      containers:
      - name: rmcd
        isPriviliged: true
        command: ['/opt/run/bin/rmcd.sh']
        args: ["none"]
        env:
        - name: MY_CONTAINER
          value: "rmcd"
        - name: driveslot
          value: "1"
        - name: TERM
          value: "xterm"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /mnt/logs
          name: logstorage

      - name: taped
        isPriviliged: true
        command: ["/bin/sh", "-c"]
        # Not moving chown here due to the fact that the user might not yet exists
        args:
        - |
          cat /tmp/dump/cta/cta-taped-tmp.sss.keytab > /etc/cta/cta-taped.sss.keytab;
          chmod 600 /etc/cta/cta-taped.sss.keytab;
          /opt/run/bin/taped.sh;
        env:
        - name: MY_CONTAINER
          value: "taped"
        - name: eoshost
          value: "mgm"
        - name: TERM
          value: "xterm"
        - name: driveslot
          value: "1"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /etc/config/objectstore
          name: myobjectstore
        - mountPath: /etc/config/database
          name: mydatabase
        - mountPath: /etc/config/library
          name: mylibrary
        - mountPath: /etc/config/eos
          name: eosconfig
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /tmp/dump/cta/cta-taped-tmp.sss.keytab
          name: tape-sss
          subPath: cta-taped-tmp.sss.keytab
      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: myobjectstore
        configMap:
          name: objectstore-config
      - name: mydatabase
        configMap:
          name: database-config
      - name: mylibrary
        configMap:
          name: library-config
      - name: eosconfig
        configMap:
          name: eos-config-base
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: tape-sss
        secret:
          secretName: tapes-sss-keytab

    ctaeos:
      labels:
        k8s-app: ctaeos-mgm
      containers:
      - name: mgm
        isPriviliged: true
        env:
        - name: frontend
          value: 'cta-frontend:10955'
        - name: TERM
          value: "xterm"
        command: ["/bin/sh", "-c"]
        args:
        - |
          cat /tmp/eos.keytab > /etc/eos.keytab;
          chmod 400 /etc/eos.keytab;
          /opt/run/bin/ctaeos-mgm-log-wrapper.sh
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /mnt/logs
          name: logstorage
        - mountPath: /fst
          name: stgstorage
        - mountPath: /etc/config/eos
          name: eosconfig
        - mountPath: /etc/config/eoscta
          name: eosctaconfig
        - mountPath: /etc/krb5.conf
          name: krb5-config-volume
          subPath: krb5.conf
        - mountPath: /etc/eos-server.krb5.keytab
          name: keytab
          subPath: eos-server.krb5.keytab
        - mountPath: /tmp/eos.keytab
          name: sss-keytab
          subPath: eos.keytab
        - mountPath: /etc/cta/castor-migration.conf
          name: migration-conf
          subPath: castor-migration.conf
        - mountPath: /etc/xrd.cf.mgm
          name: xrd-mgm-config
          subPath: xrd.cf.mgm
        - mountPath: /etc/xrd.cf.fst
          name: xrd-fst-config
          subPath: xrd.cf.fst
        - mountPath: /etc/xrootd-quarkdb.cfg
          name: eos-config-quarkdb
          subPath: xrootd-quarkdb.cfg
        - mountPath: /etc/sysconfig/eos
          name: eos-sysconfig
          subPath: eos

      volumes:
      - name: shared
        hostPath:
          path: /opt/cta
      - name: logstorage
        persistentVolumeClaim:
          claimName: claimlogs
      - name: stgstorage
        persistentVolumeClaim:
          claimName: claimstg
      - name: eosconfig
        configMap:
          name: eos-config-base
      - name: eosctaconfig
        configMap:
          name: eos-grpc-keytab
      - name: krb5-config-volume
        configMap:
          name: krb5-config
      - name: keytab
        secret:
          secretName: eos-server-keytab
      - name: sss-keytab
        secret:
          secretName: eos-sss-keytab
      - name: migration-conf
        configMap:
          name: castor-migration-conf
      - name: xrd-mgm-config
        configMap:
          name: eos-config-mgm
      - name: xrd-fst-config
        configMap:
          name: eos-config-fst
      - name: eos-config-quarkdb
        configMap:
          name: eos-config-quarkdb
      - name: eos-sysconfig
        configMap:
          name: eos-sysconfig


# Here you can store all additional configs that you would wish to generate
configs:


eos:
  global:
    repository: gitlab-registry.cern.ch/dss/eos/eos-all
    tag: 5.2.22


    #
    # SSS keytab for the eos cluster
    #   All the components (qdb, mq, fst, mgm) will use the keytab specified here.
    #   Options:
    #   - secret: Use an existing secret (containing the eos keytab) by providing its name
    #             Takes priority over 'file' option (see below).
    #   - file: Path to a file storing the keytab. The secret 'eos-sss-keytab' will be generated from it.
    #             Defaults to 'files/eos.keytab'
    sssKeytab:
      secret: eos-sss-keytab


    #
    # Define the security context for all containers.
    #   Docs at https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    #
    #  Default: Containers are not provileged and privilege escalation is not allowed.
    securityContext:
      privileged:
      allowPrivilegeEscalation:

    #
    # Allow HTTP access.
    #
    # Default: false
    http:
      enabled: false

  mgm:
    extraVolumes:
      volumes:
      - name: ca-certs
        secret:
          secretName: ca-certs
      volumeMounts:
      - mountPath: /etc/grid-security/certificates/
        name: ca-certs

