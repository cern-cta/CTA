
nameOverride: init
isPriviliged: true

# Changes the entrypoint of the image to the script and provide arguments if needed

customEntrypoint:
  command: ['/opt/run/bin/init.sh']
  args: ["none"]

global:
  imagePullSecret: "ctaregsecret"
  image: gitlab-registry.cern.ch/cta/ctageneric:7894245git8a4cc01b

pvcs:
  claimstg:
    selectors:
      type: stg
    storage: 3Gi
    accessModes:
      - ReadWriteMany
  claimlogs:
    selectors:
      type: logs
    storage: 2Gi
    accessModes:
      - ReadWriteMany

env:
# First two are another whacky hacky way by just creating configmap in cmd on line 244
- name: KEEP_DATABASE
  value: "0"
- name: KEEP_OBJECTSTORE
  value: "0"
# It is used by some hacky find and grep on 309 and 151 line of create_instance.sh
- name: SCHEMA_VERSION
  value: "15.0"


volumeMounts:
- mountPath: /shared
  name: shared
- mountPath: /etc/config/objectstore
  name: myobjectstore
- mountPath: /etc/config/database
  name: mydatabase
- mountPath: /etc/config/library
  name: mylibrary
- mountPath: /mnt/logs
  name: logstorage


volumes:
- name: shared
  hostPath:
    path: /opt/cta
- name: myobjectstore
  configMap:
    name: objectstore-config
- name: mydatabase
  configMap:
    name: database-config
- name: mylibrary
  configMap:
    name: library-config
- name: logstorage
  persistentVolumeClaim:
    claimName: claimlogs




postgres:
  name: postgres
  service:
    ports:
    - name: postgres
      port: 5432
      protocol: TCP
  pod:
    image: docker.io/postgres:14.10
    env:
    - name: POSTGRES_USER
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.username
    - name: POSTGRES_PASSWORD
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.password
    - name: PGDATA
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.path
    - name: POSTGRES_DB
      valueFrom:
        configMapKeyRef:
          name: database-config
          key: database.postgres.database
