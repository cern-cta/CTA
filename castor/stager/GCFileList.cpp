/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

// Include Files
#include "castor/ObjectSet.hpp"
#include "castor/stager/GCFile.hpp"
#include "castor/stager/GCFileList.hpp"
#include "castor/stager/Request.hpp"
#include <iostream>
#include <string>
#include <vector>

//------------------------------------------------------------------------------
// Constructor
//------------------------------------------------------------------------------
castor::stager::GCFileList::GCFileList() throw() :
  Request() {
};

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
castor::stager::GCFileList::~GCFileList() throw() {
  for (unsigned int i = 0; i < m_filesVector.size(); i++) {
    m_filesVector[i]->setRequest(0);
    delete m_filesVector[i];
  }
  m_filesVector.clear();
};

//------------------------------------------------------------------------------
// print
//------------------------------------------------------------------------------
void castor::stager::GCFileList::print(std::ostream& stream,
                                       std::string indent,
                                       castor::ObjectSet& alreadyPrinted) const {
  stream << indent << "[# GCFileList #]" << std::endl;
  if (alreadyPrinted.find(this) != alreadyPrinted.end()) {
    // Circular dependency, this object was already printed
    stream << indent << "Back pointer, see above" << std::endl;
    return;
  }
  // Call print on the parent class(es)
  this->Request::print(stream, indent, alreadyPrinted);
  alreadyPrinted.insert(this);
  {
    stream << indent << "Files : " << std::endl;
    int i;
    std::vector<GCFile*>::const_iterator it;
    for (it = m_filesVector.begin(), i = 0;
         it != m_filesVector.end();
         it++, i++) {
      stream << indent << "  " << i << " :" << std::endl;
      (*it)->print(stream, indent + "    ", alreadyPrinted);
    }
  }
}

//------------------------------------------------------------------------------
// print
//------------------------------------------------------------------------------
void castor::stager::GCFileList::print() const {
  castor::ObjectSet alreadyPrinted;
  print(std::cout, "", alreadyPrinted);
}

