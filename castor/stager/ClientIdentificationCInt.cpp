/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/stager/ClientIdentificationCInt.cpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

// Include Files
#include "castor/IObject.hpp"
#include "castor/stager/ClientIdentification.hpp"
#include "osdep.h"

extern "C" {

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_create
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_create(castor::stager::ClientIdentification** obj) {
    *obj = new castor::stager::ClientIdentification();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_delete
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_delete(castor::stager::ClientIdentification* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Cstager_ClientIdentification_getIObject(castor::stager::ClientIdentification* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_fromIObject
  //----------------------------------------------------------------------------
  castor::stager::ClientIdentification* Cstager_ClientIdentification_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::stager::ClientIdentification*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_print
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_print(castor::stager::ClientIdentification* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_TYPE
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_TYPE(int* ret) {
    *ret = castor::stager::ClientIdentification::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_type
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_type(castor::stager::ClientIdentification* instance,
                                        int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_clone
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_clone(castor::stager::ClientIdentification* instance,
                                         castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_machine
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_machine(castor::stager::ClientIdentification* instance, const char** var) {
    *var = instance->machine().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setMachine
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setMachine(castor::stager::ClientIdentification* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setMachine(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_userName
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_userName(castor::stager::ClientIdentification* instance, const char** var) {
    *var = instance->userName().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setUserName
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setUserName(castor::stager::ClientIdentification* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setUserName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_port
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_port(castor::stager::ClientIdentification* instance, int* var) {
    *var = instance->port();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setPort
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setPort(castor::stager::ClientIdentification* instance, int new_var) {
    instance->setPort(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_euid
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_euid(castor::stager::ClientIdentification* instance, int* var) {
    *var = instance->euid();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setEuid
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setEuid(castor::stager::ClientIdentification* instance, int new_var) {
    instance->setEuid(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_egid
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_egid(castor::stager::ClientIdentification* instance, int* var) {
    *var = instance->egid();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setEgid
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setEgid(castor::stager::ClientIdentification* instance, int new_var) {
    instance->setEgid(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_magic
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_magic(castor::stager::ClientIdentification* instance, int* var) {
    *var = instance->magic();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setMagic
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setMagic(castor::stager::ClientIdentification* instance, int new_var) {
    instance->setMagic(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_id
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_id(castor::stager::ClientIdentification* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_ClientIdentification_setId
  //----------------------------------------------------------------------------
  int Cstager_ClientIdentification_setId(castor::stager::ClientIdentification* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

} // End of extern "C"
