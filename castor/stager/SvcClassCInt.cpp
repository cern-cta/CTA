/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

// Include Files
#include "castor/IObject.hpp"
#include "castor/stager/DiskPool.hpp"
#include "castor/stager/SvcClass.hpp"
#include "castor/stager/TapePool.hpp"
#include "osdep.h"
#include <vector>

extern "C" {

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_create
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_create(castor::stager::SvcClass** obj) {
    *obj = new castor::stager::SvcClass();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Cstager_SvcClass_delete
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_delete(castor::stager::SvcClass* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Cstager_SvcClass_getIObject(castor::stager::SvcClass* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_fromIObject
  //----------------------------------------------------------------------------
  castor::stager::SvcClass* Cstager_SvcClass_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::stager::SvcClass*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_print
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_print(castor::stager::SvcClass* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_TYPE
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_TYPE(int* ret) {
    *ret = castor::stager::SvcClass::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_type
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_type(castor::stager::SvcClass* instance,
                            int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_clone
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_clone(castor::stager::SvcClass* instance,
                             castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_nbDrives
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_nbDrives(castor::stager::SvcClass* instance, unsigned int* var) {
    *var = instance->nbDrives();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setNbDrives
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setNbDrives(castor::stager::SvcClass* instance, unsigned int new_var) {
    instance->setNbDrives(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_name
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_name(castor::stager::SvcClass* instance, const char** var) {
    *var = instance->name().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setName
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setName(castor::stager::SvcClass* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_defaultFileSize
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_defaultFileSize(castor::stager::SvcClass* instance, u_signed64* var) {
    *var = instance->defaultFileSize();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setDefaultFileSize
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setDefaultFileSize(castor::stager::SvcClass* instance, u_signed64 new_var) {
    instance->setDefaultFileSize(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_maxReplicaNb
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_maxReplicaNb(castor::stager::SvcClass* instance, int* var) {
    *var = instance->maxReplicaNb();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setMaxReplicaNb
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setMaxReplicaNb(castor::stager::SvcClass* instance, int new_var) {
    instance->setMaxReplicaNb(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_replicationPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_replicationPolicy(castor::stager::SvcClass* instance, const char** var) {
    *var = instance->replicationPolicy().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setReplicationPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setReplicationPolicy(castor::stager::SvcClass* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setReplicationPolicy(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_gcPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_gcPolicy(castor::stager::SvcClass* instance, const char** var) {
    *var = instance->gcPolicy().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setGcPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setGcPolicy(castor::stager::SvcClass* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setGcPolicy(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_migratorPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_migratorPolicy(castor::stager::SvcClass* instance, const char** var) {
    *var = instance->migratorPolicy().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setMigratorPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setMigratorPolicy(castor::stager::SvcClass* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setMigratorPolicy(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_recallerPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_recallerPolicy(castor::stager::SvcClass* instance, const char** var) {
    *var = instance->recallerPolicy().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setRecallerPolicy
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setRecallerPolicy(castor::stager::SvcClass* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setRecallerPolicy(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_id
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_id(castor::stager::SvcClass* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_setId
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_setId(castor::stager::SvcClass* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_addTapePools
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_addTapePools(castor::stager::SvcClass* instance, castor::stager::TapePool* obj) {
    instance->addTapePools(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_removeTapePools
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_removeTapePools(castor::stager::SvcClass* instance, castor::stager::TapePool* obj) {
    instance->removeTapePools(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_tapePools
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_tapePools(castor::stager::SvcClass* instance, castor::stager::TapePool*** var, int* len) {
    std::vector<castor::stager::TapePool*>& result = instance->tapePools();
    *len = result.size();
    *var = (castor::stager::TapePool**) malloc((*len) * sizeof(castor::stager::TapePool*));
    for (int i = 0; i < *len; i++) {
      (*var)[i] = result[i];
    }
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_addDiskPools
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_addDiskPools(castor::stager::SvcClass* instance, castor::stager::DiskPool* obj) {
    instance->addDiskPools(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_removeDiskPools
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_removeDiskPools(castor::stager::SvcClass* instance, castor::stager::DiskPool* obj) {
    instance->removeDiskPools(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cstager_SvcClass_diskPools
  //----------------------------------------------------------------------------
  int Cstager_SvcClass_diskPools(castor::stager::SvcClass* instance, castor::stager::DiskPool*** var, int* len) {
    std::vector<castor::stager::DiskPool*>& result = instance->diskPools();
    *len = result.size();
    *var = (castor::stager::DiskPool**) malloc((*len) * sizeof(castor::stager::DiskPool*));
    for (int i = 0; i < *len; i++) {
      (*var)[i] = result[i];
    }
    return 0;
  }

} // End of extern "C"
