/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

// Include Files
#include "castor/Constants.hpp"
#include "castor/IObject.hpp"
#include "castor/ObjectSet.hpp"
#include "castor/stager/DiskCopyInfo.hpp"
#include "osdep.h"
#include <iostream>
#include <string>

//------------------------------------------------------------------------------
// Constructor
//------------------------------------------------------------------------------
castor::stager::DiskCopyInfo::DiskCopyInfo() throw() :
  m_DiskCopyPath(""),
  m_size(0),
  m_diskCopyStatus(0),
  m_tapeCopyStatus(0),
  m_segmentStatus(0),
  m_DiskCopyId(0),
  m_fileId(0),
  m_nsHost(""),
  m_diskServer(""),
  m_mountPoint(""),
  m_nbAccesses(0),
  m_lastKnownFileName(""),
  m_id(0) {
};

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
castor::stager::DiskCopyInfo::~DiskCopyInfo() throw() {
};

//------------------------------------------------------------------------------
// print
//------------------------------------------------------------------------------
void castor::stager::DiskCopyInfo::print(std::ostream& stream,
                                         std::string indent,
                                         castor::ObjectSet& alreadyPrinted) const {
  stream << indent << "[# DiskCopyInfo #]" << std::endl;
  if (alreadyPrinted.find(this) != alreadyPrinted.end()) {
    // Circular dependency, this object was already printed
    stream << indent << "Back pointer, see above" << std::endl;
    return;
  }
  // Output of all members
  stream << indent << "DiskCopyPath : " << m_DiskCopyPath << std::endl;
  stream << indent << "size : " << m_size << std::endl;
  stream << indent << "diskCopyStatus : " << m_diskCopyStatus << std::endl;
  stream << indent << "tapeCopyStatus : " << m_tapeCopyStatus << std::endl;
  stream << indent << "segmentStatus : " << m_segmentStatus << std::endl;
  stream << indent << "DiskCopyId : " << m_DiskCopyId << std::endl;
  stream << indent << "fileId : " << m_fileId << std::endl;
  stream << indent << "nsHost : " << m_nsHost << std::endl;
  stream << indent << "diskServer : " << m_diskServer << std::endl;
  stream << indent << "mountPoint : " << m_mountPoint << std::endl;
  stream << indent << "nbAccesses : " << m_nbAccesses << std::endl;
  stream << indent << "lastKnownFileName : " << m_lastKnownFileName << std::endl;
  stream << indent << "id : " << m_id << std::endl;
  alreadyPrinted.insert(this);
}

//------------------------------------------------------------------------------
// print
//------------------------------------------------------------------------------
void castor::stager::DiskCopyInfo::print() const {
  castor::ObjectSet alreadyPrinted;
  print(std::cout, "", alreadyPrinted);
}

//------------------------------------------------------------------------------
// TYPE
//------------------------------------------------------------------------------
int castor::stager::DiskCopyInfo::TYPE() {
  return OBJ_DiskCopyInfo;
}

//------------------------------------------------------------------------------
// type
//------------------------------------------------------------------------------
int castor::stager::DiskCopyInfo::type() const {
  return TYPE();
}

//------------------------------------------------------------------------------
// clone
//------------------------------------------------------------------------------
castor::IObject* castor::stager::DiskCopyInfo::clone() {
  return new DiskCopyInfo(*this);
}

