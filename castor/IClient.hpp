/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

#ifndef CASTOR_ICLIENT_HPP
#define CASTOR_ICLIENT_HPP

// Include Files
#include "castor/IObject.hpp"
#include <iostream>
#include <string>

namespace castor {

  // Forward declarations
  class ObjectSet;

  /**
   * class IClient
   * A generic abstract base class for castor clients
   */
  class IClient : public virtual IObject {

  public:

    /**
     * Empty Constructor
     */
    IClient() throw();

    /**
     * Empty Destructor
     */
    virtual ~IClient() throw();

    /**
     * Outputs this object in a human readable format
     * @param stream The stream where to print this object
     * @param indent The indentation to use
     * @param alreadyPrinted The set of objects already printed.
     * This is to avoid looping when printing circular dependencies
     */
    virtual void print(std::ostream& stream,
                       std::string indent,
                       castor::ObjectSet& alreadyPrinted) const;

    /**
     * Outputs this object in a human readable format
     */
    virtual void print() const;

  private:

  }; // end of class IClient

}; // end of namespace castor

#endif // CASTOR_ICLIENT_HPP
