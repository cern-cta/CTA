/* This file was generated by ./MigHunterDlfMessagesCodeGenerator on Mon Jan 25 17:44:24 CET 2010
 */

/******************************************************************************
 *           castor/rtcopy/mighunter/MighunterDlfMessageStrings.cpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *
 *
 * @author Steven Murray Steven.Murray@cern.ch
 *****************************************************************************/

#include "castor/rtcopy/mighunter/MigHunterDlfMessageConstants.hpp"
#include "castor/rtcopy/mighunter/MigHunterDaemon.hpp"

castor::dlf::Message castor::rtcopy::mighunter::MigHunterDaemon::s_dlfMessages[] = {
{DAEMON_START, "Service shutdown"},
{DAEMON_STOP, "Service shutdown"},
{FATAL_ERROR, "Fatal Error"},
{NO_POLICY, "No Policy file available"},
{PARSING_OPTIONS, "parameters option parsed"},
{NO_TAPECOPIES, "No tapecopy found"},
{TAPECOPIES_FOUND, "No migration candidate found"},
{NO_TAPEPOOLS, "No tapepool found"},
{NOT_ENOUGH, "not enough data to create streams"},
{NO_DRIVES, "no drive assigned to this service class"},
{POLICY_INPUT, "input to call the migration policy"},
{ALLOWED_WITHOUT_POLICY, "allowed without policy"},
{ALLOWED_BY_POLICY, "allowed by policy"},
{NOT_ALLOWED, "not allowed"},
{POLICY_RESULT, "summary of migration policy results"},
{ATTACHED_TAPECOPIES, "attaching tapecopies to streams"},
{DB_ERROR, "db error"},
{RESURRECT_TAPECOPIES, "resurrecting tapecopies"},
{INVALIDATE_TAPECOPIES, "invalidating tapecopies"},
{NS_ERROR, "Error retrieving the file stat from the nameserver"},
{NO_STREAM, "No stream found"},
{STREAMS_FOUND, "Streams found"},
{STREAM_INPUT, "input to call stream policy"},
{START_WITHOUT_POLICY, "started without policy"},
{START_BY_POLICY, "started by policy"},
{NOT_STARTED, "stopped"},
{STREAM_POLICY_RESULT, "summary of stream policy results"},
{STARTED_STREAMS, "stream started"},
{STOP_STREAMS, "stream stopped"},
{MIGHUNTER_FAILED_TO_START, "mighunterd failed to start"},
{FAILED_TO_APPLY_MIGRATION_POLICY, "Failed to apply migration policy, attaching tape copy"},
{FAILED_TO_APPLY_STREAM_POLICY, "Failed to apply stream policy, starting stream"},
{-1, ""}};
