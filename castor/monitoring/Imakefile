#
#                      castor/monitoring/Imakefile
#
# This file is part of the Castor project.
# See http://castor.web.cern.ch/castor
#
# Copyright (C) 2003  CERN
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
#
# Make Castor libraries and executables
#
# @author Castor Dev team, castor-dev@cern.ch

#include <Project.tmpl>

SUBDIRS = $(RMMASTERDIR) $(RMNODEDIR) $(RMADMINDIR)

OSLIBS = -L FileName(../..,shlib) -lshift $(ADNSLIB) -lnsl -ldl
DEBUG  = -g -O0
INCLUDES = -I FileName(../..,h) -I ../..
CPPFLAGS = $(DEBUG) $(INCLUDES) $(MTCCFLAGS) -DRH_HOST=\"$(RH_HOST)\"

STGLIB_SRCS = ClusterStatus.cpp \
              DiskServerStatus.cpp \
              FileSystemStatus.cpp \
              FileSystemRating.cpp \
              ClusterStatusBlockKey.cpp \
              DiskServerMetricsReport.cpp \
              DiskServerStateReport.cpp \
              admin/DiskServerAdminReport.cpp \
              FileSystemMetricsReport.cpp \
              FileSystemStateReport.cpp \
              admin/FileSystemAdminReport.cpp \
              FileSystemStateAck.cpp \
              MonitorMessageAck.cpp \
              ../io/StreamDiskServerAdminReportCnv.cpp \
              ../io/StreamDiskServerMetricsReportCnv.cpp \
              ../io/StreamDiskServerStateReportCnv.cpp \
              ../io/StreamFileSystemAdminReportCnv.cpp \
              ../io/StreamFileSystemMetricsReportCnv.cpp \
              ../io/StreamFileSystemStateReportCnv.cpp \
              ../io/StreamFileSystemStateAckCnv.cpp \
              ../io/StreamMonitorMessageAckCnv.cpp

RMGETNODESBIN_SRCS = RmGetNodes.cpp
RMGETNODESBIN_OBJS = $(RMGETNODESBIN_SRCS:.cpp=.Osuf)
RMADMINNODESBIN_SRCS = admin/RmAdminNode.cpp
RMADMINNODESBIN_OBJS = $(RMADMINNODESBIN_SRCS:.cpp=.Osuf)
DUMPSHAREDMEMORYBIN_SRCS = DumpSharedMemory.cpp
DUMPSHAREDMEMORYBIN_OBJS = $(DUMPSHAREDMEMORYBIN_SRCS:.cpp=.Osuf)

LIBS = $(OSLIBS) $(MTLDLIBS) -lcastorMonitor -lshift -Wl,-rpath-link,../../shlib
DEPLIB = DepSharedLibraryTargetName(FileName(..,shlib),castorMonitor) \
         DepSharedLibraryTargetName(FileName(..,shlib),shift)

STGLIB_OBJS = $(STGLIB_SRCS:.cpp=.Osuf)
COMMONLIB = LibraryTargetName(castorMonitor)
GLOBLIB = DepSharedLibraryTargetName(shlib,shift)

LDFLAGS += $(DEBUG) $(MTLDFLAGS)
LD = g++

all: $(COMMONLIB) ProgramTargetName(rmGetNodes) ProgramTargetName(rmAdminNode)

MakeDepSharedLibrary(shlib,shift)
NormalLibraryTarget(castorMonitor,$(STGLIB_OBJS))

NormalProgramTarget(rmGetNodes,$(RMGETNODESBIN_OBJS),$(DEPLIB),$(LIBS))
NormalProgramTarget(rmAdminNode,$(RMADMINNODESBIN_OBJS),$(DEPLIB),$(LIBS))
NormalProgramTarget(dumpSharedMemory,$(DUMPSHAREDMEMORYBIN_OBJS),$(DEPLIB),$(LIBS))

MakeDepSharedLibrary(FileName(..,shlib),castorMonitor)
MakeDepSharedLibrary(FileName(..,shlib),shift)

MakeSubdirs(all,$(SUBDIRS))
MakeSubdirs(install,$(SUBDIRS))
MakeSubdirs(install.man,$(SUBDIRS))
MakeSubdirs(exportman,$(SUBDIRS))
MakeCondSubdirs(clean,$(SUBDIRS),clean0)
MakeCondSubdirs(clobber,$(SUBDIRS),clobber0)

Makefiles:
	@. ../../setosflags ;\
	for i in $(SUBDIRS) ;\
	do (if [ -d $$i ] ;\
	    then \
	      (echo " $$i:" ; cd $$i ;\
	      ../../../imake/imake -I../../../config -DOSMajorVersion="$$OSMAJNO" -DOSMinorVersion="$$OSMINNO" ;\
	      $(MAKE) $(MFLAGS) $@) ;\
	    else \
	      (echo "ERROR : No directory $$i" ;\
	      exit 1) ;\
	    fi )\
	done ;

depend:
	makedepend -- $(INCLUDES) -- $(STGLIB_SRCS) $(RMGETNODESBIN_SRCS) $(RMADMINNODEBIN_SRCS) $(DUMPSHAREDMEMORYBIN_SRCS) 2> /dev/null; \
	for i in $(SUBDIRS) ;\
	do (if [ -d $$i ] ;\
	    then \
	      (echo " $$i:" ; cd $$i ;\
	      $(MAKE) $(MFLAGS) $@) ;\
	    else \
	      (echo "ERROR : No directory $$i" ;\
	      exit 1) ;\
	    fi )\
	done ;

install: FileName($(BIN),rmGetNodes) FileName($(BIN),rmAdminNode)

InstallProgram(rmGetNodes,$(BIN),root,bin,750)
InstallProgram(rmAdminNode,$(BIN),root,bin,755)

clean0:
	@echo cleaning in CurDir
	-@RemoveFiles($(STGLIB_OBJS) $(RMGETNODESBIN_OBJS) $(RMADMINNODESBIN_OBJS) $(DUMPSHAREDMEMORYBIN_OBJS))

clobber0:	clean
	@echo clobbering in CurDir
	-@RemoveFiles($(COMMONLIB) rmGetNodes rmAdminNode dumpSharedMemory)

FORCE:

