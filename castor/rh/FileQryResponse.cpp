/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

// Include Files
#include "castor/Constants.hpp"
#include "castor/IObject.hpp"
#include "castor/ObjectSet.hpp"
#include "castor/rh/FileQryResponse.hpp"
#include "castor/rh/Response.hpp"
#include "osdep.h"
#include <iostream>
#include <string>

//------------------------------------------------------------------------------
// Constructor
//------------------------------------------------------------------------------
castor::rh::FileQryResponse::FileQryResponse() throw() :
  Response(),
  m_fileName(""),
  m_castorFileName(""),
  m_fileId(0),
  m_status(0),
  m_size(0),
  m_poolName(""),
  m_creationTime(0),
  m_accessTime(0),
  m_nbAccesses(0),
  m_diskServer(""),
  m_id(0) {
};

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
castor::rh::FileQryResponse::~FileQryResponse() throw() {
};

//------------------------------------------------------------------------------
// print
//------------------------------------------------------------------------------
void castor::rh::FileQryResponse::print(std::ostream& stream,
                                        std::string indent,
                                        castor::ObjectSet& alreadyPrinted) const {
  stream << indent << "[# FileQryResponse #]" << std::endl;
  if (alreadyPrinted.find(this) != alreadyPrinted.end()) {
    // Circular dependency, this object was already printed
    stream << indent << "Back pointer, see above" << std::endl;
    return;
  }
  // Call print on the parent class(es)
  this->Response::print(stream, indent, alreadyPrinted);
  // Output of all members
  stream << indent << "fileName : " << m_fileName << std::endl;
  stream << indent << "castorFileName : " << m_castorFileName << std::endl;
  stream << indent << "fileId : " << m_fileId << std::endl;
  stream << indent << "status : " << m_status << std::endl;
  stream << indent << "size : " << m_size << std::endl;
  stream << indent << "poolName : " << m_poolName << std::endl;
  stream << indent << "creationTime : " << m_creationTime << std::endl;
  stream << indent << "accessTime : " << m_accessTime << std::endl;
  stream << indent << "nbAccesses : " << m_nbAccesses << std::endl;
  stream << indent << "diskServer : " << m_diskServer << std::endl;
  stream << indent << "id : " << m_id << std::endl;
  alreadyPrinted.insert(this);
}

//------------------------------------------------------------------------------
// print
//------------------------------------------------------------------------------
void castor::rh::FileQryResponse::print() const {
  castor::ObjectSet alreadyPrinted;
  print(std::cout, "", alreadyPrinted);
}

//------------------------------------------------------------------------------
// TYPE
//------------------------------------------------------------------------------
int castor::rh::FileQryResponse::TYPE() {
  return OBJ_FileQryResponse;
}

//------------------------------------------------------------------------------
// type
//------------------------------------------------------------------------------
int castor::rh::FileQryResponse::type() const {
  return TYPE();
}

//------------------------------------------------------------------------------
// clone
//------------------------------------------------------------------------------
castor::IObject* castor::rh::FileQryResponse::clone() {
  return new FileQryResponse(*this);
}

