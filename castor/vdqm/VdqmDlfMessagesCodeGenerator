#!/usr/bin/perl -w

use strict;

my $vdqm_constants_head_filename="VdqmDlfMessageConstantsHeader.txt";
my $vdqm_dlf_messages_filename="VdqmDlfMessages.csv";
my $vdqm_constants_tail_filename="VdqmDlfMessageConstantsTrailer.txt";
my $vdqm_strings_head_filename="VdqmDlfMessageStringsHeader.txt";

sub writeConstantsFile {
  # Write the header text
  open(VDQMDLFCONSTANTSHEAD, "<$vdqm_constants_head_filename")
    or die("Could not open $vdqm_constants_head_filename for reading: $!\n");
  while(<VDQMDLFCONSTANTSHEAD>) {
    print;
  }
  close(VDQMDLFCONSTANTSHEAD);

  # Count the number of messages
  open(VDQMDLFMESSAGES, "<$vdqm_dlf_messages_filename")
    or die("Could not open $vdqm_dlf_messages_filename for reading: $!\n");
  my $nbMessages = 0;
  while(<VDQMDLFMESSAGES>) {
    $nbMessages = $nbMessages + 1;
  }
  close(VDQMDLFMESSAGES);

  # Write the body text
  open(VDQMDLFMESSAGES, "<$vdqm_dlf_messages_filename")
    or die("Could not open $vdqm_dlf_messages_filename for reading: $!\n");
  my $const_name;
  my $const_val;
  my $msg;
  my $currentMessageNb = 0;
  while(<VDQMDLFMESSAGES>) {
    $currentMessageNb = $currentMessageNb + 1;
    m/^([A-Z0-9_]*),(\d*),(.*)/;
    $const_name = $1;
    $const_val  = $2;
    $msg        = $3;

    # If this is not the last message
    if($currentMessageNb != $nbMessages) {
      # Terminate the enumeration item with a comma
      print("${const_name}=${const_val}, /* ${msg} */\n");
    } else {
      # Don't terminate the enumeration item with a comma
      print("${const_name}=${const_val} /* ${msg} */\n");
    }
  }
  close(VDQMDLFMESSAGES);

  # Write the trailer text
  open(VDQMDLFCONSTANTSTAIL, "<$vdqm_constants_tail_filename")
    or die("Could not open $vdqm_constants_tail_filename for reading: $!\n");
  while(<VDQMDLFCONSTANTSTAIL>) {
    print;
  }
  close(VDQMDLFCONSTANTSTAIL);
}


sub writeStringsFile {
  # Write the header text
  open(VDQMDLFSTRINGSHEAD, "<$vdqm_strings_head_filename")
    or die("Could not open $vdqm_strings_head_filename for reading: $!\n");
  while(<VDQMDLFSTRINGSHEAD>) {
    print;
  }
  close(VDQMDLFSTRINGSHEAD);

  # Write the body text
  open(VDQMDLFMESSAGES, "<$vdqm_dlf_messages_filename")
    or die("Could not open $vdqm_dlf_messages_filename for reading: $!\n");
  my $const_name;
  my $const_val;
  my $msg;
  while(<VDQMDLFMESSAGES>) {
    m/^([A-Z0-9_]*),(\d*),(.*)/;
    $const_name = $1;
    $const_val  = $2;
    $msg        = $3;

    print("{${const_name}, ${msg}},\n");
  }
  close(VDQMDLFMESSAGES);

  # Write the trailer text
  print("{-1, \"\"}};\n");
}


my $help =         "Description:\n";
$help    = $help . "\tGenerates the constants or strings files for the VDQM DLF messages\n\n";
$help    = $help . "Usage:\n";
$help    = $help . "\t$0 mode\n\n";
$help    = $help . "Where\n";
$help    = $help . "\tmode is either constants or strings\n";

die "Wrong number of arguments\n\n$help"
  if @ARGV != 1;

my $mode = "\U$ARGV[0]";

if($mode eq "CONSTANTS") {
  &writeConstantsFile
} elsif($mode eq "STRINGS") {
  &writeStringsFile
} else {
  die("Unknown mode: $mode\n\n$help");
}
