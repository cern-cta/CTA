/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/vdqm/TapeDrive2ExtDevGroup.h
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile: TapeDrive2ExtDevGroup.h,v $ $Revision: 1.1 $ $Release$ $Date: 2005/07/21 17:40:01 $ $Author: mbraeger $
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

#ifndef CASTOR_VDQM_TAPEDRIVE2EXTDEVGROUP_H
#define CASTOR_VDQM_TAPEDRIVE2EXTDEVGROUP_H

// Include Files and Forward declarations for the C world
struct Cvdqm_ExtendedDeviceGroup_t;
struct Cvdqm_TapeDrive2ExtDevGroup_t;
struct Cvdqm_TapeDrive_t;

//------------------------------------------------------------------------------
// This defines a C interface to the following class
// class TapeDrive2ExtDevGroup
// This db table is used to handle the mapping between a tape drive and its
// ExtendedDeviceGroups.To each ExtendedDeviceGroup is assigned a priorityLevel
// number, which specifies the tape model which should be served first.
//------------------------------------------------------------------------------

/**
 * Empty Constructor
 */
int Cvdqm_TapeDrive2ExtDevGroup_create(struct Cvdqm_TapeDrive2ExtDevGroup_t** obj);

/**
 * Empty Destructor
 */
int Cvdqm_TapeDrive2ExtDevGroup_delete(struct Cvdqm_TapeDrive2ExtDevGroup_t* obj);

/**
 * Get the value of priorityLevel
 * The level of priority for the specified ExtendedDeviceGroup and a specific tape
 * drive model
 */
int Cvdqm_TapeDrive2ExtDevGroup_priorityLevel(struct Cvdqm_TapeDrive2ExtDevGroup_t* instance, int* var);

/**
 * Set the value of priorityLevel
 * The level of priority for the specified ExtendedDeviceGroup and a specific tape
 * drive model
 */
int Cvdqm_TapeDrive2ExtDevGroup_setPriorityLevel(struct Cvdqm_TapeDrive2ExtDevGroup_t* instance, int new_var);

/**
 * Get the value of tapeDrive
 */
int Cvdqm_TapeDrive2ExtDevGroup_tapeDrive(struct Cvdqm_TapeDrive2ExtDevGroup_t* instance, struct Cvdqm_TapeDrive_t** var);

/**
 * Set the value of tapeDrive
 */
int Cvdqm_TapeDrive2ExtDevGroup_setTapeDrive(struct Cvdqm_TapeDrive2ExtDevGroup_t* instance, struct Cvdqm_TapeDrive_t* new_var);

/**
 * Get the value of extDeviceGroup
 */
int Cvdqm_TapeDrive2ExtDevGroup_extDeviceGroup(struct Cvdqm_TapeDrive2ExtDevGroup_t* instance, struct Cvdqm_ExtendedDeviceGroup_t** var);

/**
 * Set the value of extDeviceGroup
 */
int Cvdqm_TapeDrive2ExtDevGroup_setExtDeviceGroup(struct Cvdqm_TapeDrive2ExtDevGroup_t* instance, struct Cvdqm_ExtendedDeviceGroup_t* new_var);

#endif // CASTOR_VDQM_TAPEDRIVE2EXTDEVGROUP_H
