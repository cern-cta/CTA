/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/vdqm/TapeDriveCInt.cpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

// Include Files
#include "castor/IObject.hpp"
#include "castor/stager/ClientIdentification.hpp"
#include "castor/stager/Tape.hpp"
#include "castor/vdqm/ErrorHistory.hpp"
#include "castor/vdqm/TapeDrive.hpp"
#include "castor/vdqm/TapeDriveDedication.hpp"
#include "castor/vdqm/TapeDriveStatusCodes.hpp"
#include "castor/vdqm/TapeRequest.hpp"
#include "castor/vdqm/TapeServer.hpp"
#include "osdep.h"
#include <vector>

extern "C" {

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_create
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_create(castor::vdqm::TapeDrive** obj) {
    *obj = new castor::vdqm::TapeDrive();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_delete
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_delete(castor::vdqm::TapeDrive* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Cvdqm_TapeDrive_getIObject(castor::vdqm::TapeDrive* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_fromIObject
  //----------------------------------------------------------------------------
  castor::vdqm::TapeDrive* Cvdqm_TapeDrive_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::vdqm::TapeDrive*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_print
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_print(castor::vdqm::TapeDrive* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_TYPE
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_TYPE(int* ret) {
    *ret = castor::vdqm::TapeDrive::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_type
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_type(castor::vdqm::TapeDrive* instance,
                           int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_clone
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_clone(castor::vdqm::TapeDrive* instance,
                            castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_jobID
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_jobID(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->jobID();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setJobID
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setJobID(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setJobID(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_modificationTime
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_modificationTime(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->modificationTime();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setModificationTime
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setModificationTime(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setModificationTime(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_resettime
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_resettime(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->resettime();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setResettime
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setResettime(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setResettime(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_usecount
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_usecount(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->usecount();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setUsecount
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setUsecount(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setUsecount(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_errcount
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_errcount(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->errcount();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setErrcount
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setErrcount(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setErrcount(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_transferredMB
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_transferredMB(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->transferredMB();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setTransferredMB
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setTransferredMB(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setTransferredMB(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_totalMB
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_totalMB(castor::vdqm::TapeDrive* instance, u_signed64* var) {
    *var = instance->totalMB();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setTotalMB
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setTotalMB(castor::vdqm::TapeDrive* instance, u_signed64 new_var) {
    instance->setTotalMB(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_driveName
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_driveName(castor::vdqm::TapeDrive* instance, const char** var) {
    *var = instance->driveName().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setDriveName
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setDriveName(castor::vdqm::TapeDrive* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setDriveName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_tapeAccessMode
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_tapeAccessMode(castor::vdqm::TapeDrive* instance, int* var) {
    *var = instance->tapeAccessMode();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setTapeAccessMode
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setTapeAccessMode(castor::vdqm::TapeDrive* instance, int new_var) {
    instance->setTapeAccessMode(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_id
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_id(castor::vdqm::TapeDrive* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setId
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setId(castor::vdqm::TapeDrive* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_tape
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_tape(castor::vdqm::TapeDrive* instance, castor::stager::Tape** var) {
    *var = instance->tape();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setTape
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setTape(castor::vdqm::TapeDrive* instance, castor::stager::Tape* new_var) {
    instance->setTape(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_runningTapeReq
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_runningTapeReq(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeRequest** var) {
    *var = instance->runningTapeReq();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setRunningTapeReq
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setRunningTapeReq(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeRequest* new_var) {
    instance->setRunningTapeReq(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_addErrorHistory
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_addErrorHistory(castor::vdqm::TapeDrive* instance, castor::vdqm::ErrorHistory* obj) {
    instance->addErrorHistory(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_removeErrorHistory
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_removeErrorHistory(castor::vdqm::TapeDrive* instance, castor::vdqm::ErrorHistory* obj) {
    instance->removeErrorHistory(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_errorHistory
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_errorHistory(castor::vdqm::TapeDrive* instance, castor::vdqm::ErrorHistory*** var, int* len) {
    std::vector<castor::vdqm::ErrorHistory*>& result = instance->errorHistory();
    *len = result.size();
    *var = (castor::vdqm::ErrorHistory**) malloc((*len) * sizeof(castor::vdqm::ErrorHistory*));
    for (int i = 0; i < *len; i++) {
      (*var)[i] = result[i];
    }
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_addTapeDriveDedication
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_addTapeDriveDedication(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeDriveDedication* obj) {
    instance->addTapeDriveDedication(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_removeTapeDriveDedication
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_removeTapeDriveDedication(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeDriveDedication* obj) {
    instance->removeTapeDriveDedication(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_tapeDriveDedication
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_tapeDriveDedication(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeDriveDedication*** var, int* len) {
    std::vector<castor::vdqm::TapeDriveDedication*>& result = instance->tapeDriveDedication();
    *len = result.size();
    *var = (castor::vdqm::TapeDriveDedication**) malloc((*len) * sizeof(castor::vdqm::TapeDriveDedication*));
    for (int i = 0; i < *len; i++) {
      (*var)[i] = result[i];
    }
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_status
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_status(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeDriveStatusCodes* var) {
    *var = instance->status();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setStatus
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setStatus(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeDriveStatusCodes new_var) {
    instance->setStatus(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_tapeServer
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_tapeServer(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeServer** var) {
    *var = instance->tapeServer();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setTapeServer
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setTapeServer(castor::vdqm::TapeDrive* instance, castor::vdqm::TapeServer* new_var) {
    instance->setTapeServer(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_client
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_client(castor::vdqm::TapeDrive* instance, castor::stager::ClientIdentification** var) {
    *var = instance->client();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDrive_setClient
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDrive_setClient(castor::vdqm::TapeDrive* instance, castor::stager::ClientIdentification* new_var) {
    instance->setClient(new_var);
    return 0;
  }

} // End of extern "C"
