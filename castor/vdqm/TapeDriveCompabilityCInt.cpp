/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/vdqm/TapeDriveCompabilityCInt.cpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

// Include Files
#include "castor/IObject.hpp"
#include "castor/vdqm/TapeAccessSpecification.hpp"
#include "castor/vdqm/TapeDriveCompability.hpp"
#include "osdep.h"

extern "C" {

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_create
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_create(castor::vdqm::TapeDriveCompability** obj) {
    *obj = new castor::vdqm::TapeDriveCompability();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_delete
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_delete(castor::vdqm::TapeDriveCompability* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Cvdqm_TapeDriveCompability_getIObject(castor::vdqm::TapeDriveCompability* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_fromIObject
  //----------------------------------------------------------------------------
  castor::vdqm::TapeDriveCompability* Cvdqm_TapeDriveCompability_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::vdqm::TapeDriveCompability*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_print
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_print(castor::vdqm::TapeDriveCompability* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_TYPE
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_TYPE(int* ret) {
    *ret = castor::vdqm::TapeDriveCompability::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_type
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_type(castor::vdqm::TapeDriveCompability* instance,
                                      int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_clone
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_clone(castor::vdqm::TapeDriveCompability* instance,
                                       castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_tapeDriveModel
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_tapeDriveModel(castor::vdqm::TapeDriveCompability* instance, const char** var) {
    *var = instance->tapeDriveModel().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_setTapeDriveModel
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_setTapeDriveModel(castor::vdqm::TapeDriveCompability* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setTapeDriveModel(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_priorityLevel
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_priorityLevel(castor::vdqm::TapeDriveCompability* instance, int* var) {
    *var = instance->priorityLevel();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_setPriorityLevel
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_setPriorityLevel(castor::vdqm::TapeDriveCompability* instance, int new_var) {
    instance->setPriorityLevel(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_id
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_id(castor::vdqm::TapeDriveCompability* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_setId
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_setId(castor::vdqm::TapeDriveCompability* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_tapeAccessSpecifications
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_tapeAccessSpecifications(castor::vdqm::TapeDriveCompability* instance, castor::vdqm::TapeAccessSpecification** var) {
    *var = instance->tapeAccessSpecifications();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cvdqm_TapeDriveCompability_setTapeAccessSpecifications
  //----------------------------------------------------------------------------
  int Cvdqm_TapeDriveCompability_setTapeAccessSpecifications(castor::vdqm::TapeDriveCompability* instance, castor::vdqm::TapeAccessSpecification* new_var) {
    instance->setTapeAccessSpecifications(new_var);
    return 0;
  }

} // End of extern "C"
