/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

#ifndef CASTOR_VDQM_TAPEACCESSSPECIFICATION_H
#define CASTOR_VDQM_TAPEACCESSSPECIFICATION_H

// Include Files and Forward declarations for the C world
#include "osdep.h"
struct C_IObject_t;
struct Cvdqm_TapeAccessSpecification_t;

//------------------------------------------------------------------------------
// This defines a C interface to the following class
// class TapeAccessSpecification
// This table contains all existing tape models, the densities and their access
// modes.  A tape drive can be indirectly associated with several entries, if it is
//------------------------------------------------------------------------------

/**
 * Empty Constructor
 */
int Cvdqm_TapeAccessSpecification_create(struct Cvdqm_TapeAccessSpecification_t** obj);

/**
 * Empty Destructor
 */
int Cvdqm_TapeAccessSpecification_delete(struct Cvdqm_TapeAccessSpecification_t* obj);

/**
 * Cast into IObject
 */
struct C_IObject_t* Cvdqm_TapeAccessSpecification_getIObject(struct Cvdqm_TapeAccessSpecification_t* obj);

/**
 * Dynamic cast from IObject
 */
struct Cvdqm_TapeAccessSpecification_t* Cvdqm_TapeAccessSpecification_fromIObject(struct C_IObject_t* obj);

/**
 * Outputs this object in a human readable format
 */
int Cvdqm_TapeAccessSpecification_print(struct Cvdqm_TapeAccessSpecification_t* instance);

/**
 * Gets the type of this kind of objects
 */
int Cvdqm_TapeAccessSpecification_TYPE(int* ret);

/***************************************/
/* Implementation of IObject interface */
/***************************************/

/**
 * Gets the type of the object
 */
int Cvdqm_TapeAccessSpecification_type(struct Cvdqm_TapeAccessSpecification_t* instance,
                                       int* ret);

/**
 * virtual method to clone any object
 */
int Cvdqm_TapeAccessSpecification_clone(struct Cvdqm_TapeAccessSpecification_t* instance,
                                        struct C_IObject_t* ret);

/**
 * Get the value of accessMode
 * WRITE_ENABLE/WRITE_DISABLE from Ctape_constants.h
 */
int Cvdqm_TapeAccessSpecification_accessMode(struct Cvdqm_TapeAccessSpecification_t* instance, int* var);

/**
 * Set the value of accessMode
 * WRITE_ENABLE/WRITE_DISABLE from Ctape_constants.h
 */
int Cvdqm_TapeAccessSpecification_setAccessMode(struct Cvdqm_TapeAccessSpecification_t* instance, int new_var);

/**
 * Get the value of density
 * The density of a tape
 */
int Cvdqm_TapeAccessSpecification_density(struct Cvdqm_TapeAccessSpecification_t* instance, const char** var);

/**
 * Set the value of density
 * The density of a tape
 */
int Cvdqm_TapeAccessSpecification_setDensity(struct Cvdqm_TapeAccessSpecification_t* instance, const char* new_var);

/**
 * Get the value of tapeModel
 * the model of a tape
 */
int Cvdqm_TapeAccessSpecification_tapeModel(struct Cvdqm_TapeAccessSpecification_t* instance, const char** var);

/**
 * Set the value of tapeModel
 * the model of a tape
 */
int Cvdqm_TapeAccessSpecification_setTapeModel(struct Cvdqm_TapeAccessSpecification_t* instance, const char* new_var);

/**
 * Get the value of id
 * The id of this object
 */
int Cvdqm_TapeAccessSpecification_id(struct Cvdqm_TapeAccessSpecification_t* instance, u_signed64* var);

/**
 * Set the value of id
 * The id of this object
 */
int Cvdqm_TapeAccessSpecification_setId(struct Cvdqm_TapeAccessSpecification_t* instance, u_signed64 new_var);

#endif // CASTOR_VDQM_TAPEACCESSSPECIFICATION_H
