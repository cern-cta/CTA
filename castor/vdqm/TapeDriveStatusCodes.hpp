/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/vdqm/TapeDriveStatusCodes.hpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

#ifndef CASTOR_VDQM_TAPEDRIVESTATUSCODES_HPP
#define CASTOR_VDQM_TAPEDRIVESTATUSCODES_HPP

#ifdef __cplusplus
namespace castor {

  namespace vdqm {

#endif
    /**
     * enum TapeDriveStatusCodes
     * Contains all  possible status of the TapeDrive
     */
    enum TapeDriveStatusCodes {
      UNIT_UP = 0, //This means, that the unit is up and free. So it is ready to accept a new request.
      UNIT_STARTING = 1, //The tape drive is reserved for one tape request and waits to be ASSIGNED to it.
      UNIT_ASSIGNED = 2, //A tape is in the tape drive but is not MOUNTED, yet. It can happen that it still receives a message to release the tape. In this case it will returns to UNIT_UP.
      VOL_MOUNTED = 3, //A tape is mounted and the assigned request for this tape is currently in process.
      FORCED_UNMOUNT = 4, //A FORCE_UNMOUNT can interrupt a request in process. In this case the tape drive waits, that the tpdaemon sends an unmount message. 
      UNIT_DOWN = 5, //When the tape drive is down, it means that it is not ready to receive any requests. It must first be set back to UNIT_UP status.
      WAIT_FOR_UNMOUNT = 6, //The tape is still in the tape drive, but there are no more requests for it in the queue. So it just waits for the unmount command from the tpdaemon to come back to UNIT_UP status or to go immediatly to UNIT_STARTING status.
      STATUS_UNKNOWN = 7, //If an unexpected command comes from the client, which stays in conflict with the current status of the tape drive, the status will be set to STATUS_UNKNOWN.
      id //The id of this object
    }; // end of enum TapeDriveStatusCodes

    /**
     * Names of the differents representations, used to display
     * correctly the TapeDriveStatusCodes enum
     */
    extern const char* TapeDriveStatusCodesStrings[9];

#ifdef __cplusplus
  }; // end of namespace vdqm

}; // end of namespace castor

#endif
#endif // CASTOR_VDQM_TAPEDRIVESTATUSCODES_HPP
