#
#                      castor/repack/Imakefile
#
# This file is part of the Castor project.
# See http://castor.web.cern.ch/castor
#
# Copyright (C) 2003  CERN
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# @(#)$RCSfile: Imakefile,v $ $Revision: 1.17 $ $Release$ $Date: 2007/03/20 08:11:23 $ $Author: gtaur $
#
# Make Castor Repack System
#
# @author Felix Ehm, felixehm@cern.ch
#

#include <Project.tmpl>

#if !defined(_WIN32)
#if linux
DEBUG  = -g -O0
#else
DEBUG  = -g
#endif
#endif

INCLUDES = -I FileName(FileName(..,..),h) -I FileName(..,..)
CPPFLAGS = $(DEBUG) $(INCLUDES) $(MTCCFLAGS) -DDEFAULT_CNS=castorns

REPACKLIB = LibraryTargetName(castorRepack)

LIBS = -lshift -lcastorCnvs 

REPACKCOMMON_SRC = ../io/StreamRepackRequestCnv.cpp \
		../io/StreamRepackSubRequestCnv.cpp \
		../io/StreamRepackAckCnv.cpp \
		../io/StreamRepackSegmentCnv.cpp \
		RepackRequest.cpp \
		RepackSubRequest.cpp \
		RepackSegment.cpp \
		RepackAck.cpp \
                FileListHelper.cpp \
                Tools.cpp \

REPACKDBCNVSRC =../db/cnv/DbRepackRequestCnv.cpp \
		../db/cnv/DbRepackSegmentCnv.cpp \
		../db/cnv/DbRepackSubRequestCnv.cpp 

REPACKSERVERBIN_SRCS =  RepackServer.cpp \
		DatabaseHelper.cpp \
		RepackWorker.cpp \
		RepackFileStager.cpp \
		RepackMonitor.cpp \
		RepackCleaner.cpp \
		RepackFileChecker.cpp \
		$(REPACKDBCNVSRC) \
		$(REPACKCOMMON_SRC) 

REPACKBIN_SRCS =  RepackClient.cpp \
		../io/ClientSocket.cpp \
		$(REPACKCOMMON_SRC)

MANPAGES_REPACK = FileName($(MANDIR),repack.$(MANSUFFIX)) FileName($(MANDIR),repackserver.$(MANSUFFIX))
EMANPAGES_REPACK = FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),repack.$(MANSUFFIX))) FileName($(EXPORTMAN),FileName(man$(MANSUFFIX),repackserver.$(MANSUFFIX))) 

#Repack library
REPACKLIB_SRCS = $(REPACKCOMMON_SRC)
REPACKLIB_OBJS = $(REPACKLIB_SRCS:.cpp=.Osuf)



REPACKSERVERBIN_OBJS = $(REPACKSERVERBIN_SRCS:.cpp=.Osuf)
REPACKBIN_OBJS = $(REPACKBIN_SRCS:.cpp=.Osuf)

DEPLIB = DepSharedLibraryTargetName(FileName(..,shlib),shift) 

LDFLAGS = -L FileName(..,FileName(..,shlib)) $(MTLDFLAGS)
LD = g++

all: $(REPACKLIB) \
	ProgramTargetName(repackserver) \
	ProgramTargetName(repack)

NormalProgramTarget(repackserver,$(REPACKSERVERBIN_OBJS),$(DEPLIB),$(LIBS))
NormalProgramTarget(repack,$(REPACKBIN_OBJS),$(DEPLIB),$(LIBS))

MakeDepSharedLibrary(FileName(..,shlib),shift)
MakeDepSharedLibrary(FileName(..,shlib),castorCnvs)

# The repack Library
NormalLibraryTarget(castorRepack,$(REPACKLIB_OBJS))



Makefiles:

#if defined(_WIN32)
depend:
	@echo Not supported on this platform
#else
depend:
	makedepend $(INCLUDES) $(REPACKSERVERBIN_SRCS) 2> /dev/null
	makedepend $(INCLUDES) $(REPACKBIN_SRCS) 2> /dev/null
#endif

install: FileName($(BIN),repackserver) \
FileName($(BIN),repack)

InstallProgram(repackserver,$(BIN),root,bin,755)
InstallProgram(repack,$(BIN),root,bin,755)

install.man: $(MANDIR) $(MANPAGES_REPACK)

IMANPAGE(repack,$(MANDIR),$(MANSUFFIX))
IMANPAGE(repackserver,$(MANDIR),$(MANSUFFIX))

exportman: $(EMANPAGES_REPACK)

EMANPAGE(repack,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))
EMANPAGE(repackserver,FileName($(EXPORTMAN),man$(MANSUFFIX)),$(MANSUFFIX))

clean:
	@echo cleaning in CurDir
	-@RemoveFiles(FilesToClean)

clobber:	clean
	@echo clobbering in CurDir
	-@RemoveFiles(ProgramTargetName(repackserver))
	-@RemoveFiles(ProgramTargetName(repack))

FORCE:
