/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/repack/RepackRequestCInt.cpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile: RepackRequestCInt.cpp,v $ $Revision: 1.4 $ $Release$ $Date: 2006/01/25 08:24:27 $ $Author: felixehm $
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

// Include Files
#include "castor/IObject.hpp"
#include "castor/repack/RepackRequest.hpp"
#include "castor/repack/RepackSubRequest.hpp"
#include "osdep.h"
#include <vector>

extern "C" {

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_create
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_create(castor::repack::RepackRequest** obj) {
    *obj = new castor::repack::RepackRequest();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_delete
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_delete(castor::repack::RepackRequest* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Crepack_RepackRequest_getIObject(castor::repack::RepackRequest* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_fromIObject
  //----------------------------------------------------------------------------
  castor::repack::RepackRequest* Crepack_RepackRequest_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::repack::RepackRequest*>(obj);
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_print
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_print(castor::repack::RepackRequest* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_TYPE
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_TYPE(int* ret) {
    *ret = castor::repack::RepackRequest::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_type
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_type(castor::repack::RepackRequest* instance,
                                 int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_clone
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_clone(castor::repack::RepackRequest* instance,
                                  castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_machine
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_machine(castor::repack::RepackRequest* instance, const char** var) {
    *var = instance->machine().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_setMachine
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_setMachine(castor::repack::RepackRequest* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setMachine(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_userName
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_userName(castor::repack::RepackRequest* instance, const char** var) {
    *var = instance->userName().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_setUserName
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_setUserName(castor::repack::RepackRequest* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setUserName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_creationTime
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_creationTime(castor::repack::RepackRequest* instance, unsigned long* var) {
    *var = instance->creationTime();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_setCreationTime
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_setCreationTime(castor::repack::RepackRequest* instance, unsigned long new_var) {
    instance->setCreationTime(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_pool
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_pool(castor::repack::RepackRequest* instance, const char** var) {
    *var = instance->pool().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_setPool
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_setPool(castor::repack::RepackRequest* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setPool(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_pid
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_pid(castor::repack::RepackRequest* instance, u_signed64* var) {
    *var = instance->pid();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_setPid
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_setPid(castor::repack::RepackRequest* instance, u_signed64 new_var) {
    instance->setPid(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_id
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_id(castor::repack::RepackRequest* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_setId
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_setId(castor::repack::RepackRequest* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_addSubRequest
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_addSubRequest(castor::repack::RepackRequest* instance, castor::repack::RepackSubRequest* obj) {
    instance->addSubRequest(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_removeSubRequest
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_removeSubRequest(castor::repack::RepackRequest* instance, castor::repack::RepackSubRequest* obj) {
    instance->removeSubRequest(obj);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Crepack_RepackRequest_subRequest
  //----------------------------------------------------------------------------
  int Crepack_RepackRequest_subRequest(castor::repack::RepackRequest* instance, castor::repack::RepackSubRequest*** var, int* len) {
    std::vector<castor::repack::RepackSubRequest*>& result = instance->subRequest();
    *len = result.size();
    *var = (castor::repack::RepackSubRequest**) malloc((*len) * sizeof(castor::repack::RepackSubRequest*));
    for (int i = 0; i < *len; i++) {
      (*var)[i] = result[i];
    }
    return 0;
  }

} // End of extern "C"
