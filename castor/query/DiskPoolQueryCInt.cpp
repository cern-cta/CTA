/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

// Include Files
#include "castor/IClient.hpp"
#include "castor/IObject.hpp"
#include "castor/query/DiskPoolQuery.hpp"
#include "castor/stager/Request.hpp"
#include "castor/stager/SvcClass.hpp"
#include "osdep.h"

extern "C" {

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_create
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_create(castor::query::DiskPoolQuery** obj) {
    *obj = new castor::query::DiskPoolQuery();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_delete
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_delete(castor::query::DiskPoolQuery* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_getRequest
  //----------------------------------------------------------------------------
  castor::stager::Request* Cquery_DiskPoolQuery_getRequest(castor::query::DiskPoolQuery* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_fromRequest
  //----------------------------------------------------------------------------
  castor::query::DiskPoolQuery* Cquery_DiskPoolQuery_fromRequest(castor::stager::Request* obj) {
    return dynamic_cast<castor::query::DiskPoolQuery*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Cquery_DiskPoolQuery_getIObject(castor::query::DiskPoolQuery* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_fromIObject
  //----------------------------------------------------------------------------
  castor::query::DiskPoolQuery* Cquery_DiskPoolQuery_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::query::DiskPoolQuery*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_print
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_print(castor::query::DiskPoolQuery* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_TYPE
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_TYPE(int* ret) {
    *ret = castor::query::DiskPoolQuery::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_flags
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_flags(castor::query::DiskPoolQuery* instance, u_signed64* var) {
    *var = instance->flags();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setFlags
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setFlags(castor::query::DiskPoolQuery* instance, u_signed64 new_var) {
    instance->setFlags(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_userName
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_userName(castor::query::DiskPoolQuery* instance, const char** var) {
    *var = instance->userName().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setUserName
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setUserName(castor::query::DiskPoolQuery* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setUserName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_euid
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_euid(castor::query::DiskPoolQuery* instance, unsigned long* var) {
    *var = instance->euid();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setEuid
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setEuid(castor::query::DiskPoolQuery* instance, unsigned long new_var) {
    instance->setEuid(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_egid
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_egid(castor::query::DiskPoolQuery* instance, unsigned long* var) {
    *var = instance->egid();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setEgid
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setEgid(castor::query::DiskPoolQuery* instance, unsigned long new_var) {
    instance->setEgid(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_mask
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_mask(castor::query::DiskPoolQuery* instance, unsigned long* var) {
    *var = instance->mask();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setMask
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setMask(castor::query::DiskPoolQuery* instance, unsigned long new_var) {
    instance->setMask(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_pid
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_pid(castor::query::DiskPoolQuery* instance, unsigned long* var) {
    *var = instance->pid();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setPid
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setPid(castor::query::DiskPoolQuery* instance, unsigned long new_var) {
    instance->setPid(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_machine
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_machine(castor::query::DiskPoolQuery* instance, const char** var) {
    *var = instance->machine().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setMachine
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setMachine(castor::query::DiskPoolQuery* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setMachine(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_svcClassName
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_svcClassName(castor::query::DiskPoolQuery* instance, const char** var) {
    *var = instance->svcClassName().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setSvcClassName
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setSvcClassName(castor::query::DiskPoolQuery* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setSvcClassName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_userTag
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_userTag(castor::query::DiskPoolQuery* instance, const char** var) {
    *var = instance->userTag().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setUserTag
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setUserTag(castor::query::DiskPoolQuery* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setUserTag(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_reqId
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_reqId(castor::query::DiskPoolQuery* instance, const char** var) {
    *var = instance->reqId().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setReqId
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setReqId(castor::query::DiskPoolQuery* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setReqId(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_creationTime
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_creationTime(castor::query::DiskPoolQuery* instance, u_signed64* var) {
    *var = instance->creationTime();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setCreationTime
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setCreationTime(castor::query::DiskPoolQuery* instance, u_signed64 new_var) {
    instance->setCreationTime(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_lastModificationTime
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_lastModificationTime(castor::query::DiskPoolQuery* instance, u_signed64* var) {
    *var = instance->lastModificationTime();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setLastModificationTime
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setLastModificationTime(castor::query::DiskPoolQuery* instance, u_signed64 new_var) {
    instance->setLastModificationTime(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_svcClass
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_svcClass(castor::query::DiskPoolQuery* instance, castor::stager::SvcClass** var) {
    *var = instance->svcClass();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setSvcClass
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setSvcClass(castor::query::DiskPoolQuery* instance, castor::stager::SvcClass* new_var) {
    instance->setSvcClass(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_client
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_client(castor::query::DiskPoolQuery* instance, castor::IClient** var) {
    *var = instance->client();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setClient
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setClient(castor::query::DiskPoolQuery* instance, castor::IClient* new_var) {
    instance->setClient(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_type
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_type(castor::query::DiskPoolQuery* instance,
                                int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_clone
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_clone(castor::query::DiskPoolQuery* instance,
                                 castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_diskPoolName
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_diskPoolName(castor::query::DiskPoolQuery* instance, const char** var) {
    *var = instance->diskPoolName().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setDiskPoolName
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setDiskPoolName(castor::query::DiskPoolQuery* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setDiskPoolName(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_id
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_id(castor::query::DiskPoolQuery* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_DiskPoolQuery_setId
  //----------------------------------------------------------------------------
  int Cquery_DiskPoolQuery_setId(castor::query::DiskPoolQuery* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

} // End of extern "C"
