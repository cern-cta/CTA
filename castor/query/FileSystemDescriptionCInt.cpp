/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/query/FileSystemDescriptionCInt.cpp
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

// Include Files
#include "castor/IObject.hpp"
#include "castor/query/DiskServerDescription.hpp"
#include "castor/query/FileSystemDescription.hpp"
#include "osdep.h"

extern "C" {

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_create
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_create(castor::query::FileSystemDescription** obj) {
    *obj = new castor::query::FileSystemDescription();
    return 0;
  }
  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_delete
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_delete(castor::query::FileSystemDescription* obj) {
    delete obj;
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_getIObject
  //----------------------------------------------------------------------------
  castor::IObject* Cquery_FileSystemDescription_getIObject(castor::query::FileSystemDescription* obj) {
    return obj;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_fromIObject
  //----------------------------------------------------------------------------
  castor::query::FileSystemDescription* Cquery_FileSystemDescription_fromIObject(castor::IObject* obj) {
    return dynamic_cast<castor::query::FileSystemDescription*>(obj);
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_print
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_print(castor::query::FileSystemDescription* instance) {
    instance->print();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_TYPE
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_TYPE(int* ret) {
    *ret = castor::query::FileSystemDescription::TYPE();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_type
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_type(castor::query::FileSystemDescription* instance,
                                        int* ret) {
    *ret = instance->type();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_clone
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_clone(castor::query::FileSystemDescription* instance,
                                         castor::IObject** ret) {
    *ret = instance->clone();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_mountPoint
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_mountPoint(castor::query::FileSystemDescription* instance, const char** var) {
    *var = instance->mountPoint().c_str();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setMountPoint
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setMountPoint(castor::query::FileSystemDescription* instance, const char* new_var) {
    std::string snew_var(new_var, strlen(new_var));
    instance->setMountPoint(snew_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_freeSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_freeSpace(castor::query::FileSystemDescription* instance, u_signed64* var) {
    *var = instance->freeSpace();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setFreeSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setFreeSpace(castor::query::FileSystemDescription* instance, u_signed64 new_var) {
    instance->setFreeSpace(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_totalSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_totalSpace(castor::query::FileSystemDescription* instance, u_signed64* var) {
    *var = instance->totalSpace();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setTotalSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setTotalSpace(castor::query::FileSystemDescription* instance, u_signed64 new_var) {
    instance->setTotalSpace(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_minFreeSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_minFreeSpace(castor::query::FileSystemDescription* instance, float* var) {
    *var = instance->minFreeSpace();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setMinFreeSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setMinFreeSpace(castor::query::FileSystemDescription* instance, float new_var) {
    instance->setMinFreeSpace(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_maxFreeSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_maxFreeSpace(castor::query::FileSystemDescription* instance, float* var) {
    *var = instance->maxFreeSpace();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setMaxFreeSpace
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setMaxFreeSpace(castor::query::FileSystemDescription* instance, float new_var) {
    instance->setMaxFreeSpace(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_status
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_status(castor::query::FileSystemDescription* instance, int* var) {
    *var = instance->status();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setStatus
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setStatus(castor::query::FileSystemDescription* instance, int new_var) {
    instance->setStatus(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_id
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_id(castor::query::FileSystemDescription* instance, u_signed64* var) {
    *var = instance->id();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setId
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setId(castor::query::FileSystemDescription* instance, u_signed64 new_var) {
    instance->setId(new_var);
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_diskServer
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_diskServer(castor::query::FileSystemDescription* instance, castor::query::DiskServerDescription** var) {
    *var = instance->diskServer();
    return 0;
  }

  //----------------------------------------------------------------------------
  // Cquery_FileSystemDescription_setDiskServer
  //----------------------------------------------------------------------------
  int Cquery_FileSystemDescription_setDiskServer(castor::query::FileSystemDescription* instance, castor::query::DiskServerDescription* new_var) {
    instance->setDiskServer(new_var);
    return 0;
  }

} // End of extern "C"
