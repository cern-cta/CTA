#!/usr/bin/perl -w

use strict;

my $constants_filename="TapeGatewayDlfMessageConstants.hpp";
my $constants_head_filename="TapeGatewayDlfMessageConstantsHeader.txt";
my $messages_filename="TapeGatewayDlfMessages.csv";
my $constants_tail_filename="TapeGatewayDlfMessageConstantsTrailer.txt";
my $strings_filename="TapeGatewayDlfMessageStrings.cpp";
my $strings_head_filename="TapeGatewayDlfMessageStringsHeader.txt";


sub writeConstantsFile {
  my $date = $_[0];

  # Open the constants file for writing
  open(CONSTANTS, ">$constants_filename")
    or die("Could not open $constants_filename for writing: $!\n");

  print(CONSTANTS "/* This file was generated by $0 on $date */\n\n");

  # Write the header text
  open(CONSTANTSHEAD, "<$constants_head_filename")
    or die("Could not open $constants_head_filename for reading: $!\n");
  while(<CONSTANTSHEAD>) {
    print(CONSTANTS);
  }
  close(CONSTANTSHEAD);

  # Count the number of messages
  open(MESSAGES, "<$messages_filename")
    or die("Could not open $messages_filename for reading: $!\n");
  my $nbMessages = 0;
  while(<MESSAGES>) {
    $nbMessages = $nbMessages + 1;
  }
  close(MESSAGES);

  # Write the body text
  open(MESSAGES, "<$messages_filename")
    or die("Could not open $messages_filename for reading: $!\n");
  my $const_name;
  my $const_val;
  my $msg;
  my $currentMessageNb = 0;
  while(<MESSAGES>) {
    $currentMessageNb = $currentMessageNb + 1;
    m/^(\d*),([A-Z0-9_]*),(.*)/;
    $const_val  = $1;
    $const_name = $2;
    $msg        = $3;

    # If this is not the last message
    if($currentMessageNb != $nbMessages) {
      # Terminate the enumeration item with a comma
      print(CONSTANTS "${const_name}=${const_val}, /* ${msg} */\n");
    } else {
      # Don't terminate the enumeration item with a comma
      print(CONSTANTS "${const_name}=${const_val} /* ${msg} */\n");
    }
  }
  close(MESSAGES);

  # Write the trailer text
  open(CONSTANTSTAIL, "<$constants_tail_filename")
    or die("Could not open $constants_tail_filename for reading: $!\n");
  while(<CONSTANTSTAIL>) {
    print(CONSTANTS);
  }
  close(CONSTANTSTAIL);

  # Close the constants file
  close(CONSTANTS);
}


sub writeStringsFile {
  my $date = $_[0];

  # Open the strings file for writing
  open(STRINGS, ">$strings_filename")
    or die("Could not open $strings_filename for writing: $!\n");

  print(STRINGS "/* This file was generated by $0 on $date */\n\n");

  # Write the header text
  open(STRINGSHEAD, "<$strings_head_filename")
    or die("Could not open $strings_head_filename for reading: $!\n");
  while(<STRINGSHEAD>) {
    print(STRINGS);
  }
  close(STRINGSHEAD);

  # Write the body text
  open(MESSAGES, "<$messages_filename")
    or die("Could not open $messages_filename for reading: $!\n");
  my $const_name;
  my $const_val;
  my $msg;
  while(<MESSAGES>) {
    m/^(\d*),([A-Z0-9_]*),(".*")$/;
    $const_val  = $1;
    $const_name = $2;
    $msg        = $3;

    print(STRINGS "{${const_name}, ${msg}},\n");
  }
  close(MESSAGES);

  # Write the trailer text
  print(STRINGS "{-1, \"\"}};\n");

  # Close the strings file
  close(STRINGS);
}

my $date = `date`;

print("\n");
print("Source code generator for  DLF messages\n");
print("===========================================\n\n");
print("Generating $constants_filename\n");
&writeConstantsFile($date);
print("Generating $strings_filename\n");
&writeStringsFile($date);
print("Finished\n\n");
