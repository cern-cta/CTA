.PS

copy "sequence.pic";

# Define the objects
object(C,"gateway");
object(V,"vdqm");
object(AG,"aggregator");
object(R,"rtcpd");
placeholder_object(RF);
placeholder_object(A);
placeholder_object(T);
placeholder_object(D1);
placeholder_object(D2);
placeholder_object(D3);

step();

# Message sequences
active(C);
message(C,V,"connect");
active(V);
message(C,V,"volume request");
message(V,C,"acknowledge");
message(V,C,"volReqID");
message(C,V,"acknowledge");
message(C,V,"disconnect");
inactive(V);

step();

active(V);
message(V,AG,"connect");
active(AG);
message(V,AG,"RcpJob");
message(AG,R,"connect");
active(R);
create_message(R,RF,"main cntl");
active(RF);
inactive(R);
message(AG,RF,"RcpJob");
message(RF,AG,"RcpJobReply");
message(AG,V,"RcpJobReply");
message(AG,V,"disconnect");
message(RF,AG,"disconnect");
inactive(V);

message(RF,AG,"connect");
message(AG,RF,"request volReqId");
message(RF,AG,"acknowledge");
message(RF,AG,"volReqId");
message(AG,RF,"acknowledge");

message(AG,RF,"volume");
message(RF,AG,"acknowledge");

message(AG,RF,"file1");
message(RF,AG,"acknowledge");

message(AG,RF,"file2");
message(RF,AG,"acknowledge");

message(AG,RF,"RTCP_NOMORE_REQ");
message(RF,AG,"acknowledge");

message(RF,AG,"connect");
message(RF,AG,"connect");
message(RF,AG,"connect");

create_message(RF,A,"abort");
active(A);

create_message(RF,T,"tape IO");
active(T);

create_message(RF,D1,"disk IO 1");
active(D1);
create_message(RF,D2,"disk IO 2");
active(D2);
create_message(RF,D3,"disk IO 3");
active(D3);

message(T,AG,"UNKNOWN file 1");
message(T,AG,"RTCP_POSITIONED file 1");

message(T,AG,"UNKNOWN file 2");
message(T,AG,"RTCP_POSITIONED file 2");

message(D1,AG,"RTCP_FINISHED file 1");
message(AG,D1,"acknowledge");
inactive(D1);

message(D2,AG,"RTCP_FINISHED file 2");
message(AG,D2,"acknowledge");
inactive(D2);

message(T,AG,"RTCP_ENDOF_REQ");
message(AG,T,"acknowledge");
inactive(T);

inactive(D3);
inactive(A);
inactive(RF);
inactive(AG);
inactive(C);

complete(C);
complete(V);
complete(AG);
complete(R);
complete(RF);
complete(T);
complete(A);
complete(D1);
complete(D2);
complete(D3);

.PE

