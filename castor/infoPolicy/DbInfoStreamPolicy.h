/**** This file has been autogenerated by gencastor from Umbrello UML model ***/

/******************************************************************************
 *                      castor/infoPolicy/DbInfoStreamPolicy.h
 *
 * This file is part of the Castor project.
 * See http://castor.web.cern.ch/castor
 *
 * Copyright (C) 2003  CERN
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * @(#)$RCSfile$ $Revision$ $Release$ $Date$ $Author$
 *
 * 
 *
 * @author Castor Dev team, castor-dev@cern.ch
 *****************************************************************************/

#ifndef CASTOR_INFOPOLICY_DBINFOSTREAMPOLICY_H
#define CASTOR_INFOPOLICY_DBINFOSTREAMPOLICY_H

/* Include Files and Forward declarations for the C world */
#include "castor/stager/StreamStatusCodes.h"
#include "osdep.h"
struct C_IObject_t;
struct CinfoPolicy_DbInfoPolicy_t;
struct CinfoPolicy_DbInfoStreamPolicy_t;
struct CinfoPolicy_PolicyObj_t;

/* --------------------------------------------------------------------------
  This defines a C interface to the following class
// class DbInfoStreamPolicy
  -------------------------------------------------------------------------- */

/**
 * Empty Constructor
 */
int CinfoPolicy_DbInfoStreamPolicy_create(struct CinfoPolicy_DbInfoStreamPolicy_t** obj);

/**
 * Empty Destructor
 */
int CinfoPolicy_DbInfoStreamPolicy_delete(struct CinfoPolicy_DbInfoStreamPolicy_t* obj);

/**
 * Cast into DbInfoPolicy
 */
struct CinfoPolicy_DbInfoPolicy_t* CinfoPolicy_DbInfoStreamPolicy_getDbInfoPolicy(struct CinfoPolicy_DbInfoStreamPolicy_t* obj);

/**
 * Dynamic cast from DbInfoPolicy
 */
struct CinfoPolicy_DbInfoStreamPolicy_t* CinfoPolicy_DbInfoStreamPolicy_fromDbInfoPolicy(struct CinfoPolicy_DbInfoPolicy_t* obj);

/**
 * Cast into IObject
 */
struct C_IObject_t* CinfoPolicy_DbInfoStreamPolicy_getIObject(struct CinfoPolicy_DbInfoStreamPolicy_t* obj);

/**
 * Dynamic cast from IObject
 */
struct CinfoPolicy_DbInfoStreamPolicy_t* CinfoPolicy_DbInfoStreamPolicy_fromIObject(struct C_IObject_t* obj);

/**
 * Outputs this object in a human readable format
 */
int CinfoPolicy_DbInfoStreamPolicy_print(struct CinfoPolicy_DbInfoStreamPolicy_t* instance);

/**
 * Gets the type of this kind of objects
 */
int CinfoPolicy_DbInfoStreamPolicy_TYPE(int* ret);

/********************************************/
/* Implementation of DbInfoPolicy interface */
/********************************************/

/**
 * Get the value of policyObject
 */
int CinfoPolicy_DbInfoStreamPolicy_policyObject(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, struct CinfoPolicy_PolicyObj_t** var);

/**
 * Set the value of policyObject
 */
int CinfoPolicy_DbInfoStreamPolicy_setPolicyObject(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, struct CinfoPolicy_PolicyObj_t* new_var);

/***************************************/
/* Implementation of IObject interface */
/***************************************/

/**
 * Gets the type of the object
 */
int CinfoPolicy_DbInfoStreamPolicy_type(struct CinfoPolicy_DbInfoStreamPolicy_t* instance,
                                        int* ret);

/**
 * virtual method to clone any object
 */
int CinfoPolicy_DbInfoStreamPolicy_clone(struct CinfoPolicy_DbInfoStreamPolicy_t* instance,
                                         struct C_IObject_t* ret);

/**
 * Get the value of runningStream
 */
int CinfoPolicy_DbInfoStreamPolicy_runningStream(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64* var);

/**
 * Set the value of runningStream
 */
int CinfoPolicy_DbInfoStreamPolicy_setRunningStream(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64 new_var);

/**
 * Get the value of numFiles
 */
int CinfoPolicy_DbInfoStreamPolicy_numFiles(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64* var);

/**
 * Set the value of numFiles
 */
int CinfoPolicy_DbInfoStreamPolicy_setNumFiles(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64 new_var);

/**
 * Get the value of numBytes
 */
int CinfoPolicy_DbInfoStreamPolicy_numBytes(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64* var);

/**
 * Set the value of numBytes
 */
int CinfoPolicy_DbInfoStreamPolicy_setNumBytes(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64 new_var);

/**
 * Get the value of streamId
 */
int CinfoPolicy_DbInfoStreamPolicy_streamId(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64* var);

/**
 * Set the value of streamId
 */
int CinfoPolicy_DbInfoStreamPolicy_setStreamId(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64 new_var);

/**
 * Get the value of maxNumStreams
 */
int CinfoPolicy_DbInfoStreamPolicy_maxNumStreams(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64* var);

/**
 * Set the value of maxNumStreams
 */
int CinfoPolicy_DbInfoStreamPolicy_setMaxNumStreams(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64 new_var);

/**
 * Get the value of id
 * The id of this object
 */
int CinfoPolicy_DbInfoStreamPolicy_id(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64* var);

/**
 * Set the value of id
 * The id of this object
 */
int CinfoPolicy_DbInfoStreamPolicy_setId(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, u_signed64 new_var);

/**
 * Get the value of status
 */
int CinfoPolicy_DbInfoStreamPolicy_status(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, enum Cstager_StreamStatusCodes_t* var);

/**
 * Set the value of status
 */
int CinfoPolicy_DbInfoStreamPolicy_setStatus(struct CinfoPolicy_DbInfoStreamPolicy_t* instance, enum Cstager_StreamStatusCodes_t new_var);

#endif /* CASTOR_INFOPOLICY_DBINFOSTREAMPOLICY_H */
