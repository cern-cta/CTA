package cta.objectstore.serializers;

// The root entry: it point to an agent register and a job pool register.
// There is an integrated intent log, but the updates should be very rare (besides first registers creation).
message RootEntry {
  optional string agentregister = 1;
  repeated string agentregisterintentlog = 2;
  optional string jobpool = 3;
  optional string driveregister = 4;
  optional string taperegister = 5;
}

// The registers (simple name arrays)
message Register {
  repeated string elements = 100;
}

// The agent register needs an intent log in addition
message AgentRegister {
  repeated string elements = 110;
  repeated string intendedElements = 111;
}

// A basic FIFO
// poping is done by increasing the read pointer, and from time to time
// collapsing the name array.
// There is no write pointer because we always append at the end of the name
// array.
message FIFO {
  required uint64 readPointer = 200;
  repeated string name = 201;
}

enum ObjectType {
  RootEntry_t = 0;
  AgentRegister_t = 1;
  Agent_t = 2;
  JobPool_t = 3;
  RecallFIFO_t = 4;
  MigrationFIFO_t = 5;
  RecallJob_t = 6;
}

// The agents's elements:
message ObjectCreationIntent {
  required ObjectType type = 1101;
  required string name = 1102;
  required string container = 1103;
}

message ObjectOwnershipIntent {
  required ObjectType type = 1111;
  required string name = 1112;
}

// The agent (session) record.
message Agent {
  required string name = 1000;
  repeated ObjectCreationIntent creationintent = 1001;
  repeated ObjectOwnershipIntent ownershipintent = 1002;
  required int64 heartbeatcount = 1003;
}

// The tape record
message Tape {
  required string type = 2001;
  required string format = 2002;
  required string vid = 2003;
  required uint64 maxFseq = 2004;
  required string status = 2005 ;
}

// The drive record
message Drive {
  required string name = 3001;
  required string status = 3002;
}

// The jobs
message MigrationJob {
  required string owner = 4001;
  required string status = 4002;
  required string source = 4003;
  required string destination = 4004;
}

message RecallJob {
  required string owner = 5001;
  required string status = 5002;
  required string source = 5003;
  required string destination = 5004;
}

// The job pool
message JobPool {
  required string migration = 7001;
  required string recall = 7002;
}
