#!/usr/bin/python
#/******************************************************************************
# *                      cleanZeroCastorfileRecalls
# *
# * This file is part of the Castor project.
# * See http://castor.web.cern.ch/castor
# *
# * Copyright (C) 2003  CERN
# * This program is free software; you can redistribute it and/or
# * modify it under the terms of the GNU General Public License
# * as published by the Free Software Foundation; either version 2
# * of the License, or (at your option) any later version.
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# *
# * @author castor dev team
# *****************************************************************************/

'''Implemetnation of SR127104's workaround: removal of orphaned DB structure: recalljob with zero castorfile'''

import sys
import getopt
import castor_tools

# usage function
def usage(exitCode):
    '''prints usage'''
    print 'Usage : ' + sys.argv[0] + ' [-h|--help]'
    sys.exit(exitCode)

# first parse the options
try:
    options, args = getopt.getopt(sys.argv[1:], 'h', ['help', 'verbose'])
except Exception, e:
    print e
    usage(1)
for f, v in options:
    if f == '-h' or f == '--help':
        usage(0)
    else:
        print "unknown option : " + f
        usage(1)

# Deal with arguments
if len(args) > 0:
    print "Too many arguments. You can't argue with this script."
    usage(1)

try:
    # connect to stager
    stconn = castor_tools.connectToStager()
    stcur = stconn.cursor()
    # list the orphaned files
    stcur.execute('''SELECT t.vid, seg.fseq
                       FROM recalljob rj
                       LEFT OUTER JOIN segment seg ON seg.copy = rj.id
                       LEFT OUTER JOIN tape t ON t.id = seg.tape
                      WHERE rj.castorfile = 0''')
    rows = stcur.fetchall()
    for vid, fseq in rows:
        print 'Orphaned recall job with castorfile=0: VID=%s, fseq=%d' % (vid, fseq)
    # removal
    stcur.execute('''DELETE FROM segment
                      WHERE copy IN (SELECT id 
                                       FROM recalljob
                                      WHERE castorfile=0)''')
    stcur.execute('''DELETE FROM recalljob WHERE castorfile=0''')
    stconn.commit()
    # close DB connection
    try:
        castor_tools.disconnectDB(stconn)
    except Exception:
        pass
except Exception, e:
    print e
    if verbose:
        import traceback
        traceback.print_exc()
    sys.exit(-1)
