#!/usr/bin/python
#/******************************************************************************
# *                      modifytapepool
# *
# * This file is part of the Castor project.
# * See http://castor.web.cern.ch/castor
# *
# * Copyright (C) 2003  CERN
# * This program is free software; you can redistribute it and/or
# * modify it under the terms of the GNU General Public License
# * as published by the Free Software Foundation; either version 2
# * of the License, or (at your option) any later version.
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# *
# * @author castor dev team
# *****************************************************************************/

'''allows to modify an existing tape pool in the castor stager'''

import sys, re, os, pwd
import getopt
import castor_tools

# usage function
def usage(exitCode):
    '''prints usage'''
    print 'Usage : ' + sys.argv[0] + ' [-h|--help] [--nbdrives <nbDrives>] ' + \
          '[--minamountdata <minAmountDataForAMount>] [--minnbfiles <minNbFilesForAMount>] ' + \
          '[--maxfileage <maxFileAgeBeforeForcedMount>] <tapePoolName>'
    sys.exit(exitCode)

# first parse the options
try:
    options, args = getopt.getopt(sys.argv[1:], 'hvm:', ['help', 'verbose', 'nbdrives=', 'minamountdata=',
                                                       'minnbfiles=', 'maxfileage='])
except Exception, e:
    print e
    usage(1)
verbose = False
nbdrives = None
minamountdata = None
minnbfiles = None
maxfileage = None
for f, v in options:
    if f == '-h' or f == '--help':
        usage(0)
    elif f == '-v' or f == '--verbose':
        verbose = True
    elif f == '--nbdrives':
        nbdrives = castor_tools.parsePositiveInt('nbdrives', v)
    elif f == '--minamountdata':
        minamountdata = castor_tools.parseDataAmount('minamountdata', v)
    elif f == '--minnbfiles':
        minnbfiles = castor_tools.parsePositiveInt('minnbfiles', v)
    elif f == '--maxfileage':
        maxfileage = castor_tools.parseTimeDuration('maxfileage', v)
    else:
        print "unknown option : " + f
        usage(1)

# Deal with arguments
if len(args) == 0:
    print "Missing arguments"
    usage(1)
elif len(args) > 1:
    print "Too many arguments"
    usage(1)
else:
    tapepoolname = args[0]

# check we have something to do
if nbdrives == None and minamountdata == None and minnbfiles == None and maxfileage == None:
    print 'Nothing to modify. Did you forget some argument ?'
    usage(1)

try:
    # connect to stager
    stconn = castor_tools.connectToStager()
    stcur = stconn.cursor()
    # check that the tape pool exists
    stcur.execute('SELECT id FROM TapePool WHERE name=:name', name=tapepoolname)
    rows = stcur.fetchall()
    if len(rows) == 0:
        print 'TapePool %s does not exist in the stager DB' % tapepoolname
        print 'Please use entertapepool if you would like to create it'
        sys.exit(1)
    tapePoolId = rows[0][0]
    # deal with the update
    if nbdrives != None:
        stcur.execute('UPDATE TapePool SET nbDrives=:value WHERE id = :tapePoolId', value=nbdrives, tapePoolId=tapePoolId)
    if minamountdata != None:
        stcur.execute('UPDATE TapePool SET minAmountdataForMount=:value WHERE id = :tapePoolId', value=minamountdata, tapePoolId=tapePoolId)
    if minnbfiles != None:
        stcur.execute('UPDATE TapePool SET minNbFilesForMount=:value WHERE id = :tapePoolId', value=minnbfiles, tapePoolId=tapePoolId)
    if maxfileage != None:
        stcur.execute('UPDATE TapePool SET maxFileAgeBeforeMount=:value WHERE id = :tapePoolId', value=maxfileage, tapePoolId=tapePoolId)
    # in all cases, update the lastEditor and lastEditionTime
    lasteditor = pwd.getpwuid(os.getuid())[0]
    stcur.execute('UPDATE TapePool SET lastEditor=:lasteditor, lastEditionTime=gettime() WHERE id = :tapePoolId', lasteditor=lasteditor, tapePoolId=tapePoolId)
    # commit insertion and tell user
    stconn.commit()
    print 'modified tape pool %s successfully' % tapepoolname
    # close DB connections
    try:
        castor_tools.disconnectDB(stconn)
    except Exception:
        pass
except Exception, e:
    print e
    if verbose:
        import traceback
        traceback.print_exc()
    sys.exit(-1)
