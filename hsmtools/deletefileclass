#!/usr/bin/python
#/******************************************************************************
# *                      deletefileclass
# *
# * This file is part of the Castor project.
# * See http://castor.web.cern.ch/castor
# *
# * Copyright (C) 2003  CERN
# * This program is free software; you can redistribute it and/or
# * modify it under the terms of the GNU General Public License
# * as published by the Free Software Foundation; either version 2
# * of the License, or (at your option) any later version.
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# *
# * @author Castor Dev team, castor-dev@cern.ch
# *****************************************************************************/

'''command line deleting the given file class(es)'''

import sys
import getopt
import castor_tools

# usage function
def usage(exitCode):
    '''prints usage'''
    print 'Usage : ' + sys.argv[0] + ' [-h|--help] <fileClassName>[:...]'
    sys.exit(exitCode)

# first parse the options
try:
    options, args = getopt.getopt(sys.argv[1:], 'hv', ['help', 'verbose'])
except Exception, e:
    print e
    usage(1)
verbose = False
for f, v in options:
    if f == '-h' or f == '--help':
        usage(0)
    elif f == '-v' or f == '--verbose':
        verbose = True
    else:
        print "unknown option : " + f
        usage(1)

# Deal with arguments
fileClasses = set([])
if len(args) != 0:
    fileClasses = set(args[0].split(':'))
else:
    print "Missing arguments"
    usage(1)

try:
    # connect to stager
    stconn = castor_tools.connectToStager()
    stcur = stconn.cursor()
    # check file class existence
    stcur.execute("SELECT name FROM FileClass WHERE name IN ('" + "', '".join(fileClasses) + "')")
    existingFileClasses = set([row[0] for row in stcur.fetchall()])
    nonexitingFileClasses = fileClasses - existingFileClasses
    # drop fileclasses
    if existingFileClasses:
        stcur.execute("DELETE FROM FileClass WHERE name IN ('" + "', '".join(existingFileClasses) + "')")
        stconn.commit()
        # loop over fileclasses and delete them from stager
        print 'successfully dropped the following file classes : ' + ', '.join(existingFileClasses)
    # warn for non existing file classes
    if nonexitingFileClasses:
        print 'WARNING : some file classes did not exist : ' + ', '.join(nonexitingFileClasses)
    # close DB connections
    try:
        castor_tools.disconnectDB(stconn)
    except Exception:
        pass
except Exception, e:
    print e
    if verbose:
        import traceback
        traceback.print_exc()
    sys.exit(-1)
