syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.dcache.cta.rpc";
option optimize_for = CODE_SIZE;
package cta.dcache.rpc;

import "google/protobuf/empty.proto";

import "cta_common.proto";
import "cta_admin.proto";
import "cta_eos.proto";

//
// gRPC interface to CTA frontend
//

/*
 * File metadata
 */
message FileInfo {
  string fid = 1; // disk system unique file ID
  uint64 size = 2; // file size
  string storageClass = 3; // tape system related storage class (file family)
  cta.common.ChecksumBlob csb = 4; // set of knows checksums for the given file
}

/*
 * Response to the ARCHIVE request.
 */
message ArchiveResponse {
  uint64 fid = 1; // tape system unique file ID
  string reqId = 2; // tape request scheduler ID, used to cancel the request
}

/*
 * Response to the RETRIEVE request.
 */
message RetrieveResponse {
  string reqId = 1; // tape request scheduler ID, used to cancel the request
}


/*
 * ARCHIVE request.
 */
message ArchiveRequest {
  cta.common.Service instance = 1;  // client instance ID
  cta.eos.Client cli = 2;      // requester information
  cta.eos.Transport transport = 3;      // IO, error and success endpoints
  FileInfo file = 4;      // files' metadata
}

/*
 * RETRIEVE request.
 */
message RetrieveRequest {
  cta.common.Service instance = 1;  // client instance ID
  cta.eos.Client cli = 2;      // requester information
  cta.eos.Transport transport = 3;      // IO, error and success endpoints
  FileInfo file = 4;      // files' metadata
  uint64 archiveId = 5; // tape system unique file ID
}

/*
 * DELETE request.
 */
message DeleteRequest {
  cta.common.Service instance = 1;  // client instance ID
  cta.eos.Client cli = 2;      // requester information
  FileInfo file = 3;      // files' metadata
  uint64 archiveId = 4; // tape system unique file ID
}

/*
 * CANCEL RETRIEVE request.
 */
message CancelRetrieveRequest {
  cta.common.Service instance = 1;  // client instance ID
  cta.eos.Client cli = 2;      // requester information
  uint64 fid = 3; // tape system unique file ID
  string reqId = 4; // tape request scheduler ID, used to cancel the request
}

service CtaRpc {
  rpc Version (google.protobuf.Empty) returns (cta.admin.Version) {}

  rpc Archive (ArchiveRequest) returns (ArchiveResponse) {}
  rpc Retrieve (RetrieveRequest) returns (RetrieveResponse) {}
  rpc Delete (DeleteRequest) returns (google.protobuf.Empty) {}
  rpc CancelRetrieve (CancelRetrieveRequest) returns (google.protobuf.Empty) {}

}